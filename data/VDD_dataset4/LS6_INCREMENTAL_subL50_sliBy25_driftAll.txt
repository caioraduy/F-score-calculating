there are : 2496 values left after deleting 100, and 0s
there were: 2590 vectors with zeros removed
there were: 314 vectors with hundreds removed
there were: 0 vectors with non changing values removed
there were : 248 values
sorted: 1 out of: 248
sorted: 2 out of: 248
sorted: 3 out of: 248
sorted: 4 out of: 248
sorted: 5 out of: 248
sorted: 6 out of: 248
sorted: 7 out of: 248
sorted: 8 out of: 248
sorted: 9 out of: 248
sorted: 10 out of: 248
sorted: 11 out of: 248
sorted: 12 out of: 248
sorted: 13 out of: 248
sorted: 14 out of: 248
sorted: 15 out of: 248
sorted: 16 out of: 248
sorted: 17 out of: 248
sorted: 18 out of: 248
sorted: 19 out of: 248
sorted: 20 out of: 248
sorted: 21 out of: 248
sorted: 22 out of: 248
sorted: 23 out of: 248
sorted: 24 out of: 248
sorted: 25 out of: 248
sorted: 26 out of: 248
sorted: 27 out of: 248
sorted: 28 out of: 248
sorted: 29 out of: 248
sorted: 30 out of: 248
sorted: 31 out of: 248
sorted: 32 out of: 248
sorted: 33 out of: 248
sorted: 34 out of: 248
sorted: 35 out of: 248
sorted: 36 out of: 248
sorted: 37 out of: 248
sorted: 38 out of: 248
sorted: 39 out of: 248
sorted: 40 out of: 248
sorted: 41 out of: 248
sorted: 42 out of: 248
sorted: 43 out of: 248
sorted: 44 out of: 248
sorted: 45 out of: 248
sorted: 46 out of: 248
sorted: 47 out of: 248
sorted: 48 out of: 248
sorted: 49 out of: 248
sorted: 50 out of: 248
sorted: 51 out of: 248
sorted: 52 out of: 248
sorted: 53 out of: 248
sorted: 54 out of: 248
sorted: 55 out of: 248
sorted: 56 out of: 248
sorted: 57 out of: 248
sorted: 58 out of: 248
sorted: 59 out of: 248
sorted: 60 out of: 248
sorted: 61 out of: 248
sorted: 62 out of: 248
sorted: 63 out of: 248
sorted: 64 out of: 248
sorted: 65 out of: 248
sorted: 66 out of: 248
sorted: 67 out of: 248
sorted: 68 out of: 248
sorted: 69 out of: 248
sorted: 70 out of: 248
sorted: 71 out of: 248
sorted: 72 out of: 248
sorted: 73 out of: 248
sorted: 74 out of: 248
sorted: 75 out of: 248
sorted: 76 out of: 248
sorted: 77 out of: 248
sorted: 78 out of: 248
sorted: 79 out of: 248
sorted: 80 out of: 248
sorted: 81 out of: 248
sorted: 82 out of: 248
sorted: 83 out of: 248
sorted: 84 out of: 248
sorted: 85 out of: 248
sorted: 86 out of: 248
sorted: 87 out of: 248
sorted: 88 out of: 248
sorted: 89 out of: 248
sorted: 90 out of: 248
sorted: 91 out of: 248
sorted: 92 out of: 248
sorted: 93 out of: 248
sorted: 94 out of: 248
sorted: 95 out of: 248
sorted: 96 out of: 248
sorted: 97 out of: 248
sorted: 98 out of: 248
sorted: 99 out of: 248
sorted: 100 out of: 248
sorted: 101 out of: 248
sorted: 102 out of: 248
sorted: 103 out of: 248
sorted: 104 out of: 248
sorted: 105 out of: 248
sorted: 106 out of: 248
sorted: 107 out of: 248
sorted: 108 out of: 248
sorted: 109 out of: 248
sorted: 110 out of: 248
sorted: 111 out of: 248
sorted: 112 out of: 248
sorted: 113 out of: 248
sorted: 114 out of: 248
sorted: 115 out of: 248
sorted: 116 out of: 248
sorted: 117 out of: 248
sorted: 118 out of: 248
sorted: 119 out of: 248
sorted: 120 out of: 248
sorted: 121 out of: 248
sorted: 122 out of: 248
sorted: 123 out of: 248
sorted: 124 out of: 248
sorted: 125 out of: 248
sorted: 126 out of: 248
sorted: 127 out of: 248
sorted: 128 out of: 248
sorted: 129 out of: 248
sorted: 130 out of: 248
sorted: 131 out of: 248
sorted: 132 out of: 248
sorted: 133 out of: 248
sorted: 134 out of: 248
sorted: 135 out of: 248
sorted: 136 out of: 248
sorted: 137 out of: 248
sorted: 138 out of: 248
sorted: 139 out of: 248
sorted: 140 out of: 248
sorted: 141 out of: 248
sorted: 142 out of: 248
sorted: 143 out of: 248
sorted: 144 out of: 248
sorted: 145 out of: 248
sorted: 146 out of: 248
sorted: 147 out of: 248
sorted: 148 out of: 248
sorted: 149 out of: 248
sorted: 150 out of: 248
sorted: 151 out of: 248
sorted: 152 out of: 248
sorted: 153 out of: 248
sorted: 154 out of: 248
sorted: 155 out of: 248
sorted: 156 out of: 248
sorted: 157 out of: 248
sorted: 158 out of: 248
sorted: 159 out of: 248
sorted: 160 out of: 248
sorted: 161 out of: 248
sorted: 162 out of: 248
sorted: 163 out of: 248
sorted: 164 out of: 248
sorted: 165 out of: 248
sorted: 166 out of: 248
sorted: 167 out of: 248
sorted: 168 out of: 248
sorted: 169 out of: 248
sorted: 170 out of: 248
sorted: 171 out of: 248
sorted: 172 out of: 248
sorted: 173 out of: 248
sorted: 174 out of: 248
sorted: 175 out of: 248
sorted: 176 out of: 248
sorted: 177 out of: 248
sorted: 178 out of: 248
sorted: 179 out of: 248
sorted: 180 out of: 248
sorted: 181 out of: 248
sorted: 182 out of: 248
sorted: 183 out of: 248
sorted: 184 out of: 248
sorted: 185 out of: 248
sorted: 186 out of: 248
sorted: 187 out of: 248
sorted: 188 out of: 248
sorted: 189 out of: 248
sorted: 190 out of: 248
sorted: 191 out of: 248
sorted: 192 out of: 248
sorted: 193 out of: 248
sorted: 194 out of: 248
sorted: 195 out of: 248
sorted: 196 out of: 248
sorted: 197 out of: 248
sorted: 198 out of: 248
sorted: 199 out of: 248
sorted: 200 out of: 248
sorted: 201 out of: 248
sorted: 202 out of: 248
sorted: 203 out of: 248
sorted: 204 out of: 248
sorted: 205 out of: 248
sorted: 206 out of: 248
sorted: 207 out of: 248
sorted: 208 out of: 248
sorted: 209 out of: 248
sorted: 210 out of: 248
sorted: 211 out of: 248
sorted: 212 out of: 248
sorted: 213 out of: 248
sorted: 214 out of: 248
sorted: 215 out of: 248
sorted: 216 out of: 248
sorted: 217 out of: 248
sorted: 218 out of: 248
sorted: 219 out of: 248
sorted: 220 out of: 248
sorted: 221 out of: 248
sorted: 222 out of: 248
sorted: 223 out of: 248
sorted: 224 out of: 248
sorted: 225 out of: 248
sorted: 226 out of: 248
sorted: 227 out of: 248
sorted: 228 out of: 248
sorted: 229 out of: 248
sorted: 230 out of: 248
sorted: 231 out of: 248
sorted: 232 out of: 248
sorted: 233 out of: 248
sorted: 234 out of: 248
sorted: 235 out of: 248
sorted: 236 out of: 248
sorted: 237 out of: 248
sorted: 238 out of: 248
sorted: 239 out of: 248
sorted: 240 out of: 248
sorted: 241 out of: 248
sorted: 242 out of: 248
sorted: 243 out of: 248
sorted: 244 out of: 248
sorted: 245 out of: 248
sorted: 246 out of: 248
sorted: 247 out of: 248
sorted: 248 out of: 248
Cluster size: 248
there were : 206 values
sorted: 1 out of: 206
sorted: 2 out of: 206
sorted: 3 out of: 206
sorted: 4 out of: 206
sorted: 5 out of: 206
sorted: 6 out of: 206
sorted: 7 out of: 206
sorted: 8 out of: 206
sorted: 9 out of: 206
sorted: 10 out of: 206
sorted: 11 out of: 206
sorted: 12 out of: 206
sorted: 13 out of: 206
sorted: 14 out of: 206
sorted: 15 out of: 206
sorted: 16 out of: 206
sorted: 17 out of: 206
sorted: 18 out of: 206
sorted: 19 out of: 206
sorted: 20 out of: 206
sorted: 21 out of: 206
sorted: 22 out of: 206
sorted: 23 out of: 206
sorted: 24 out of: 206
sorted: 25 out of: 206
sorted: 26 out of: 206
sorted: 27 out of: 206
sorted: 28 out of: 206
sorted: 29 out of: 206
sorted: 30 out of: 206
sorted: 31 out of: 206
sorted: 32 out of: 206
sorted: 33 out of: 206
sorted: 34 out of: 206
sorted: 35 out of: 206
sorted: 36 out of: 206
sorted: 37 out of: 206
sorted: 38 out of: 206
sorted: 39 out of: 206
sorted: 40 out of: 206
sorted: 41 out of: 206
sorted: 42 out of: 206
sorted: 43 out of: 206
sorted: 44 out of: 206
sorted: 45 out of: 206
sorted: 46 out of: 206
sorted: 47 out of: 206
sorted: 48 out of: 206
sorted: 49 out of: 206
sorted: 50 out of: 206
sorted: 51 out of: 206
sorted: 52 out of: 206
sorted: 53 out of: 206
sorted: 54 out of: 206
sorted: 55 out of: 206
sorted: 56 out of: 206
sorted: 57 out of: 206
sorted: 58 out of: 206
sorted: 59 out of: 206
sorted: 60 out of: 206
sorted: 61 out of: 206
sorted: 62 out of: 206
sorted: 63 out of: 206
sorted: 64 out of: 206
sorted: 65 out of: 206
sorted: 66 out of: 206
sorted: 67 out of: 206
sorted: 68 out of: 206
sorted: 69 out of: 206
sorted: 70 out of: 206
sorted: 71 out of: 206
sorted: 72 out of: 206
sorted: 73 out of: 206
sorted: 74 out of: 206
sorted: 75 out of: 206
sorted: 76 out of: 206
sorted: 77 out of: 206
sorted: 78 out of: 206
sorted: 79 out of: 206
sorted: 80 out of: 206
sorted: 81 out of: 206
sorted: 82 out of: 206
sorted: 83 out of: 206
sorted: 84 out of: 206
sorted: 85 out of: 206
sorted: 86 out of: 206
sorted: 87 out of: 206
sorted: 88 out of: 206
sorted: 89 out of: 206
sorted: 90 out of: 206
sorted: 91 out of: 206
sorted: 92 out of: 206
sorted: 93 out of: 206
sorted: 94 out of: 206
sorted: 95 out of: 206
sorted: 96 out of: 206
sorted: 97 out of: 206
sorted: 98 out of: 206
sorted: 99 out of: 206
sorted: 100 out of: 206
sorted: 101 out of: 206
sorted: 102 out of: 206
sorted: 103 out of: 206
sorted: 104 out of: 206
sorted: 105 out of: 206
sorted: 106 out of: 206
sorted: 107 out of: 206
sorted: 108 out of: 206
sorted: 109 out of: 206
sorted: 110 out of: 206
sorted: 111 out of: 206
sorted: 112 out of: 206
sorted: 113 out of: 206
sorted: 114 out of: 206
sorted: 115 out of: 206
sorted: 116 out of: 206
sorted: 117 out of: 206
sorted: 118 out of: 206
sorted: 119 out of: 206
sorted: 120 out of: 206
sorted: 121 out of: 206
sorted: 122 out of: 206
sorted: 123 out of: 206
sorted: 124 out of: 206
sorted: 125 out of: 206
sorted: 126 out of: 206
sorted: 127 out of: 206
sorted: 128 out of: 206
sorted: 129 out of: 206
sorted: 130 out of: 206
sorted: 131 out of: 206
sorted: 132 out of: 206
sorted: 133 out of: 206
sorted: 134 out of: 206
sorted: 135 out of: 206
sorted: 136 out of: 206
sorted: 137 out of: 206
sorted: 138 out of: 206
sorted: 139 out of: 206
sorted: 140 out of: 206
sorted: 141 out of: 206
sorted: 142 out of: 206
sorted: 143 out of: 206
sorted: 144 out of: 206
sorted: 145 out of: 206
sorted: 146 out of: 206
sorted: 147 out of: 206
sorted: 148 out of: 206
sorted: 149 out of: 206
sorted: 150 out of: 206
sorted: 151 out of: 206
sorted: 152 out of: 206
sorted: 153 out of: 206
sorted: 154 out of: 206
sorted: 155 out of: 206
sorted: 156 out of: 206
sorted: 157 out of: 206
sorted: 158 out of: 206
sorted: 159 out of: 206
sorted: 160 out of: 206
sorted: 161 out of: 206
sorted: 162 out of: 206
sorted: 163 out of: 206
sorted: 164 out of: 206
sorted: 165 out of: 206
sorted: 166 out of: 206
sorted: 167 out of: 206
sorted: 168 out of: 206
sorted: 169 out of: 206
sorted: 170 out of: 206
sorted: 171 out of: 206
sorted: 172 out of: 206
sorted: 173 out of: 206
sorted: 174 out of: 206
sorted: 175 out of: 206
sorted: 176 out of: 206
sorted: 177 out of: 206
sorted: 178 out of: 206
sorted: 179 out of: 206
sorted: 180 out of: 206
sorted: 181 out of: 206
sorted: 182 out of: 206
sorted: 183 out of: 206
sorted: 184 out of: 206
sorted: 185 out of: 206
sorted: 186 out of: 206
sorted: 187 out of: 206
sorted: 188 out of: 206
sorted: 189 out of: 206
sorted: 190 out of: 206
sorted: 191 out of: 206
sorted: 192 out of: 206
sorted: 193 out of: 206
sorted: 194 out of: 206
sorted: 195 out of: 206
sorted: 196 out of: 206
sorted: 197 out of: 206
sorted: 198 out of: 206
sorted: 199 out of: 206
sorted: 200 out of: 206
sorted: 201 out of: 206
sorted: 202 out of: 206
sorted: 203 out of: 206
sorted: 204 out of: 206
sorted: 205 out of: 206
sorted: 206 out of: 206
Cluster size: 206
there were : 203 values
sorted: 1 out of: 203
sorted: 2 out of: 203
sorted: 3 out of: 203
sorted: 4 out of: 203
sorted: 5 out of: 203
sorted: 6 out of: 203
sorted: 7 out of: 203
sorted: 8 out of: 203
sorted: 9 out of: 203
sorted: 10 out of: 203
sorted: 11 out of: 203
sorted: 12 out of: 203
sorted: 13 out of: 203
sorted: 14 out of: 203
sorted: 15 out of: 203
sorted: 16 out of: 203
sorted: 17 out of: 203
sorted: 18 out of: 203
sorted: 19 out of: 203
sorted: 20 out of: 203
sorted: 21 out of: 203
sorted: 22 out of: 203
sorted: 23 out of: 203
sorted: 24 out of: 203
sorted: 25 out of: 203
sorted: 26 out of: 203
sorted: 27 out of: 203
sorted: 28 out of: 203
sorted: 29 out of: 203
sorted: 30 out of: 203
sorted: 31 out of: 203
sorted: 32 out of: 203
sorted: 33 out of: 203
sorted: 34 out of: 203
sorted: 35 out of: 203
sorted: 36 out of: 203
sorted: 37 out of: 203
sorted: 38 out of: 203
sorted: 39 out of: 203
sorted: 40 out of: 203
sorted: 41 out of: 203
sorted: 42 out of: 203
sorted: 43 out of: 203
sorted: 44 out of: 203
sorted: 45 out of: 203
sorted: 46 out of: 203
sorted: 47 out of: 203
sorted: 48 out of: 203
sorted: 49 out of: 203
sorted: 50 out of: 203
sorted: 51 out of: 203
sorted: 52 out of: 203
sorted: 53 out of: 203
sorted: 54 out of: 203
sorted: 55 out of: 203
sorted: 56 out of: 203
sorted: 57 out of: 203
sorted: 58 out of: 203
sorted: 59 out of: 203
sorted: 60 out of: 203
sorted: 61 out of: 203
sorted: 62 out of: 203
sorted: 63 out of: 203
sorted: 64 out of: 203
sorted: 65 out of: 203
sorted: 66 out of: 203
sorted: 67 out of: 203
sorted: 68 out of: 203
sorted: 69 out of: 203
sorted: 70 out of: 203
sorted: 71 out of: 203
sorted: 72 out of: 203
sorted: 73 out of: 203
sorted: 74 out of: 203
sorted: 75 out of: 203
sorted: 76 out of: 203
sorted: 77 out of: 203
sorted: 78 out of: 203
sorted: 79 out of: 203
sorted: 80 out of: 203
sorted: 81 out of: 203
sorted: 82 out of: 203
sorted: 83 out of: 203
sorted: 84 out of: 203
sorted: 85 out of: 203
sorted: 86 out of: 203
sorted: 87 out of: 203
sorted: 88 out of: 203
sorted: 89 out of: 203
sorted: 90 out of: 203
sorted: 91 out of: 203
sorted: 92 out of: 203
sorted: 93 out of: 203
sorted: 94 out of: 203
sorted: 95 out of: 203
sorted: 96 out of: 203
sorted: 97 out of: 203
sorted: 98 out of: 203
sorted: 99 out of: 203
sorted: 100 out of: 203
sorted: 101 out of: 203
sorted: 102 out of: 203
sorted: 103 out of: 203
sorted: 104 out of: 203
sorted: 105 out of: 203
sorted: 106 out of: 203
sorted: 107 out of: 203
sorted: 108 out of: 203
sorted: 109 out of: 203
sorted: 110 out of: 203
sorted: 111 out of: 203
sorted: 112 out of: 203
sorted: 113 out of: 203
sorted: 114 out of: 203
sorted: 115 out of: 203
sorted: 116 out of: 203
sorted: 117 out of: 203
sorted: 118 out of: 203
sorted: 119 out of: 203
sorted: 120 out of: 203
sorted: 121 out of: 203
sorted: 122 out of: 203
sorted: 123 out of: 203
sorted: 124 out of: 203
sorted: 125 out of: 203
sorted: 126 out of: 203
sorted: 127 out of: 203
sorted: 128 out of: 203
sorted: 129 out of: 203
sorted: 130 out of: 203
sorted: 131 out of: 203
sorted: 132 out of: 203
sorted: 133 out of: 203
sorted: 134 out of: 203
sorted: 135 out of: 203
sorted: 136 out of: 203
sorted: 137 out of: 203
sorted: 138 out of: 203
sorted: 139 out of: 203
sorted: 140 out of: 203
sorted: 141 out of: 203
sorted: 142 out of: 203
sorted: 143 out of: 203
sorted: 144 out of: 203
sorted: 145 out of: 203
sorted: 146 out of: 203
sorted: 147 out of: 203
sorted: 148 out of: 203
sorted: 149 out of: 203
sorted: 150 out of: 203
sorted: 151 out of: 203
sorted: 152 out of: 203
sorted: 153 out of: 203
sorted: 154 out of: 203
sorted: 155 out of: 203
sorted: 156 out of: 203
sorted: 157 out of: 203
sorted: 158 out of: 203
sorted: 159 out of: 203
sorted: 160 out of: 203
sorted: 161 out of: 203
sorted: 162 out of: 203
sorted: 163 out of: 203
sorted: 164 out of: 203
sorted: 165 out of: 203
sorted: 166 out of: 203
sorted: 167 out of: 203
sorted: 168 out of: 203
sorted: 169 out of: 203
sorted: 170 out of: 203
sorted: 171 out of: 203
sorted: 172 out of: 203
sorted: 173 out of: 203
sorted: 174 out of: 203
sorted: 175 out of: 203
sorted: 176 out of: 203
sorted: 177 out of: 203
sorted: 178 out of: 203
sorted: 179 out of: 203
sorted: 180 out of: 203
sorted: 181 out of: 203
sorted: 182 out of: 203
sorted: 183 out of: 203
sorted: 184 out of: 203
sorted: 185 out of: 203
sorted: 186 out of: 203
sorted: 187 out of: 203
sorted: 188 out of: 203
sorted: 189 out of: 203
sorted: 190 out of: 203
sorted: 191 out of: 203
sorted: 192 out of: 203
sorted: 193 out of: 203
sorted: 194 out of: 203
sorted: 195 out of: 203
sorted: 196 out of: 203
sorted: 197 out of: 203
sorted: 198 out of: 203
sorted: 199 out of: 203
sorted: 200 out of: 203
sorted: 201 out of: 203
sorted: 202 out of: 203
sorted: 203 out of: 203
Cluster size: 203
there were : 177 values
sorted: 1 out of: 177
sorted: 2 out of: 177
sorted: 3 out of: 177
sorted: 4 out of: 177
sorted: 5 out of: 177
sorted: 6 out of: 177
sorted: 7 out of: 177
sorted: 8 out of: 177
sorted: 9 out of: 177
sorted: 10 out of: 177
sorted: 11 out of: 177
sorted: 12 out of: 177
sorted: 13 out of: 177
sorted: 14 out of: 177
sorted: 15 out of: 177
sorted: 16 out of: 177
sorted: 17 out of: 177
sorted: 18 out of: 177
sorted: 19 out of: 177
sorted: 20 out of: 177
sorted: 21 out of: 177
sorted: 22 out of: 177
sorted: 23 out of: 177
sorted: 24 out of: 177
sorted: 25 out of: 177
sorted: 26 out of: 177
sorted: 27 out of: 177
sorted: 28 out of: 177
sorted: 29 out of: 177
sorted: 30 out of: 177
sorted: 31 out of: 177
sorted: 32 out of: 177
sorted: 33 out of: 177
sorted: 34 out of: 177
sorted: 35 out of: 177
sorted: 36 out of: 177
sorted: 37 out of: 177
sorted: 38 out of: 177
sorted: 39 out of: 177
sorted: 40 out of: 177
sorted: 41 out of: 177
sorted: 42 out of: 177
sorted: 43 out of: 177
sorted: 44 out of: 177
sorted: 45 out of: 177
sorted: 46 out of: 177
sorted: 47 out of: 177
sorted: 48 out of: 177
sorted: 49 out of: 177
sorted: 50 out of: 177
sorted: 51 out of: 177
sorted: 52 out of: 177
sorted: 53 out of: 177
sorted: 54 out of: 177
sorted: 55 out of: 177
sorted: 56 out of: 177
sorted: 57 out of: 177
sorted: 58 out of: 177
sorted: 59 out of: 177
sorted: 60 out of: 177
sorted: 61 out of: 177
sorted: 62 out of: 177
sorted: 63 out of: 177
sorted: 64 out of: 177
sorted: 65 out of: 177
sorted: 66 out of: 177
sorted: 67 out of: 177
sorted: 68 out of: 177
sorted: 69 out of: 177
sorted: 70 out of: 177
sorted: 71 out of: 177
sorted: 72 out of: 177
sorted: 73 out of: 177
sorted: 74 out of: 177
sorted: 75 out of: 177
sorted: 76 out of: 177
sorted: 77 out of: 177
sorted: 78 out of: 177
sorted: 79 out of: 177
sorted: 80 out of: 177
sorted: 81 out of: 177
sorted: 82 out of: 177
sorted: 83 out of: 177
sorted: 84 out of: 177
sorted: 85 out of: 177
sorted: 86 out of: 177
sorted: 87 out of: 177
sorted: 88 out of: 177
sorted: 89 out of: 177
sorted: 90 out of: 177
sorted: 91 out of: 177
sorted: 92 out of: 177
sorted: 93 out of: 177
sorted: 94 out of: 177
sorted: 95 out of: 177
sorted: 96 out of: 177
sorted: 97 out of: 177
sorted: 98 out of: 177
sorted: 99 out of: 177
sorted: 100 out of: 177
sorted: 101 out of: 177
sorted: 102 out of: 177
sorted: 103 out of: 177
sorted: 104 out of: 177
sorted: 105 out of: 177
sorted: 106 out of: 177
sorted: 107 out of: 177
sorted: 108 out of: 177
sorted: 109 out of: 177
sorted: 110 out of: 177
sorted: 111 out of: 177
sorted: 112 out of: 177
sorted: 113 out of: 177
sorted: 114 out of: 177
sorted: 115 out of: 177
sorted: 116 out of: 177
sorted: 117 out of: 177
sorted: 118 out of: 177
sorted: 119 out of: 177
sorted: 120 out of: 177
sorted: 121 out of: 177
sorted: 122 out of: 177
sorted: 123 out of: 177
sorted: 124 out of: 177
sorted: 125 out of: 177
sorted: 126 out of: 177
sorted: 127 out of: 177
sorted: 128 out of: 177
sorted: 129 out of: 177
sorted: 130 out of: 177
sorted: 131 out of: 177
sorted: 132 out of: 177
sorted: 133 out of: 177
sorted: 134 out of: 177
sorted: 135 out of: 177
sorted: 136 out of: 177
sorted: 137 out of: 177
sorted: 138 out of: 177
sorted: 139 out of: 177
sorted: 140 out of: 177
sorted: 141 out of: 177
sorted: 142 out of: 177
sorted: 143 out of: 177
sorted: 144 out of: 177
sorted: 145 out of: 177
sorted: 146 out of: 177
sorted: 147 out of: 177
sorted: 148 out of: 177
sorted: 149 out of: 177
sorted: 150 out of: 177
sorted: 151 out of: 177
sorted: 152 out of: 177
sorted: 153 out of: 177
sorted: 154 out of: 177
sorted: 155 out of: 177
sorted: 156 out of: 177
sorted: 157 out of: 177
sorted: 158 out of: 177
sorted: 159 out of: 177
sorted: 160 out of: 177
sorted: 161 out of: 177
sorted: 162 out of: 177
sorted: 163 out of: 177
sorted: 164 out of: 177
sorted: 165 out of: 177
sorted: 166 out of: 177
sorted: 167 out of: 177
sorted: 168 out of: 177
sorted: 169 out of: 177
sorted: 170 out of: 177
sorted: 171 out of: 177
sorted: 172 out of: 177
sorted: 173 out of: 177
sorted: 174 out of: 177
sorted: 175 out of: 177
sorted: 176 out of: 177
sorted: 177 out of: 177
Cluster size: 177
there were : 171 values
sorted: 1 out of: 171
sorted: 2 out of: 171
sorted: 3 out of: 171
sorted: 4 out of: 171
sorted: 5 out of: 171
sorted: 6 out of: 171
sorted: 7 out of: 171
sorted: 8 out of: 171
sorted: 9 out of: 171
sorted: 10 out of: 171
sorted: 11 out of: 171
sorted: 12 out of: 171
sorted: 13 out of: 171
sorted: 14 out of: 171
sorted: 15 out of: 171
sorted: 16 out of: 171
sorted: 17 out of: 171
sorted: 18 out of: 171
sorted: 19 out of: 171
sorted: 20 out of: 171
sorted: 21 out of: 171
sorted: 22 out of: 171
sorted: 23 out of: 171
sorted: 24 out of: 171
sorted: 25 out of: 171
sorted: 26 out of: 171
sorted: 27 out of: 171
sorted: 28 out of: 171
sorted: 29 out of: 171
sorted: 30 out of: 171
sorted: 31 out of: 171
sorted: 32 out of: 171
sorted: 33 out of: 171
sorted: 34 out of: 171
sorted: 35 out of: 171
sorted: 36 out of: 171
sorted: 37 out of: 171
sorted: 38 out of: 171
sorted: 39 out of: 171
sorted: 40 out of: 171
sorted: 41 out of: 171
sorted: 42 out of: 171
sorted: 43 out of: 171
sorted: 44 out of: 171
sorted: 45 out of: 171
sorted: 46 out of: 171
sorted: 47 out of: 171
sorted: 48 out of: 171
sorted: 49 out of: 171
sorted: 50 out of: 171
sorted: 51 out of: 171
sorted: 52 out of: 171
sorted: 53 out of: 171
sorted: 54 out of: 171
sorted: 55 out of: 171
sorted: 56 out of: 171
sorted: 57 out of: 171
sorted: 58 out of: 171
sorted: 59 out of: 171
sorted: 60 out of: 171
sorted: 61 out of: 171
sorted: 62 out of: 171
sorted: 63 out of: 171
sorted: 64 out of: 171
sorted: 65 out of: 171
sorted: 66 out of: 171
sorted: 67 out of: 171
sorted: 68 out of: 171
sorted: 69 out of: 171
sorted: 70 out of: 171
sorted: 71 out of: 171
sorted: 72 out of: 171
sorted: 73 out of: 171
sorted: 74 out of: 171
sorted: 75 out of: 171
sorted: 76 out of: 171
sorted: 77 out of: 171
sorted: 78 out of: 171
sorted: 79 out of: 171
sorted: 80 out of: 171
sorted: 81 out of: 171
sorted: 82 out of: 171
sorted: 83 out of: 171
sorted: 84 out of: 171
sorted: 85 out of: 171
sorted: 86 out of: 171
sorted: 87 out of: 171
sorted: 88 out of: 171
sorted: 89 out of: 171
sorted: 90 out of: 171
sorted: 91 out of: 171
sorted: 92 out of: 171
sorted: 93 out of: 171
sorted: 94 out of: 171
sorted: 95 out of: 171
sorted: 96 out of: 171
sorted: 97 out of: 171
sorted: 98 out of: 171
sorted: 99 out of: 171
sorted: 100 out of: 171
sorted: 101 out of: 171
sorted: 102 out of: 171
sorted: 103 out of: 171
sorted: 104 out of: 171
sorted: 105 out of: 171
sorted: 106 out of: 171
sorted: 107 out of: 171
sorted: 108 out of: 171
sorted: 109 out of: 171
sorted: 110 out of: 171
sorted: 111 out of: 171
sorted: 112 out of: 171
sorted: 113 out of: 171
sorted: 114 out of: 171
sorted: 115 out of: 171
sorted: 116 out of: 171
sorted: 117 out of: 171
sorted: 118 out of: 171
sorted: 119 out of: 171
sorted: 120 out of: 171
sorted: 121 out of: 171
sorted: 122 out of: 171
sorted: 123 out of: 171
sorted: 124 out of: 171
sorted: 125 out of: 171
sorted: 126 out of: 171
sorted: 127 out of: 171
sorted: 128 out of: 171
sorted: 129 out of: 171
sorted: 130 out of: 171
sorted: 131 out of: 171
sorted: 132 out of: 171
sorted: 133 out of: 171
sorted: 134 out of: 171
sorted: 135 out of: 171
sorted: 136 out of: 171
sorted: 137 out of: 171
sorted: 138 out of: 171
sorted: 139 out of: 171
sorted: 140 out of: 171
sorted: 141 out of: 171
sorted: 142 out of: 171
sorted: 143 out of: 171
sorted: 144 out of: 171
sorted: 145 out of: 171
sorted: 146 out of: 171
sorted: 147 out of: 171
sorted: 148 out of: 171
sorted: 149 out of: 171
sorted: 150 out of: 171
sorted: 151 out of: 171
sorted: 152 out of: 171
sorted: 153 out of: 171
sorted: 154 out of: 171
sorted: 155 out of: 171
sorted: 156 out of: 171
sorted: 157 out of: 171
sorted: 158 out of: 171
sorted: 159 out of: 171
sorted: 160 out of: 171
sorted: 161 out of: 171
sorted: 162 out of: 171
sorted: 163 out of: 171
sorted: 164 out of: 171
sorted: 165 out of: 171
sorted: 166 out of: 171
sorted: 167 out of: 171
sorted: 168 out of: 171
sorted: 169 out of: 171
sorted: 170 out of: 171
sorted: 171 out of: 171
Cluster size: 171
there were : 140 values
sorted: 1 out of: 140
sorted: 2 out of: 140
sorted: 3 out of: 140
sorted: 4 out of: 140
sorted: 5 out of: 140
sorted: 6 out of: 140
sorted: 7 out of: 140
sorted: 8 out of: 140
sorted: 9 out of: 140
sorted: 10 out of: 140
sorted: 11 out of: 140
sorted: 12 out of: 140
sorted: 13 out of: 140
sorted: 14 out of: 140
sorted: 15 out of: 140
sorted: 16 out of: 140
sorted: 17 out of: 140
sorted: 18 out of: 140
sorted: 19 out of: 140
sorted: 20 out of: 140
sorted: 21 out of: 140
sorted: 22 out of: 140
sorted: 23 out of: 140
sorted: 24 out of: 140
sorted: 25 out of: 140
sorted: 26 out of: 140
sorted: 27 out of: 140
sorted: 28 out of: 140
sorted: 29 out of: 140
sorted: 30 out of: 140
sorted: 31 out of: 140
sorted: 32 out of: 140
sorted: 33 out of: 140
sorted: 34 out of: 140
sorted: 35 out of: 140
sorted: 36 out of: 140
sorted: 37 out of: 140
sorted: 38 out of: 140
sorted: 39 out of: 140
sorted: 40 out of: 140
sorted: 41 out of: 140
sorted: 42 out of: 140
sorted: 43 out of: 140
sorted: 44 out of: 140
sorted: 45 out of: 140
sorted: 46 out of: 140
sorted: 47 out of: 140
sorted: 48 out of: 140
sorted: 49 out of: 140
sorted: 50 out of: 140
sorted: 51 out of: 140
sorted: 52 out of: 140
sorted: 53 out of: 140
sorted: 54 out of: 140
sorted: 55 out of: 140
sorted: 56 out of: 140
sorted: 57 out of: 140
sorted: 58 out of: 140
sorted: 59 out of: 140
sorted: 60 out of: 140
sorted: 61 out of: 140
sorted: 62 out of: 140
sorted: 63 out of: 140
sorted: 64 out of: 140
sorted: 65 out of: 140
sorted: 66 out of: 140
sorted: 67 out of: 140
sorted: 68 out of: 140
sorted: 69 out of: 140
sorted: 70 out of: 140
sorted: 71 out of: 140
sorted: 72 out of: 140
sorted: 73 out of: 140
sorted: 74 out of: 140
sorted: 75 out of: 140
sorted: 76 out of: 140
sorted: 77 out of: 140
sorted: 78 out of: 140
sorted: 79 out of: 140
sorted: 80 out of: 140
sorted: 81 out of: 140
sorted: 82 out of: 140
sorted: 83 out of: 140
sorted: 84 out of: 140
sorted: 85 out of: 140
sorted: 86 out of: 140
sorted: 87 out of: 140
sorted: 88 out of: 140
sorted: 89 out of: 140
sorted: 90 out of: 140
sorted: 91 out of: 140
sorted: 92 out of: 140
sorted: 93 out of: 140
sorted: 94 out of: 140
sorted: 95 out of: 140
sorted: 96 out of: 140
sorted: 97 out of: 140
sorted: 98 out of: 140
sorted: 99 out of: 140
sorted: 100 out of: 140
sorted: 101 out of: 140
sorted: 102 out of: 140
sorted: 103 out of: 140
sorted: 104 out of: 140
sorted: 105 out of: 140
sorted: 106 out of: 140
sorted: 107 out of: 140
sorted: 108 out of: 140
sorted: 109 out of: 140
sorted: 110 out of: 140
sorted: 111 out of: 140
sorted: 112 out of: 140
sorted: 113 out of: 140
sorted: 114 out of: 140
sorted: 115 out of: 140
sorted: 116 out of: 140
sorted: 117 out of: 140
sorted: 118 out of: 140
sorted: 119 out of: 140
sorted: 120 out of: 140
sorted: 121 out of: 140
sorted: 122 out of: 140
sorted: 123 out of: 140
sorted: 124 out of: 140
sorted: 125 out of: 140
sorted: 126 out of: 140
sorted: 127 out of: 140
sorted: 128 out of: 140
sorted: 129 out of: 140
sorted: 130 out of: 140
sorted: 131 out of: 140
sorted: 132 out of: 140
sorted: 133 out of: 140
sorted: 134 out of: 140
sorted: 135 out of: 140
sorted: 136 out of: 140
sorted: 137 out of: 140
sorted: 138 out of: 140
sorted: 139 out of: 140
sorted: 140 out of: 140
Cluster size: 140
there were : 125 values
sorted: 1 out of: 125
sorted: 2 out of: 125
sorted: 3 out of: 125
sorted: 4 out of: 125
sorted: 5 out of: 125
sorted: 6 out of: 125
sorted: 7 out of: 125
sorted: 8 out of: 125
sorted: 9 out of: 125
sorted: 10 out of: 125
sorted: 11 out of: 125
sorted: 12 out of: 125
sorted: 13 out of: 125
sorted: 14 out of: 125
sorted: 15 out of: 125
sorted: 16 out of: 125
sorted: 17 out of: 125
sorted: 18 out of: 125
sorted: 19 out of: 125
sorted: 20 out of: 125
sorted: 21 out of: 125
sorted: 22 out of: 125
sorted: 23 out of: 125
sorted: 24 out of: 125
sorted: 25 out of: 125
sorted: 26 out of: 125
sorted: 27 out of: 125
sorted: 28 out of: 125
sorted: 29 out of: 125
sorted: 30 out of: 125
sorted: 31 out of: 125
sorted: 32 out of: 125
sorted: 33 out of: 125
sorted: 34 out of: 125
sorted: 35 out of: 125
sorted: 36 out of: 125
sorted: 37 out of: 125
sorted: 38 out of: 125
sorted: 39 out of: 125
sorted: 40 out of: 125
sorted: 41 out of: 125
sorted: 42 out of: 125
sorted: 43 out of: 125
sorted: 44 out of: 125
sorted: 45 out of: 125
sorted: 46 out of: 125
sorted: 47 out of: 125
sorted: 48 out of: 125
sorted: 49 out of: 125
sorted: 50 out of: 125
sorted: 51 out of: 125
sorted: 52 out of: 125
sorted: 53 out of: 125
sorted: 54 out of: 125
sorted: 55 out of: 125
sorted: 56 out of: 125
sorted: 57 out of: 125
sorted: 58 out of: 125
sorted: 59 out of: 125
sorted: 60 out of: 125
sorted: 61 out of: 125
sorted: 62 out of: 125
sorted: 63 out of: 125
sorted: 64 out of: 125
sorted: 65 out of: 125
sorted: 66 out of: 125
sorted: 67 out of: 125
sorted: 68 out of: 125
sorted: 69 out of: 125
sorted: 70 out of: 125
sorted: 71 out of: 125
sorted: 72 out of: 125
sorted: 73 out of: 125
sorted: 74 out of: 125
sorted: 75 out of: 125
sorted: 76 out of: 125
sorted: 77 out of: 125
sorted: 78 out of: 125
sorted: 79 out of: 125
sorted: 80 out of: 125
sorted: 81 out of: 125
sorted: 82 out of: 125
sorted: 83 out of: 125
sorted: 84 out of: 125
sorted: 85 out of: 125
sorted: 86 out of: 125
sorted: 87 out of: 125
sorted: 88 out of: 125
sorted: 89 out of: 125
sorted: 90 out of: 125
sorted: 91 out of: 125
sorted: 92 out of: 125
sorted: 93 out of: 125
sorted: 94 out of: 125
sorted: 95 out of: 125
sorted: 96 out of: 125
sorted: 97 out of: 125
sorted: 98 out of: 125
sorted: 99 out of: 125
sorted: 100 out of: 125
sorted: 101 out of: 125
sorted: 102 out of: 125
sorted: 103 out of: 125
sorted: 104 out of: 125
sorted: 105 out of: 125
sorted: 106 out of: 125
sorted: 107 out of: 125
sorted: 108 out of: 125
sorted: 109 out of: 125
sorted: 110 out of: 125
sorted: 111 out of: 125
sorted: 112 out of: 125
sorted: 113 out of: 125
sorted: 114 out of: 125
sorted: 115 out of: 125
sorted: 116 out of: 125
sorted: 117 out of: 125
sorted: 118 out of: 125
sorted: 119 out of: 125
sorted: 120 out of: 125
sorted: 121 out of: 125
sorted: 122 out of: 125
sorted: 123 out of: 125
sorted: 124 out of: 125
sorted: 125 out of: 125
Cluster size: 125
there were : 92 values
sorted: 1 out of: 92
sorted: 2 out of: 92
sorted: 3 out of: 92
sorted: 4 out of: 92
sorted: 5 out of: 92
sorted: 6 out of: 92
sorted: 7 out of: 92
sorted: 8 out of: 92
sorted: 9 out of: 92
sorted: 10 out of: 92
sorted: 11 out of: 92
sorted: 12 out of: 92
sorted: 13 out of: 92
sorted: 14 out of: 92
sorted: 15 out of: 92
sorted: 16 out of: 92
sorted: 17 out of: 92
sorted: 18 out of: 92
sorted: 19 out of: 92
sorted: 20 out of: 92
sorted: 21 out of: 92
sorted: 22 out of: 92
sorted: 23 out of: 92
sorted: 24 out of: 92
sorted: 25 out of: 92
sorted: 26 out of: 92
sorted: 27 out of: 92
sorted: 28 out of: 92
sorted: 29 out of: 92
sorted: 30 out of: 92
sorted: 31 out of: 92
sorted: 32 out of: 92
sorted: 33 out of: 92
sorted: 34 out of: 92
sorted: 35 out of: 92
sorted: 36 out of: 92
sorted: 37 out of: 92
sorted: 38 out of: 92
sorted: 39 out of: 92
sorted: 40 out of: 92
sorted: 41 out of: 92
sorted: 42 out of: 92
sorted: 43 out of: 92
sorted: 44 out of: 92
sorted: 45 out of: 92
sorted: 46 out of: 92
sorted: 47 out of: 92
sorted: 48 out of: 92
sorted: 49 out of: 92
sorted: 50 out of: 92
sorted: 51 out of: 92
sorted: 52 out of: 92
sorted: 53 out of: 92
sorted: 54 out of: 92
sorted: 55 out of: 92
sorted: 56 out of: 92
sorted: 57 out of: 92
sorted: 58 out of: 92
sorted: 59 out of: 92
sorted: 60 out of: 92
sorted: 61 out of: 92
sorted: 62 out of: 92
sorted: 63 out of: 92
sorted: 64 out of: 92
sorted: 65 out of: 92
sorted: 66 out of: 92
sorted: 67 out of: 92
sorted: 68 out of: 92
sorted: 69 out of: 92
sorted: 70 out of: 92
sorted: 71 out of: 92
sorted: 72 out of: 92
sorted: 73 out of: 92
sorted: 74 out of: 92
sorted: 75 out of: 92
sorted: 76 out of: 92
sorted: 77 out of: 92
sorted: 78 out of: 92
sorted: 79 out of: 92
sorted: 80 out of: 92
sorted: 81 out of: 92
sorted: 82 out of: 92
sorted: 83 out of: 92
sorted: 84 out of: 92
sorted: 85 out of: 92
sorted: 86 out of: 92
sorted: 87 out of: 92
sorted: 88 out of: 92
sorted: 89 out of: 92
sorted: 90 out of: 92
sorted: 91 out of: 92
sorted: 92 out of: 92
Cluster size: 92
there were : 87 values
sorted: 1 out of: 87
sorted: 2 out of: 87
sorted: 3 out of: 87
sorted: 4 out of: 87
sorted: 5 out of: 87
sorted: 6 out of: 87
sorted: 7 out of: 87
sorted: 8 out of: 87
sorted: 9 out of: 87
sorted: 10 out of: 87
sorted: 11 out of: 87
sorted: 12 out of: 87
sorted: 13 out of: 87
sorted: 14 out of: 87
sorted: 15 out of: 87
sorted: 16 out of: 87
sorted: 17 out of: 87
sorted: 18 out of: 87
sorted: 19 out of: 87
sorted: 20 out of: 87
sorted: 21 out of: 87
sorted: 22 out of: 87
sorted: 23 out of: 87
sorted: 24 out of: 87
sorted: 25 out of: 87
sorted: 26 out of: 87
sorted: 27 out of: 87
sorted: 28 out of: 87
sorted: 29 out of: 87
sorted: 30 out of: 87
sorted: 31 out of: 87
sorted: 32 out of: 87
sorted: 33 out of: 87
sorted: 34 out of: 87
sorted: 35 out of: 87
sorted: 36 out of: 87
sorted: 37 out of: 87
sorted: 38 out of: 87
sorted: 39 out of: 87
sorted: 40 out of: 87
sorted: 41 out of: 87
sorted: 42 out of: 87
sorted: 43 out of: 87
sorted: 44 out of: 87
sorted: 45 out of: 87
sorted: 46 out of: 87
sorted: 47 out of: 87
sorted: 48 out of: 87
sorted: 49 out of: 87
sorted: 50 out of: 87
sorted: 51 out of: 87
sorted: 52 out of: 87
sorted: 53 out of: 87
sorted: 54 out of: 87
sorted: 55 out of: 87
sorted: 56 out of: 87
sorted: 57 out of: 87
sorted: 58 out of: 87
sorted: 59 out of: 87
sorted: 60 out of: 87
sorted: 61 out of: 87
sorted: 62 out of: 87
sorted: 63 out of: 87
sorted: 64 out of: 87
sorted: 65 out of: 87
sorted: 66 out of: 87
sorted: 67 out of: 87
sorted: 68 out of: 87
sorted: 69 out of: 87
sorted: 70 out of: 87
sorted: 71 out of: 87
sorted: 72 out of: 87
sorted: 73 out of: 87
sorted: 74 out of: 87
sorted: 75 out of: 87
sorted: 76 out of: 87
sorted: 77 out of: 87
sorted: 78 out of: 87
sorted: 79 out of: 87
sorted: 80 out of: 87
sorted: 81 out of: 87
sorted: 82 out of: 87
sorted: 83 out of: 87
sorted: 84 out of: 87
sorted: 85 out of: 87
sorted: 86 out of: 87
sorted: 87 out of: 87
Cluster size: 87
there were : 85 values
sorted: 1 out of: 85
sorted: 2 out of: 85
sorted: 3 out of: 85
sorted: 4 out of: 85
sorted: 5 out of: 85
sorted: 6 out of: 85
sorted: 7 out of: 85
sorted: 8 out of: 85
sorted: 9 out of: 85
sorted: 10 out of: 85
sorted: 11 out of: 85
sorted: 12 out of: 85
sorted: 13 out of: 85
sorted: 14 out of: 85
sorted: 15 out of: 85
sorted: 16 out of: 85
sorted: 17 out of: 85
sorted: 18 out of: 85
sorted: 19 out of: 85
sorted: 20 out of: 85
sorted: 21 out of: 85
sorted: 22 out of: 85
sorted: 23 out of: 85
sorted: 24 out of: 85
sorted: 25 out of: 85
sorted: 26 out of: 85
sorted: 27 out of: 85
sorted: 28 out of: 85
sorted: 29 out of: 85
sorted: 30 out of: 85
sorted: 31 out of: 85
sorted: 32 out of: 85
sorted: 33 out of: 85
sorted: 34 out of: 85
sorted: 35 out of: 85
sorted: 36 out of: 85
sorted: 37 out of: 85
sorted: 38 out of: 85
sorted: 39 out of: 85
sorted: 40 out of: 85
sorted: 41 out of: 85
sorted: 42 out of: 85
sorted: 43 out of: 85
sorted: 44 out of: 85
sorted: 45 out of: 85
sorted: 46 out of: 85
sorted: 47 out of: 85
sorted: 48 out of: 85
sorted: 49 out of: 85
sorted: 50 out of: 85
sorted: 51 out of: 85
sorted: 52 out of: 85
sorted: 53 out of: 85
sorted: 54 out of: 85
sorted: 55 out of: 85
sorted: 56 out of: 85
sorted: 57 out of: 85
sorted: 58 out of: 85
sorted: 59 out of: 85
sorted: 60 out of: 85
sorted: 61 out of: 85
sorted: 62 out of: 85
sorted: 63 out of: 85
sorted: 64 out of: 85
sorted: 65 out of: 85
sorted: 66 out of: 85
sorted: 67 out of: 85
sorted: 68 out of: 85
sorted: 69 out of: 85
sorted: 70 out of: 85
sorted: 71 out of: 85
sorted: 72 out of: 85
sorted: 73 out of: 85
sorted: 74 out of: 85
sorted: 75 out of: 85
sorted: 76 out of: 85
sorted: 77 out of: 85
sorted: 78 out of: 85
sorted: 79 out of: 85
sorted: 80 out of: 85
sorted: 81 out of: 85
sorted: 82 out of: 85
sorted: 83 out of: 85
sorted: 84 out of: 85
sorted: 85 out of: 85
Cluster size: 85
there were : 75 values
sorted: 1 out of: 75
sorted: 2 out of: 75
sorted: 3 out of: 75
sorted: 4 out of: 75
sorted: 5 out of: 75
sorted: 6 out of: 75
sorted: 7 out of: 75
sorted: 8 out of: 75
sorted: 9 out of: 75
sorted: 10 out of: 75
sorted: 11 out of: 75
sorted: 12 out of: 75
sorted: 13 out of: 75
sorted: 14 out of: 75
sorted: 15 out of: 75
sorted: 16 out of: 75
sorted: 17 out of: 75
sorted: 18 out of: 75
sorted: 19 out of: 75
sorted: 20 out of: 75
sorted: 21 out of: 75
sorted: 22 out of: 75
sorted: 23 out of: 75
sorted: 24 out of: 75
sorted: 25 out of: 75
sorted: 26 out of: 75
sorted: 27 out of: 75
sorted: 28 out of: 75
sorted: 29 out of: 75
sorted: 30 out of: 75
sorted: 31 out of: 75
sorted: 32 out of: 75
sorted: 33 out of: 75
sorted: 34 out of: 75
sorted: 35 out of: 75
sorted: 36 out of: 75
sorted: 37 out of: 75
sorted: 38 out of: 75
sorted: 39 out of: 75
sorted: 40 out of: 75
sorted: 41 out of: 75
sorted: 42 out of: 75
sorted: 43 out of: 75
sorted: 44 out of: 75
sorted: 45 out of: 75
sorted: 46 out of: 75
sorted: 47 out of: 75
sorted: 48 out of: 75
sorted: 49 out of: 75
sorted: 50 out of: 75
sorted: 51 out of: 75
sorted: 52 out of: 75
sorted: 53 out of: 75
sorted: 54 out of: 75
sorted: 55 out of: 75
sorted: 56 out of: 75
sorted: 57 out of: 75
sorted: 58 out of: 75
sorted: 59 out of: 75
sorted: 60 out of: 75
sorted: 61 out of: 75
sorted: 62 out of: 75
sorted: 63 out of: 75
sorted: 64 out of: 75
sorted: 65 out of: 75
sorted: 66 out of: 75
sorted: 67 out of: 75
sorted: 68 out of: 75
sorted: 69 out of: 75
sorted: 70 out of: 75
sorted: 71 out of: 75
sorted: 72 out of: 75
sorted: 73 out of: 75
sorted: 74 out of: 75
sorted: 75 out of: 75
Cluster size: 75
there were : 70 values
sorted: 1 out of: 70
sorted: 2 out of: 70
sorted: 3 out of: 70
sorted: 4 out of: 70
sorted: 5 out of: 70
sorted: 6 out of: 70
sorted: 7 out of: 70
sorted: 8 out of: 70
sorted: 9 out of: 70
sorted: 10 out of: 70
sorted: 11 out of: 70
sorted: 12 out of: 70
sorted: 13 out of: 70
sorted: 14 out of: 70
sorted: 15 out of: 70
sorted: 16 out of: 70
sorted: 17 out of: 70
sorted: 18 out of: 70
sorted: 19 out of: 70
sorted: 20 out of: 70
sorted: 21 out of: 70
sorted: 22 out of: 70
sorted: 23 out of: 70
sorted: 24 out of: 70
sorted: 25 out of: 70
sorted: 26 out of: 70
sorted: 27 out of: 70
sorted: 28 out of: 70
sorted: 29 out of: 70
sorted: 30 out of: 70
sorted: 31 out of: 70
sorted: 32 out of: 70
sorted: 33 out of: 70
sorted: 34 out of: 70
sorted: 35 out of: 70
sorted: 36 out of: 70
sorted: 37 out of: 70
sorted: 38 out of: 70
sorted: 39 out of: 70
sorted: 40 out of: 70
sorted: 41 out of: 70
sorted: 42 out of: 70
sorted: 43 out of: 70
sorted: 44 out of: 70
sorted: 45 out of: 70
sorted: 46 out of: 70
sorted: 47 out of: 70
sorted: 48 out of: 70
sorted: 49 out of: 70
sorted: 50 out of: 70
sorted: 51 out of: 70
sorted: 52 out of: 70
sorted: 53 out of: 70
sorted: 54 out of: 70
sorted: 55 out of: 70
sorted: 56 out of: 70
sorted: 57 out of: 70
sorted: 58 out of: 70
sorted: 59 out of: 70
sorted: 60 out of: 70
sorted: 61 out of: 70
sorted: 62 out of: 70
sorted: 63 out of: 70
sorted: 64 out of: 70
sorted: 65 out of: 70
sorted: 66 out of: 70
sorted: 67 out of: 70
sorted: 68 out of: 70
sorted: 69 out of: 70
sorted: 70 out of: 70
Cluster size: 70
there were : 62 values
sorted: 1 out of: 62
sorted: 2 out of: 62
sorted: 3 out of: 62
sorted: 4 out of: 62
sorted: 5 out of: 62
sorted: 6 out of: 62
sorted: 7 out of: 62
sorted: 8 out of: 62
sorted: 9 out of: 62
sorted: 10 out of: 62
sorted: 11 out of: 62
sorted: 12 out of: 62
sorted: 13 out of: 62
sorted: 14 out of: 62
sorted: 15 out of: 62
sorted: 16 out of: 62
sorted: 17 out of: 62
sorted: 18 out of: 62
sorted: 19 out of: 62
sorted: 20 out of: 62
sorted: 21 out of: 62
sorted: 22 out of: 62
sorted: 23 out of: 62
sorted: 24 out of: 62
sorted: 25 out of: 62
sorted: 26 out of: 62
sorted: 27 out of: 62
sorted: 28 out of: 62
sorted: 29 out of: 62
sorted: 30 out of: 62
sorted: 31 out of: 62
sorted: 32 out of: 62
sorted: 33 out of: 62
sorted: 34 out of: 62
sorted: 35 out of: 62
sorted: 36 out of: 62
sorted: 37 out of: 62
sorted: 38 out of: 62
sorted: 39 out of: 62
sorted: 40 out of: 62
sorted: 41 out of: 62
sorted: 42 out of: 62
sorted: 43 out of: 62
sorted: 44 out of: 62
sorted: 45 out of: 62
sorted: 46 out of: 62
sorted: 47 out of: 62
sorted: 48 out of: 62
sorted: 49 out of: 62
sorted: 50 out of: 62
sorted: 51 out of: 62
sorted: 52 out of: 62
sorted: 53 out of: 62
sorted: 54 out of: 62
sorted: 55 out of: 62
sorted: 56 out of: 62
sorted: 57 out of: 62
sorted: 58 out of: 62
sorted: 59 out of: 62
sorted: 60 out of: 62
sorted: 61 out of: 62
sorted: 62 out of: 62
Cluster size: 62
there were : 57 values
sorted: 1 out of: 57
sorted: 2 out of: 57
sorted: 3 out of: 57
sorted: 4 out of: 57
sorted: 5 out of: 57
sorted: 6 out of: 57
sorted: 7 out of: 57
sorted: 8 out of: 57
sorted: 9 out of: 57
sorted: 10 out of: 57
sorted: 11 out of: 57
sorted: 12 out of: 57
sorted: 13 out of: 57
sorted: 14 out of: 57
sorted: 15 out of: 57
sorted: 16 out of: 57
sorted: 17 out of: 57
sorted: 18 out of: 57
sorted: 19 out of: 57
sorted: 20 out of: 57
sorted: 21 out of: 57
sorted: 22 out of: 57
sorted: 23 out of: 57
sorted: 24 out of: 57
sorted: 25 out of: 57
sorted: 26 out of: 57
sorted: 27 out of: 57
sorted: 28 out of: 57
sorted: 29 out of: 57
sorted: 30 out of: 57
sorted: 31 out of: 57
sorted: 32 out of: 57
sorted: 33 out of: 57
sorted: 34 out of: 57
sorted: 35 out of: 57
sorted: 36 out of: 57
sorted: 37 out of: 57
sorted: 38 out of: 57
sorted: 39 out of: 57
sorted: 40 out of: 57
sorted: 41 out of: 57
sorted: 42 out of: 57
sorted: 43 out of: 57
sorted: 44 out of: 57
sorted: 45 out of: 57
sorted: 46 out of: 57
sorted: 47 out of: 57
sorted: 48 out of: 57
sorted: 49 out of: 57
sorted: 50 out of: 57
sorted: 51 out of: 57
sorted: 52 out of: 57
sorted: 53 out of: 57
sorted: 54 out of: 57
sorted: 55 out of: 57
sorted: 56 out of: 57
sorted: 57 out of: 57
Cluster size: 57
there were : 56 values
sorted: 1 out of: 56
sorted: 2 out of: 56
sorted: 3 out of: 56
sorted: 4 out of: 56
sorted: 5 out of: 56
sorted: 6 out of: 56
sorted: 7 out of: 56
sorted: 8 out of: 56
sorted: 9 out of: 56
sorted: 10 out of: 56
sorted: 11 out of: 56
sorted: 12 out of: 56
sorted: 13 out of: 56
sorted: 14 out of: 56
sorted: 15 out of: 56
sorted: 16 out of: 56
sorted: 17 out of: 56
sorted: 18 out of: 56
sorted: 19 out of: 56
sorted: 20 out of: 56
sorted: 21 out of: 56
sorted: 22 out of: 56
sorted: 23 out of: 56
sorted: 24 out of: 56
sorted: 25 out of: 56
sorted: 26 out of: 56
sorted: 27 out of: 56
sorted: 28 out of: 56
sorted: 29 out of: 56
sorted: 30 out of: 56
sorted: 31 out of: 56
sorted: 32 out of: 56
sorted: 33 out of: 56
sorted: 34 out of: 56
sorted: 35 out of: 56
sorted: 36 out of: 56
sorted: 37 out of: 56
sorted: 38 out of: 56
sorted: 39 out of: 56
sorted: 40 out of: 56
sorted: 41 out of: 56
sorted: 42 out of: 56
sorted: 43 out of: 56
sorted: 44 out of: 56
sorted: 45 out of: 56
sorted: 46 out of: 56
sorted: 47 out of: 56
sorted: 48 out of: 56
sorted: 49 out of: 56
sorted: 50 out of: 56
sorted: 51 out of: 56
sorted: 52 out of: 56
sorted: 53 out of: 56
sorted: 54 out of: 56
sorted: 55 out of: 56
sorted: 56 out of: 56
Cluster size: 56
there were : 52 values
sorted: 1 out of: 52
sorted: 2 out of: 52
sorted: 3 out of: 52
sorted: 4 out of: 52
sorted: 5 out of: 52
sorted: 6 out of: 52
sorted: 7 out of: 52
sorted: 8 out of: 52
sorted: 9 out of: 52
sorted: 10 out of: 52
sorted: 11 out of: 52
sorted: 12 out of: 52
sorted: 13 out of: 52
sorted: 14 out of: 52
sorted: 15 out of: 52
sorted: 16 out of: 52
sorted: 17 out of: 52
sorted: 18 out of: 52
sorted: 19 out of: 52
sorted: 20 out of: 52
sorted: 21 out of: 52
sorted: 22 out of: 52
sorted: 23 out of: 52
sorted: 24 out of: 52
sorted: 25 out of: 52
sorted: 26 out of: 52
sorted: 27 out of: 52
sorted: 28 out of: 52
sorted: 29 out of: 52
sorted: 30 out of: 52
sorted: 31 out of: 52
sorted: 32 out of: 52
sorted: 33 out of: 52
sorted: 34 out of: 52
sorted: 35 out of: 52
sorted: 36 out of: 52
sorted: 37 out of: 52
sorted: 38 out of: 52
sorted: 39 out of: 52
sorted: 40 out of: 52
sorted: 41 out of: 52
sorted: 42 out of: 52
sorted: 43 out of: 52
sorted: 44 out of: 52
sorted: 45 out of: 52
sorted: 46 out of: 52
sorted: 47 out of: 52
sorted: 48 out of: 52
sorted: 49 out of: 52
sorted: 50 out of: 52
sorted: 51 out of: 52
sorted: 52 out of: 52
Cluster size: 52
there were : 49 values
sorted: 1 out of: 49
sorted: 2 out of: 49
sorted: 3 out of: 49
sorted: 4 out of: 49
sorted: 5 out of: 49
sorted: 6 out of: 49
sorted: 7 out of: 49
sorted: 8 out of: 49
sorted: 9 out of: 49
sorted: 10 out of: 49
sorted: 11 out of: 49
sorted: 12 out of: 49
sorted: 13 out of: 49
sorted: 14 out of: 49
sorted: 15 out of: 49
sorted: 16 out of: 49
sorted: 17 out of: 49
sorted: 18 out of: 49
sorted: 19 out of: 49
sorted: 20 out of: 49
sorted: 21 out of: 49
sorted: 22 out of: 49
sorted: 23 out of: 49
sorted: 24 out of: 49
sorted: 25 out of: 49
sorted: 26 out of: 49
sorted: 27 out of: 49
sorted: 28 out of: 49
sorted: 29 out of: 49
sorted: 30 out of: 49
sorted: 31 out of: 49
sorted: 32 out of: 49
sorted: 33 out of: 49
sorted: 34 out of: 49
sorted: 35 out of: 49
sorted: 36 out of: 49
sorted: 37 out of: 49
sorted: 38 out of: 49
sorted: 39 out of: 49
sorted: 40 out of: 49
sorted: 41 out of: 49
sorted: 42 out of: 49
sorted: 43 out of: 49
sorted: 44 out of: 49
sorted: 45 out of: 49
sorted: 46 out of: 49
sorted: 47 out of: 49
sorted: 48 out of: 49
sorted: 49 out of: 49
Cluster size: 49
there were : 47 values
sorted: 1 out of: 47
sorted: 2 out of: 47
sorted: 3 out of: 47
sorted: 4 out of: 47
sorted: 5 out of: 47
sorted: 6 out of: 47
sorted: 7 out of: 47
sorted: 8 out of: 47
sorted: 9 out of: 47
sorted: 10 out of: 47
sorted: 11 out of: 47
sorted: 12 out of: 47
sorted: 13 out of: 47
sorted: 14 out of: 47
sorted: 15 out of: 47
sorted: 16 out of: 47
sorted: 17 out of: 47
sorted: 18 out of: 47
sorted: 19 out of: 47
sorted: 20 out of: 47
sorted: 21 out of: 47
sorted: 22 out of: 47
sorted: 23 out of: 47
sorted: 24 out of: 47
sorted: 25 out of: 47
sorted: 26 out of: 47
sorted: 27 out of: 47
sorted: 28 out of: 47
sorted: 29 out of: 47
sorted: 30 out of: 47
sorted: 31 out of: 47
sorted: 32 out of: 47
sorted: 33 out of: 47
sorted: 34 out of: 47
sorted: 35 out of: 47
sorted: 36 out of: 47
sorted: 37 out of: 47
sorted: 38 out of: 47
sorted: 39 out of: 47
sorted: 40 out of: 47
sorted: 41 out of: 47
sorted: 42 out of: 47
sorted: 43 out of: 47
sorted: 44 out of: 47
sorted: 45 out of: 47
sorted: 46 out of: 47
sorted: 47 out of: 47
Cluster size: 47
there were : 46 values
sorted: 1 out of: 46
sorted: 2 out of: 46
sorted: 3 out of: 46
sorted: 4 out of: 46
sorted: 5 out of: 46
sorted: 6 out of: 46
sorted: 7 out of: 46
sorted: 8 out of: 46
sorted: 9 out of: 46
sorted: 10 out of: 46
sorted: 11 out of: 46
sorted: 12 out of: 46
sorted: 13 out of: 46
sorted: 14 out of: 46
sorted: 15 out of: 46
sorted: 16 out of: 46
INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';248;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';248;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\0LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send acceptance pack,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send acceptance pack,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan application rejected)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Reject application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess eligibility)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotSuccession(Assess eligibility,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan application rejected)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan application rejected)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Reject application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Reject application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess eligibility)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check  application  form completeness)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Receive updated application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Cancel application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan application rejected)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Reject application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Reject application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Appraise property)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess loan risk)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application received)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Reject application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess eligibility)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess loan risk)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check credit history)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application received)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess eligibility)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotCoExistence(Send acceptance pack,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess eligibility)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application received)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotCoExistence(Send home insurance quote,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess eligibility)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess loan risk)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check  application  form completeness)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check credit history)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application received)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';206;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';206;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\1LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Send acceptance pack,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send acceptance pack,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send acceptance pack,  Verify repayment agreement)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send acceptance pack,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Approve application)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Approve application)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application approved)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application approved)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Receive updated application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Return application back to applicant)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Send acceptance pack)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send acceptance pack)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Appraise property)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess eligibility)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess loan risk)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check credit history)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application received)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Approve application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Approve application)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application approved)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application approved)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Send acceptance pack)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send acceptance pack)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Approve application)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Approve application)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application approved)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application approved)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Receive updated application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Return application back to applicant)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Send acceptance pack)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send acceptance pack)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Send acceptance pack)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Approve application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Send acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Appraise property)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Loan  application received)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess eligibility)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess eligibility)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess loan risk)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check credit history)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Appraise property)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Approve application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Approve application)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess eligibility)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess loan risk)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Cancel application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Cancel application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Cancel application)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check  application  form completeness)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check credit history)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application approved)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application canceled)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application canceled)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application canceled)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application received)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Receive updated application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Return application back to applicant)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';203;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';203;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\2LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check if home insurance quote is requested)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Prepare acceptance pack)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Verify repayment agreement)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Check if home insurance quote is requested)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Prepare acceptance pack)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Prepare acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Verify repayment agreement)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Check if home insurance quote is requested)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Prepare acceptance pack)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Verify repayment agreement)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Check if home insurance quote is requested)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Prepare acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Verify repayment agreement)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% AtMostOne(Check if home insurance quote is requested)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Verify repayment agreement)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% AtMostOne(Prepare acceptance pack)                                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Check if home insurance quote is requested)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Verify repayment agreement)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% AtMostOne(Verify repayment agreement)                                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess eligibility)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';177;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';177;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\3LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Approve application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Approve application,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Approve application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% AtMostOne(Approve application)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Approve application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Approve application,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Approve application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Approve application,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Approve application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Approve application,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Receive updated application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Receive updated application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Reject application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Return application back to applicant)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Return application back to applicant)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Approve application)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application approved)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% AtMostOne(Loan  application approved)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';171;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';171;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\4LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% AtMostOne(Cancel application)                                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Cancel application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Cancel application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Cancel application,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application received)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Cancel application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application canceled)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% AtMostOne(Loan  application canceled)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';140;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';140;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\5LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% Participation(Approve application)                                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% Participation(Cancel application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Approve application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application approved)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotSuccession(Check if home insurance quote is requested,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% End(Loan  application approved)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application approved)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% End(Loan  application canceled)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application canceled)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotSuccession(Prepare acceptance pack,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Added Activity)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% Participation(Send acceptance pack)                                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% Participation(Send home insurance quote)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check if home insurance quote is requested)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Prepare acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Verify repayment agreement)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';125;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';125;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\6LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send home insurance quote,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send home insurance quote,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Cancel application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application canceled)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send home insurance quote)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check  application  form completeness)          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check credit history)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Cancel application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application canceled)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Send home insurance quote)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send home insurance quote)     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess eligibility)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess loan risk)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check  application  form completeness)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application received)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';92;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';92;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\7LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Receive updated application,  Appraise property)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Approve application] => {
		100.000% Precedence(Receive updated application,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		100.000% Precedence(Receive updated application,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Receive updated application,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		100.000% Precedence(Receive updated application,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		100.000% Precedence(Receive updated application,  Check  application  form completeness)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Receive updated application,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Receive updated application,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Receive updated application,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Receive updated application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Receive updated application,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		100.000% Precedence(Receive updated application,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		100.000% Precedence(Receive updated application,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% Precedence(Receive updated application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Receive updated application,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Receive updated application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Receive updated application,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% Participation(Receive updated application)                                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% Participation(Return application back to applicant)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess eligibility)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess loan risk)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';87;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';87;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\8LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send acceptance pack)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send acceptance pack)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% AtMostOne(Send acceptance pack)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send acceptance pack,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';85;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';85;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\9LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		100.000% Precedence(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotChainSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Receive updated application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Return application back to applicant)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check  application  form completeness)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Return application back to applicant,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';75;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';75;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\10LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send home insurance quote)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send home insurance quote)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% AtMostOne(Send home insurance quote)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send home insurance quote,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';70;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';70;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\11LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Check if home insurance quote is requested)       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Prepare acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';62;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';62;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\12LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Assess loan risk,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess loan risk,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check credit history,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Appraise property,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% ChainPrecedence(Appraise property,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Appraise property] => {
		100.000% ChainSuccession(Appraise property,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% Succession(Assess loan risk,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Reject application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Reject application)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainResponse(Check  application  form completeness,  Check credit history)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan application rejected)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan application rejected)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan application rejected)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Reject application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% ChainSuccession(Check credit history,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% End(Loan application rejected)                                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan application rejected)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Receive updated application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Return application back to applicant)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Loan application rejected)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan application rejected)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Reject application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Reject application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';57;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';57;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\13LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Added Activity,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		100.000% Precedence(Added Activity,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Added Activity,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity] => {
		100.000% AtMostOne(Added Activity)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Added Activity)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Added Activity)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';56;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';56;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\14LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Reject application,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Reject application,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Reject application,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Reject application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% AtMostOne(Reject application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Reject application,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Reject application,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Reject application,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Reject application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Reject application,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Reject application,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';52;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';52;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\15LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Cancel application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Cancel application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application canceled)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application canceled)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Approve application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainResponse(Check  application  form completeness,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% Participation(Check if home insurance quote is requested)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% Participation(Prepare acceptance pack)                                                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% Participation(Verify repayment agreement)                                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';49;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';49;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\16LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Receive updated application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Return application back to applicant)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainSuccession(Check  application  form completeness,  Appraise property)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Check credit history)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Return application back to applicant)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotChainSuccession(Loan  application received,  Check  application  form completeness)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AtMostOne(Receive updated application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Receive updated application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AtMostOne(Return application back to applicant)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess eligibility)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess loan risk)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check  application  form completeness)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check credit history)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';47;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';47;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\17LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check  application  form completeness] => {
		100.000% Response(Check  application  form completeness,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check  application  form completeness,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Receive updated application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';46;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';46;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\18LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		100.000% Precedence(Send home insurance quote,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send home insurance quote,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send home insurance quote,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send home insurance quote,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send home insurance quote)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send home insurance quote,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';45;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';45;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\19LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Approve application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Cancel application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application approved)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application canceled)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Send acceptance pack)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Send home insurance quote)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Send home insurance quote)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Send home insurance quote)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Added Activity)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';42;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';42;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\20LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan application rejected)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% AtMostOne(Loan application rejected)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';39;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';39;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\21LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan application rejected)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan application rejected)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan application rejected)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';36;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';36;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\22LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';27;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';27;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\23LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Assess loan risk,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Appraise property,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Assess loan risk)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotChainSuccession(Assess loan risk,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Appraise property)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Assess eligibility)                                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Appraise property)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Appraise property)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess loan risk)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check credit history)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotChainSuccession(Check credit history,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Loan  application received,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';25;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';25;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\24LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\25LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Added Activity] => {
		100.000% CoExistence(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Added Activity)       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\26LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Added Activity)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Added Activity)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\27LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\28LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% ChainPrecedence(Added Activity,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity] => {
		100.000% NotCoExistence(Added Activity,  Appraise property)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Assess loan risk)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check credit history)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application received)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Added Activity,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotChainSuccession(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AlternateSuccession(Receive updated application,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AlternateSuccession(Return application back to applicant,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\29LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan application rejected)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan application rejected)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\30LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Reject application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Reject application)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Reject application)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';19;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';19;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\31LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Receive updated application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Added Activity] => {
		100.000% Participation(Added Activity)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';18;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';18;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\32LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Check credit history,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		100.000% AlternatePrecedence(Loan  application received,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Loan  application received,  Check  application  form completeness)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Check credit history)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		100.000% AlternatePrecedence(Loan  application received,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% AlternatePrecedence(Loan  application received,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check credit history)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AtMostOne(Check  application  form completeness)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Appraise property)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess eligibility)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess loan risk)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check credit history)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% Succession(Check credit history,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';17;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';17;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\33LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Assess eligibility] => {
		100.000% ChainSuccession(Assess eligibility,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% Participation(Reject application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';14;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';14;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\34LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Reject application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Added Activity,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Reject application)            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotChainSuccession(Assess eligibility,  Reject application)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';13;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';13;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\35LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Appraise property,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess eligibility,  Added Activity)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess eligibility,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess loan risk,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check  application  form completeness,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check credit history,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Loan  application received,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		
	}

	[Assess eligibility] => {
		
	}

	[Assess loan risk] => {
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';11;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';11;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\36LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Appraise property)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Appraise property,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Check credit history)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Appraise property,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% Succession(Appraise property,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check credit history)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Check credit history)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Appraise property)                       conf.:   1.000;  int'f:   1.000; 
		
	}

sorted: 17 out of: 46
sorted: 18 out of: 46
sorted: 19 out of: 46
sorted: 20 out of: 46
sorted: 21 out of: 46
sorted: 22 out of: 46
sorted: 23 out of: 46
sorted: 24 out of: 46
sorted: 25 out of: 46
sorted: 26 out of: 46
sorted: 27 out of: 46
sorted: 28 out of: 46
sorted: 29 out of: 46
sorted: 30 out of: 46
sorted: 31 out of: 46
sorted: 32 out of: 46
sorted: 33 out of: 46
sorted: 34 out of: 46
sorted: 35 out of: 46
sorted: 36 out of: 46
sorted: 37 out of: 46
sorted: 38 out of: 46
sorted: 39 out of: 46
sorted: 40 out of: 46
sorted: 41 out of: 46
sorted: 42 out of: 46
sorted: 43 out of: 46
sorted: 44 out of: 46
sorted: 45 out of: 46
sorted: 46 out of: 46
Cluster size: 46
there were : 45 values
sorted: 1 out of: 45
sorted: 2 out of: 45
sorted: 3 out of: 45
sorted: 4 out of: 45
sorted: 5 out of: 45
sorted: 6 out of: 45
sorted: 7 out of: 45
sorted: 8 out of: 45
sorted: 9 out of: 45
sorted: 10 out of: 45
sorted: 11 out of: 45
sorted: 12 out of: 45
sorted: 13 out of: 45
sorted: 14 out of: 45
sorted: 15 out of: 45
sorted: 16 out of: 45
sorted: 17 out of: 45
sorted: 18 out of: 45
sorted: 19 out of: 45
sorted: 20 out of: 45
sorted: 21 out of: 45
sorted: 22 out of: 45
sorted: 23 out of: 45
sorted: 24 out of: 45
sorted: 25 out of: 45
sorted: 26 out of: 45
sorted: 27 out of: 45
sorted: 28 out of: 45
sorted: 29 out of: 45
sorted: 30 out of: 45
sorted: 31 out of: 45
sorted: 32 out of: 45
sorted: 33 out of: 45
sorted: 34 out of: 45
sorted: 35 out of: 45
sorted: 36 out of: 45
sorted: 37 out of: 45
sorted: 38 out of: 45
sorted: 39 out of: 45
sorted: 40 out of: 45
sorted: 41 out of: 45
sorted: 42 out of: 45
sorted: 43 out of: 45
sorted: 44 out of: 45
sorted: 45 out of: 45
Cluster size: 45
there were : 42 values
sorted: 1 out of: 42
sorted: 2 out of: 42
sorted: 3 out of: 42
sorted: 4 out of: 42
sorted: 5 out of: 42
sorted: 6 out of: 42
sorted: 7 out of: 42
sorted: 8 out of: 42
sorted: 9 out of: 42
sorted: 10 out of: 42
sorted: 11 out of: 42
sorted: 12 out of: 42
sorted: 13 out of: 42
sorted: 14 out of: 42
sorted: 15 out of: 42
sorted: 16 out of: 42
sorted: 17 out of: 42
sorted: 18 out of: 42
sorted: 19 out of: 42
sorted: 20 out of: 42
sorted: 21 out of: 42
sorted: 22 out of: 42
sorted: 23 out of: 42
sorted: 24 out of: 42
sorted: 25 out of: 42
sorted: 26 out of: 42
sorted: 27 out of: 42
sorted: 28 out of: 42
sorted: 29 out of: 42
sorted: 30 out of: 42
sorted: 31 out of: 42
sorted: 32 out of: 42
sorted: 33 out of: 42
sorted: 34 out of: 42
sorted: 35 out of: 42
sorted: 36 out of: 42
sorted: 37 out of: 42
sorted: 38 out of: 42
sorted: 39 out of: 42
sorted: 40 out of: 42
sorted: 41 out of: 42
sorted: 42 out of: 42
Cluster size: 42
there were : 39 values
sorted: 1 out of: 39
sorted: 2 out of: 39
sorted: 3 out of: 39
sorted: 4 out of: 39
sorted: 5 out of: 39
sorted: 6 out of: 39
sorted: 7 out of: 39
sorted: 8 out of: 39
sorted: 9 out of: 39
sorted: 10 out of: 39
sorted: 11 out of: 39
sorted: 12 out of: 39
sorted: 13 out of: 39
sorted: 14 out of: 39
sorted: 15 out of: 39
sorted: 16 out of: 39
sorted: 17 out of: 39
sorted: 18 out of: 39
sorted: 19 out of: 39
sorted: 20 out of: 39
sorted: 21 out of: 39
sorted: 22 out of: 39
sorted: 23 out of: 39
sorted: 24 out of: 39
sorted: 25 out of: 39
sorted: 26 out of: 39
sorted: 27 out of: 39
sorted: 28 out of: 39
sorted: 29 out of: 39
sorted: 30 out of: 39
sorted: 31 out of: 39
sorted: 32 out of: 39
sorted: 33 out of: 39
sorted: 34 out of: 39
sorted: 35 out of: 39
sorted: 36 out of: 39
sorted: 37 out of: 39
sorted: 38 out of: 39
sorted: 39 out of: 39
Cluster size: 39
there were : 36 values
sorted: 1 out of: 36
sorted: 2 out of: 36
sorted: 3 out of: 36
sorted: 4 out of: 36
sorted: 5 out of: 36
sorted: 6 out of: 36
sorted: 7 out of: 36
sorted: 8 out of: 36
sorted: 9 out of: 36
sorted: 10 out of: 36
sorted: 11 out of: 36
sorted: 12 out of: 36
sorted: 13 out of: 36
sorted: 14 out of: 36
sorted: 15 out of: 36
sorted: 16 out of: 36
sorted: 17 out of: 36
sorted: 18 out of: 36
sorted: 19 out of: 36
sorted: 20 out of: 36
sorted: 21 out of: 36
sorted: 22 out of: 36
sorted: 23 out of: 36
sorted: 24 out of: 36
sorted: 25 out of: 36
sorted: 26 out of: 36
sorted: 27 out of: 36
sorted: 28 out of: 36
sorted: 29 out of: 36
sorted: 30 out of: 36
sorted: 31 out of: 36
sorted: 32 out of: 36
sorted: 33 out of: 36
sorted: 34 out of: 36
sorted: 35 out of: 36
sorted: 36 out of: 36
Cluster size: 36
there were : 27 values
sorted: 1 out of: 27
sorted: 2 out of: 27
sorted: 3 out of: 27
sorted: 4 out of: 27
sorted: 5 out of: 27
sorted: 6 out of: 27
sorted: 7 out of: 27
sorted: 8 out of: 27
sorted: 9 out of: 27
sorted: 10 out of: 27
sorted: 11 out of: 27
sorted: 12 out of: 27
sorted: 13 out of: 27
sorted: 14 out of: 27
sorted: 15 out of: 27
sorted: 16 out of: 27
sorted: 17 out of: 27
sorted: 18 out of: 27
sorted: 19 out of: 27
sorted: 20 out of: 27
sorted: 21 out of: 27
sorted: 22 out of: 27
sorted: 23 out of: 27
sorted: 24 out of: 27
sorted: 25 out of: 27
sorted: 26 out of: 27
sorted: 27 out of: 27
Cluster size: 27
there were : 25 values
sorted: 1 out of: 25
sorted: 2 out of: 25
sorted: 3 out of: 25
sorted: 4 out of: 25
sorted: 5 out of: 25
sorted: 6 out of: 25
sorted: 7 out of: 25
sorted: 8 out of: 25
sorted: 9 out of: 25
sorted: 10 out of: 25
sorted: 11 out of: 25
sorted: 12 out of: 25
sorted: 13 out of: 25
sorted: 14 out of: 25
sorted: 15 out of: 25
sorted: 16 out of: 25
sorted: 17 out of: 25
sorted: 18 out of: 25
sorted: 19 out of: 25
sorted: 20 out of: 25
sorted: 21 out of: 25
sorted: 22 out of: 25
sorted: 23 out of: 25
sorted: 24 out of: 25
sorted: 25 out of: 25
Cluster size: 25
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 23 values
sorted: 1 out of: 23
sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23
sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 23 values
sorted: 1 out of: 23
INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';1;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';1;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS6_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\37LS6_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Reject application] => {
		100.000% ChainPrecedence(Assess eligibility,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		
	}

sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23
sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 23 values
sorted: 1 out of: 23
sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23
sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 19 values
sorted: 1 out of: 19
sorted: 2 out of: 19
sorted: 3 out of: 19
sorted: 4 out of: 19
sorted: 5 out of: 19
sorted: 6 out of: 19
sorted: 7 out of: 19
sorted: 8 out of: 19
sorted: 9 out of: 19
sorted: 10 out of: 19
sorted: 11 out of: 19
sorted: 12 out of: 19
sorted: 13 out of: 19
sorted: 14 out of: 19
sorted: 15 out of: 19
sorted: 16 out of: 19
sorted: 17 out of: 19
sorted: 18 out of: 19
sorted: 19 out of: 19
Cluster size: 19
there were : 18 values
sorted: 1 out of: 18
sorted: 2 out of: 18
sorted: 3 out of: 18
sorted: 4 out of: 18
sorted: 5 out of: 18
sorted: 6 out of: 18
sorted: 7 out of: 18
sorted: 8 out of: 18
sorted: 9 out of: 18
sorted: 10 out of: 18
sorted: 11 out of: 18
sorted: 12 out of: 18
sorted: 13 out of: 18
sorted: 14 out of: 18
sorted: 15 out of: 18
sorted: 16 out of: 18
sorted: 17 out of: 18
sorted: 18 out of: 18
Cluster size: 18
there were : 17 values
sorted: 1 out of: 17
sorted: 2 out of: 17
sorted: 3 out of: 17
sorted: 4 out of: 17
sorted: 5 out of: 17
sorted: 6 out of: 17
sorted: 7 out of: 17
sorted: 8 out of: 17
sorted: 9 out of: 17
sorted: 10 out of: 17
sorted: 11 out of: 17
sorted: 12 out of: 17
sorted: 13 out of: 17
sorted: 14 out of: 17
sorted: 15 out of: 17
sorted: 16 out of: 17
sorted: 17 out of: 17
Cluster size: 17
there were : 14 values
sorted: 1 out of: 14
sorted: 2 out of: 14
sorted: 3 out of: 14
sorted: 4 out of: 14
sorted: 5 out of: 14
sorted: 6 out of: 14
sorted: 7 out of: 14
sorted: 8 out of: 14
sorted: 9 out of: 14
sorted: 10 out of: 14
sorted: 11 out of: 14
sorted: 12 out of: 14
sorted: 13 out of: 14
sorted: 14 out of: 14
Cluster size: 14
there were : 13 values
sorted: 1 out of: 13
sorted: 2 out of: 13
sorted: 3 out of: 13
sorted: 4 out of: 13
sorted: 5 out of: 13
sorted: 6 out of: 13
sorted: 7 out of: 13
sorted: 8 out of: 13
sorted: 9 out of: 13
sorted: 10 out of: 13
sorted: 11 out of: 13
sorted: 12 out of: 13
sorted: 13 out of: 13
Cluster size: 13
there were : 11 values
sorted: 1 out of: 11
sorted: 2 out of: 11
sorted: 3 out of: 11
sorted: 4 out of: 11
sorted: 5 out of: 11
sorted: 6 out of: 11
sorted: 7 out of: 11
sorted: 8 out of: 11
sorted: 9 out of: 11
sorted: 10 out of: 11
sorted: 11 out of: 11
Cluster size: 11
there were : 1 values
sorted: 1 out of: 1
Cluster size: 1
number of clusters: 38
x lines: 
[25, 40, 79]
clusters were ordered in the : 
[16, 9, 3, 28, 25, 10, 11, 27, 31, 4, 24, 36, 30, 17, 34, 32, 38, 8, 14, 21, 5, 29, 26, 2, 15, 22, 18, 33, 19, 37, 12, 20, 6, 13, 23, 1, 7, 35]
- - - start drawing drift map
- - - start processing the timeseries in clusters
without DRIFT: 78
current DRIFT (curve length): 79.44218376636825
current DRIFT (polyine length): 94.9443685612507
without DRIFT: 78
current DRIFT (curve length): 88.74047897211216
current DRIFT (polyine length): 155.82713845330488
without DRIFT: 78
current DRIFT (curve length): 132.4957363240829
current DRIFT (polyine length): 396.0872762230676
without DRIFT: 78
current DRIFT (curve length): 123.9812770669232
current DRIFT (polyine length): 327.60420702175634
without DRIFT: 78
current DRIFT (curve length): 119.71723125061663
current DRIFT (polyine length): 289.9907752907946
without DRIFT: 78
current DRIFT (curve length): 80.99748731255661
current DRIFT (polyine length): 111.21345603558288
without DRIFT: 78
current DRIFT (curve length): 99.49835189334188
current DRIFT (polyine length): 192.45836575244945
without DRIFT: 78
current DRIFT (curve length): 135.37528205024958
current DRIFT (polyine length): 416.04308556835605
without DRIFT: 78
current DRIFT (curve length): 119.40991268666072
current DRIFT (polyine length): 308.3010886084722
without DRIFT: 78
current DRIFT (curve length): 143.59266377579416
current DRIFT (polyine length): 460.2270009480242
without DRIFT: 78
current DRIFT (curve length): 123.31680814351948
current DRIFT (polyine length): 303.22369245775326
without DRIFT: 78
current DRIFT (curve length): 140.60348992535612
current DRIFT (polyine length): 434.6442886147085
without DRIFT: 78
current DRIFT (curve length): 85.1264160137426
current DRIFT (polyine length): 126.70057228922668
without DRIFT: 78
current DRIFT (curve length): 153.03179715933516
current DRIFT (polyine length): 333.2431274273583
without DRIFT: 78
current DRIFT (curve length): 144.30134457533788
current DRIFT (polyine length): 367.6864733621143
without DRIFT: 78
current DRIFT (curve length): 97.25229161857801
current DRIFT (polyine length): 248.3624476419619
without DRIFT: 78
current DRIFT (curve length): 140.7195051417212
current DRIFT (polyine length): 445.2204888496464
without DRIFT: 78
current DRIFT (curve length): 97.23097615198448
current DRIFT (polyine length): 244.98852801877132
without DRIFT: 78
current DRIFT (curve length): 110.89095095509364
current DRIFT (polyine length): 245.03218392636467
without DRIFT: 78
current DRIFT (curve length): 101.57611140732735
current DRIFT (polyine length): 168.39046995998805
without DRIFT: 78
current DRIFT (curve length): 132.4610919431426
current DRIFT (polyine length): 395.66401376617677
without DRIFT: 78
current DRIFT (curve length): 102.89161079917602
current DRIFT (polyine length): 236.94570292416998
without DRIFT: 78
current DRIFT (curve length): 136.98827382721385
current DRIFT (polyine length): 377.08853782055246
without DRIFT: 78
current DRIFT (curve length): 87.97480965084976
current DRIFT (polyine length): 144.33803563134762
without DRIFT: 78
current DRIFT (curve length): 124.19834833916963
current DRIFT (polyine length): 315.59481480678164
without DRIFT: 78
current DRIFT (curve length): 146.44201451267912
current DRIFT (polyine length): 345.5537761612638
without DRIFT: 78
current DRIFT (curve length): 126.77930943283125
current DRIFT (polyine length): 233.7432647540712
without DRIFT: 78
current DRIFT (curve length): 116.32671062549467
current DRIFT (polyine length): 295.11178556560907
without DRIFT: 78
current DRIFT (curve length): 86.83383872416094
current DRIFT (polyine length): 101.94754566769
without DRIFT: 78
current DRIFT (curve length): 140.71364946238953
current DRIFT (polyine length): 432.26817520359145
without DRIFT: 78
current DRIFT (curve length): 137.61335802070167
current DRIFT (polyine length): 351.5331469421018
without DRIFT: 78
current DRIFT (curve length): 122.84423842821943
current DRIFT (polyine length): 282.93748745057445
without DRIFT: 78
current DRIFT (curve length): 107.18040443037245
current DRIFT (polyine length): 221.85391045931266
without DRIFT: 78
current DRIFT (curve length): 108.15919203432988
current DRIFT (polyine length): 248.61719357554458
without DRIFT: 78
current DRIFT (curve length): 164.7096861665796
current DRIFT (polyine length): 303.3426993187167
without DRIFT: 78
current DRIFT (curve length): 152.15806970865322
current DRIFT (polyine length): 156.00632886041473
without DRIFT: 78
current DRIFT (curve length): 133.24921570962914
current DRIFT (polyine length): 288.8116965408266
without DRIFT: 78
current DRIFT (curve length): 151.2528158942394
current DRIFT (polyine length): 155.02536988246104
