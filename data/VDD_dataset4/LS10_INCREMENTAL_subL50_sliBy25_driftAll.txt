there are : 2505 values left after deleting 100, and 0s
there were: 2581 vectors with zeros removed
there were: 314 vectors with hundreds removed
there were: 0 vectors with non changing values removed
there were : 245 values
sorted: 1 out of: 245
sorted: 2 out of: 245
sorted: 3 out of: 245
sorted: 4 out of: 245
sorted: 5 out of: 245
sorted: 6 out of: 245
sorted: 7 out of: 245
sorted: 8 out of: 245
sorted: 9 out of: 245
sorted: 10 out of: 245
sorted: 11 out of: 245
sorted: 12 out of: 245
sorted: 13 out of: 245
sorted: 14 out of: 245
sorted: 15 out of: 245
sorted: 16 out of: 245
sorted: 17 out of: 245
sorted: 18 out of: 245
sorted: 19 out of: 245
sorted: 20 out of: 245
sorted: 21 out of: 245
sorted: 22 out of: 245
sorted: 23 out of: 245
sorted: 24 out of: 245
sorted: 25 out of: 245
sorted: 26 out of: 245
sorted: 27 out of: 245
sorted: 28 out of: 245
sorted: 29 out of: 245
sorted: 30 out of: 245
sorted: 31 out of: 245
sorted: 32 out of: 245
sorted: 33 out of: 245
sorted: 34 out of: 245
sorted: 35 out of: 245
sorted: 36 out of: 245
sorted: 37 out of: 245
sorted: 38 out of: 245
sorted: 39 out of: 245
sorted: 40 out of: 245
sorted: 41 out of: 245
sorted: 42 out of: 245
sorted: 43 out of: 245
sorted: 44 out of: 245
sorted: 45 out of: 245
sorted: 46 out of: 245
sorted: 47 out of: 245
sorted: 48 out of: 245
sorted: 49 out of: 245
sorted: 50 out of: 245
sorted: 51 out of: 245
sorted: 52 out of: 245
sorted: 53 out of: 245
sorted: 54 out of: 245
sorted: 55 out of: 245
sorted: 56 out of: 245
sorted: 57 out of: 245
sorted: 58 out of: 245
sorted: 59 out of: 245
sorted: 60 out of: 245
sorted: 61 out of: 245
sorted: 62 out of: 245
sorted: 63 out of: 245
sorted: 64 out of: 245
sorted: 65 out of: 245
sorted: 66 out of: 245
sorted: 67 out of: 245
sorted: 68 out of: 245
sorted: 69 out of: 245
sorted: 70 out of: 245
sorted: 71 out of: 245
sorted: 72 out of: 245
sorted: 73 out of: 245
sorted: 74 out of: 245
sorted: 75 out of: 245
sorted: 76 out of: 245
sorted: 77 out of: 245
sorted: 78 out of: 245
sorted: 79 out of: 245
sorted: 80 out of: 245
sorted: 81 out of: 245
sorted: 82 out of: 245
sorted: 83 out of: 245
sorted: 84 out of: 245
sorted: 85 out of: 245
sorted: 86 out of: 245
sorted: 87 out of: 245
sorted: 88 out of: 245
sorted: 89 out of: 245
sorted: 90 out of: 245
sorted: 91 out of: 245
sorted: 92 out of: 245
sorted: 93 out of: 245
sorted: 94 out of: 245
sorted: 95 out of: 245
sorted: 96 out of: 245
sorted: 97 out of: 245
sorted: 98 out of: 245
sorted: 99 out of: 245
sorted: 100 out of: 245
sorted: 101 out of: 245
sorted: 102 out of: 245
sorted: 103 out of: 245
sorted: 104 out of: 245
sorted: 105 out of: 245
sorted: 106 out of: 245
sorted: 107 out of: 245
sorted: 108 out of: 245
sorted: 109 out of: 245
sorted: 110 out of: 245
sorted: 111 out of: 245
sorted: 112 out of: 245
sorted: 113 out of: 245
sorted: 114 out of: 245
sorted: 115 out of: 245
sorted: 116 out of: 245
sorted: 117 out of: 245
sorted: 118 out of: 245
sorted: 119 out of: 245
sorted: 120 out of: 245
sorted: 121 out of: 245
sorted: 122 out of: 245
sorted: 123 out of: 245
sorted: 124 out of: 245
sorted: 125 out of: 245
sorted: 126 out of: 245
sorted: 127 out of: 245
sorted: 128 out of: 245
sorted: 129 out of: 245
sorted: 130 out of: 245
sorted: 131 out of: 245
sorted: 132 out of: 245
sorted: 133 out of: 245
sorted: 134 out of: 245
sorted: 135 out of: 245
sorted: 136 out of: 245
sorted: 137 out of: 245
sorted: 138 out of: 245
sorted: 139 out of: 245
sorted: 140 out of: 245
sorted: 141 out of: 245
sorted: 142 out of: 245
sorted: 143 out of: 245
sorted: 144 out of: 245
sorted: 145 out of: 245
sorted: 146 out of: 245
sorted: 147 out of: 245
sorted: 148 out of: 245
sorted: 149 out of: 245
sorted: 150 out of: 245
sorted: 151 out of: 245
sorted: 152 out of: 245
sorted: 153 out of: 245
sorted: 154 out of: 245
sorted: 155 out of: 245
sorted: 156 out of: 245
sorted: 157 out of: 245
sorted: 158 out of: 245
sorted: 159 out of: 245
sorted: 160 out of: 245
sorted: 161 out of: 245
sorted: 162 out of: 245
sorted: 163 out of: 245
sorted: 164 out of: 245
sorted: 165 out of: 245
sorted: 166 out of: 245
sorted: 167 out of: 245
sorted: 168 out of: 245
sorted: 169 out of: 245
sorted: 170 out of: 245
sorted: 171 out of: 245
sorted: 172 out of: 245
sorted: 173 out of: 245
sorted: 174 out of: 245
sorted: 175 out of: 245
sorted: 176 out of: 245
sorted: 177 out of: 245
sorted: 178 out of: 245
sorted: 179 out of: 245
sorted: 180 out of: 245
sorted: 181 out of: 245
sorted: 182 out of: 245
sorted: 183 out of: 245
sorted: 184 out of: 245
sorted: 185 out of: 245
sorted: 186 out of: 245
sorted: 187 out of: 245
sorted: 188 out of: 245
sorted: 189 out of: 245
sorted: 190 out of: 245
sorted: 191 out of: 245
sorted: 192 out of: 245
sorted: 193 out of: 245
sorted: 194 out of: 245
sorted: 195 out of: 245
sorted: 196 out of: 245
sorted: 197 out of: 245
sorted: 198 out of: 245
sorted: 199 out of: 245
sorted: 200 out of: 245
sorted: 201 out of: 245
sorted: 202 out of: 245
sorted: 203 out of: 245
sorted: 204 out of: 245
sorted: 205 out of: 245
sorted: 206 out of: 245
sorted: 207 out of: 245
sorted: 208 out of: 245
sorted: 209 out of: 245
sorted: 210 out of: 245
sorted: 211 out of: 245
sorted: 212 out of: 245
sorted: 213 out of: 245
sorted: 214 out of: 245
sorted: 215 out of: 245
sorted: 216 out of: 245
sorted: 217 out of: 245
sorted: 218 out of: 245
sorted: 219 out of: 245
sorted: 220 out of: 245
sorted: 221 out of: 245
sorted: 222 out of: 245
sorted: 223 out of: 245
sorted: 224 out of: 245
sorted: 225 out of: 245
sorted: 226 out of: 245
sorted: 227 out of: 245
sorted: 228 out of: 245
sorted: 229 out of: 245
sorted: 230 out of: 245
sorted: 231 out of: 245
sorted: 232 out of: 245
sorted: 233 out of: 245
sorted: 234 out of: 245
sorted: 235 out of: 245
sorted: 236 out of: 245
sorted: 237 out of: 245
sorted: 238 out of: 245
sorted: 239 out of: 245
sorted: 240 out of: 245
sorted: 241 out of: 245
sorted: 242 out of: 245
sorted: 243 out of: 245
sorted: 244 out of: 245
sorted: 245 out of: 245
Cluster size: 245
there were : 203 values
sorted: 1 out of: 203
sorted: 2 out of: 203
sorted: 3 out of: 203
sorted: 4 out of: 203
sorted: 5 out of: 203
sorted: 6 out of: 203
sorted: 7 out of: 203
sorted: 8 out of: 203
sorted: 9 out of: 203
sorted: 10 out of: 203
sorted: 11 out of: 203
sorted: 12 out of: 203
sorted: 13 out of: 203
sorted: 14 out of: 203
sorted: 15 out of: 203
sorted: 16 out of: 203
sorted: 17 out of: 203
sorted: 18 out of: 203
sorted: 19 out of: 203
sorted: 20 out of: 203
sorted: 21 out of: 203
sorted: 22 out of: 203
sorted: 23 out of: 203
sorted: 24 out of: 203
sorted: 25 out of: 203
sorted: 26 out of: 203
sorted: 27 out of: 203
sorted: 28 out of: 203
sorted: 29 out of: 203
sorted: 30 out of: 203
sorted: 31 out of: 203
sorted: 32 out of: 203
sorted: 33 out of: 203
sorted: 34 out of: 203
sorted: 35 out of: 203
sorted: 36 out of: 203
sorted: 37 out of: 203
sorted: 38 out of: 203
sorted: 39 out of: 203
sorted: 40 out of: 203
sorted: 41 out of: 203
sorted: 42 out of: 203
sorted: 43 out of: 203
sorted: 44 out of: 203
sorted: 45 out of: 203
sorted: 46 out of: 203
sorted: 47 out of: 203
sorted: 48 out of: 203
sorted: 49 out of: 203
sorted: 50 out of: 203
sorted: 51 out of: 203
sorted: 52 out of: 203
sorted: 53 out of: 203
sorted: 54 out of: 203
sorted: 55 out of: 203
sorted: 56 out of: 203
sorted: 57 out of: 203
sorted: 58 out of: 203
sorted: 59 out of: 203
sorted: 60 out of: 203
sorted: 61 out of: 203
sorted: 62 out of: 203
sorted: 63 out of: 203
sorted: 64 out of: 203
sorted: 65 out of: 203
sorted: 66 out of: 203
sorted: 67 out of: 203
sorted: 68 out of: 203
sorted: 69 out of: 203
sorted: 70 out of: 203
sorted: 71 out of: 203
sorted: 72 out of: 203
sorted: 73 out of: 203
sorted: 74 out of: 203
sorted: 75 out of: 203
sorted: 76 out of: 203
sorted: 77 out of: 203
sorted: 78 out of: 203
sorted: 79 out of: 203
sorted: 80 out of: 203
sorted: 81 out of: 203
sorted: 82 out of: 203
sorted: 83 out of: 203
sorted: 84 out of: 203
sorted: 85 out of: 203
sorted: 86 out of: 203
sorted: 87 out of: 203
sorted: 88 out of: 203
sorted: 89 out of: 203
sorted: 90 out of: 203
sorted: 91 out of: 203
sorted: 92 out of: 203
sorted: 93 out of: 203
sorted: 94 out of: 203
sorted: 95 out of: 203
sorted: 96 out of: 203
sorted: 97 out of: 203
sorted: 98 out of: 203
sorted: 99 out of: 203
sorted: 100 out of: 203
sorted: 101 out of: 203
sorted: 102 out of: 203
sorted: 103 out of: 203
sorted: 104 out of: 203
sorted: 105 out of: 203
sorted: 106 out of: 203
sorted: 107 out of: 203
sorted: 108 out of: 203
sorted: 109 out of: 203
sorted: 110 out of: 203
sorted: 111 out of: 203
sorted: 112 out of: 203
sorted: 113 out of: 203
sorted: 114 out of: 203
sorted: 115 out of: 203
sorted: 116 out of: 203
sorted: 117 out of: 203
sorted: 118 out of: 203
sorted: 119 out of: 203
sorted: 120 out of: 203
sorted: 121 out of: 203
sorted: 122 out of: 203
sorted: 123 out of: 203
sorted: 124 out of: 203
sorted: 125 out of: 203
sorted: 126 out of: 203
sorted: 127 out of: 203
sorted: 128 out of: 203
sorted: 129 out of: 203
sorted: 130 out of: 203
sorted: 131 out of: 203
sorted: 132 out of: 203
sorted: 133 out of: 203
sorted: 134 out of: 203
sorted: 135 out of: 203
sorted: 136 out of: 203
sorted: 137 out of: 203
sorted: 138 out of: 203
sorted: 139 out of: 203
sorted: 140 out of: 203
sorted: 141 out of: 203
sorted: 142 out of: 203
sorted: 143 out of: 203
sorted: 144 out of: 203
sorted: 145 out of: 203
sorted: 146 out of: 203
sorted: 147 out of: 203
sorted: 148 out of: 203
sorted: 149 out of: 203
sorted: 150 out of: 203
sorted: 151 out of: 203
sorted: 152 out of: 203
sorted: 153 out of: 203
sorted: 154 out of: 203
sorted: 155 out of: 203
sorted: 156 out of: 203
sorted: 157 out of: 203
sorted: 158 out of: 203
sorted: 159 out of: 203
sorted: 160 out of: 203
sorted: 161 out of: 203
sorted: 162 out of: 203
sorted: 163 out of: 203
sorted: 164 out of: 203
sorted: 165 out of: 203
sorted: 166 out of: 203
sorted: 167 out of: 203
sorted: 168 out of: 203
sorted: 169 out of: 203
sorted: 170 out of: 203
sorted: 171 out of: 203
sorted: 172 out of: 203
sorted: 173 out of: 203
sorted: 174 out of: 203
sorted: 175 out of: 203
sorted: 176 out of: 203
sorted: 177 out of: 203
sorted: 178 out of: 203
sorted: 179 out of: 203
sorted: 180 out of: 203
sorted: 181 out of: 203
sorted: 182 out of: 203
sorted: 183 out of: 203
sorted: 184 out of: 203
sorted: 185 out of: 203
sorted: 186 out of: 203
sorted: 187 out of: 203
sorted: 188 out of: 203
sorted: 189 out of: 203
sorted: 190 out of: 203
sorted: 191 out of: 203
sorted: 192 out of: 203
sorted: 193 out of: 203
sorted: 194 out of: 203
sorted: 195 out of: 203
sorted: 196 out of: 203
sorted: 197 out of: 203
sorted: 198 out of: 203
sorted: 199 out of: 203
sorted: 200 out of: 203
sorted: 201 out of: 203
sorted: 202 out of: 203
sorted: 203 out of: 203
Cluster size: 203
there were : 178 values
sorted: 1 out of: 178
sorted: 2 out of: 178
sorted: 3 out of: 178
sorted: 4 out of: 178
sorted: 5 out of: 178
sorted: 6 out of: 178
sorted: 7 out of: 178
sorted: 8 out of: 178
sorted: 9 out of: 178
sorted: 10 out of: 178
sorted: 11 out of: 178
sorted: 12 out of: 178
sorted: 13 out of: 178
sorted: 14 out of: 178
sorted: 15 out of: 178
sorted: 16 out of: 178
sorted: 17 out of: 178
sorted: 18 out of: 178
sorted: 19 out of: 178
sorted: 20 out of: 178
sorted: 21 out of: 178
sorted: 22 out of: 178
sorted: 23 out of: 178
sorted: 24 out of: 178
sorted: 25 out of: 178
sorted: 26 out of: 178
sorted: 27 out of: 178
sorted: 28 out of: 178
sorted: 29 out of: 178
sorted: 30 out of: 178
sorted: 31 out of: 178
sorted: 32 out of: 178
sorted: 33 out of: 178
sorted: 34 out of: 178
sorted: 35 out of: 178
sorted: 36 out of: 178
sorted: 37 out of: 178
sorted: 38 out of: 178
sorted: 39 out of: 178
sorted: 40 out of: 178
sorted: 41 out of: 178
sorted: 42 out of: 178
sorted: 43 out of: 178
sorted: 44 out of: 178
sorted: 45 out of: 178
sorted: 46 out of: 178
sorted: 47 out of: 178
sorted: 48 out of: 178
sorted: 49 out of: 178
sorted: 50 out of: 178
sorted: 51 out of: 178
sorted: 52 out of: 178
sorted: 53 out of: 178
sorted: 54 out of: 178
sorted: 55 out of: 178
sorted: 56 out of: 178
sorted: 57 out of: 178
sorted: 58 out of: 178
sorted: 59 out of: 178
sorted: 60 out of: 178
sorted: 61 out of: 178
sorted: 62 out of: 178
sorted: 63 out of: 178
sorted: 64 out of: 178
sorted: 65 out of: 178
sorted: 66 out of: 178
sorted: 67 out of: 178
sorted: 68 out of: 178
sorted: 69 out of: 178
sorted: 70 out of: 178
sorted: 71 out of: 178
sorted: 72 out of: 178
sorted: 73 out of: 178
sorted: 74 out of: 178
sorted: 75 out of: 178
sorted: 76 out of: 178
sorted: 77 out of: 178
sorted: 78 out of: 178
sorted: 79 out of: 178
sorted: 80 out of: 178
sorted: 81 out of: 178
sorted: 82 out of: 178
sorted: 83 out of: 178
sorted: 84 out of: 178
sorted: 85 out of: 178
sorted: 86 out of: 178
sorted: 87 out of: 178
sorted: 88 out of: 178
sorted: 89 out of: 178
sorted: 90 out of: 178
sorted: 91 out of: 178
sorted: 92 out of: 178
sorted: 93 out of: 178
sorted: 94 out of: 178
sorted: 95 out of: 178
sorted: 96 out of: 178
sorted: 97 out of: 178
sorted: 98 out of: 178
sorted: 99 out of: 178
sorted: 100 out of: 178
sorted: 101 out of: 178
sorted: 102 out of: 178
sorted: 103 out of: 178
sorted: 104 out of: 178
sorted: 105 out of: 178
sorted: 106 out of: 178
sorted: 107 out of: 178
sorted: 108 out of: 178
sorted: 109 out of: 178
sorted: 110 out of: 178
sorted: 111 out of: 178
sorted: 112 out of: 178
sorted: 113 out of: 178
sorted: 114 out of: 178
sorted: 115 out of: 178
sorted: 116 out of: 178
sorted: 117 out of: 178
sorted: 118 out of: 178
sorted: 119 out of: 178
sorted: 120 out of: 178
sorted: 121 out of: 178
sorted: 122 out of: 178
sorted: 123 out of: 178
sorted: 124 out of: 178
sorted: 125 out of: 178
sorted: 126 out of: 178
sorted: 127 out of: 178
sorted: 128 out of: 178
sorted: 129 out of: 178
sorted: 130 out of: 178
sorted: 131 out of: 178
sorted: 132 out of: 178
sorted: 133 out of: 178
sorted: 134 out of: 178
sorted: 135 out of: 178
sorted: 136 out of: 178
sorted: 137 out of: 178
sorted: 138 out of: 178
sorted: 139 out of: 178
sorted: 140 out of: 178
sorted: 141 out of: 178
sorted: 142 out of: 178
sorted: 143 out of: 178
sorted: 144 out of: 178
sorted: 145 out of: 178
sorted: 146 out of: 178
sorted: 147 out of: 178
sorted: 148 out of: 178
sorted: 149 out of: 178
sorted: 150 out of: 178
sorted: 151 out of: 178
sorted: 152 out of: 178
sorted: 153 out of: 178
sorted: 154 out of: 178
sorted: 155 out of: 178
sorted: 156 out of: 178
sorted: 157 out of: 178
sorted: 158 out of: 178
sorted: 159 out of: 178
sorted: 160 out of: 178
sorted: 161 out of: 178
sorted: 162 out of: 178
sorted: 163 out of: 178
sorted: 164 out of: 178
sorted: 165 out of: 178
sorted: 166 out of: 178
sorted: 167 out of: 178
sorted: 168 out of: 178
sorted: 169 out of: 178
sorted: 170 out of: 178
sorted: 171 out of: 178
sorted: 172 out of: 178
sorted: 173 out of: 178
sorted: 174 out of: 178
sorted: 175 out of: 178
sorted: 176 out of: 178
sorted: 177 out of: 178
sorted: 178 out of: 178
Cluster size: 178
there were : 165 values
sorted: 1 out of: 165
sorted: 2 out of: 165
sorted: 3 out of: 165
sorted: 4 out of: 165
sorted: 5 out of: 165
sorted: 6 out of: 165
sorted: 7 out of: 165
sorted: 8 out of: 165
sorted: 9 out of: 165
sorted: 10 out of: 165
sorted: 11 out of: 165
sorted: 12 out of: 165
sorted: 13 out of: 165
sorted: 14 out of: 165
sorted: 15 out of: 165
sorted: 16 out of: 165
sorted: 17 out of: 165
sorted: 18 out of: 165
sorted: 19 out of: 165
sorted: 20 out of: 165
sorted: 21 out of: 165
sorted: 22 out of: 165
sorted: 23 out of: 165
sorted: 24 out of: 165
sorted: 25 out of: 165
sorted: 26 out of: 165
sorted: 27 out of: 165
sorted: 28 out of: 165
sorted: 29 out of: 165
sorted: 30 out of: 165
sorted: 31 out of: 165
sorted: 32 out of: 165
sorted: 33 out of: 165
sorted: 34 out of: 165
sorted: 35 out of: 165
sorted: 36 out of: 165
sorted: 37 out of: 165
sorted: 38 out of: 165
sorted: 39 out of: 165
sorted: 40 out of: 165
sorted: 41 out of: 165
sorted: 42 out of: 165
sorted: 43 out of: 165
sorted: 44 out of: 165
sorted: 45 out of: 165
sorted: 46 out of: 165
sorted: 47 out of: 165
sorted: 48 out of: 165
sorted: 49 out of: 165
sorted: 50 out of: 165
sorted: 51 out of: 165
sorted: 52 out of: 165
sorted: 53 out of: 165
sorted: 54 out of: 165
sorted: 55 out of: 165
sorted: 56 out of: 165
sorted: 57 out of: 165
sorted: 58 out of: 165
sorted: 59 out of: 165
sorted: 60 out of: 165
sorted: 61 out of: 165
sorted: 62 out of: 165
sorted: 63 out of: 165
sorted: 64 out of: 165
sorted: 65 out of: 165
sorted: 66 out of: 165
sorted: 67 out of: 165
sorted: 68 out of: 165
sorted: 69 out of: 165
sorted: 70 out of: 165
sorted: 71 out of: 165
sorted: 72 out of: 165
sorted: 73 out of: 165
sorted: 74 out of: 165
sorted: 75 out of: 165
sorted: 76 out of: 165
sorted: 77 out of: 165
sorted: 78 out of: 165
sorted: 79 out of: 165
sorted: 80 out of: 165
sorted: 81 out of: 165
sorted: 82 out of: 165
sorted: 83 out of: 165
sorted: 84 out of: 165
sorted: 85 out of: 165
sorted: 86 out of: 165
sorted: 87 out of: 165
sorted: 88 out of: 165
sorted: 89 out of: 165
sorted: 90 out of: 165
sorted: 91 out of: 165
sorted: 92 out of: 165
sorted: 93 out of: 165
sorted: 94 out of: 165
sorted: 95 out of: 165
sorted: 96 out of: 165
sorted: 97 out of: 165
sorted: 98 out of: 165
sorted: 99 out of: 165
sorted: 100 out of: 165
sorted: 101 out of: 165
sorted: 102 out of: 165
sorted: 103 out of: 165
sorted: 104 out of: 165
sorted: 105 out of: 165
sorted: 106 out of: 165
sorted: 107 out of: 165
sorted: 108 out of: 165
sorted: 109 out of: 165
sorted: 110 out of: 165
sorted: 111 out of: 165
sorted: 112 out of: 165
sorted: 113 out of: 165
sorted: 114 out of: 165
sorted: 115 out of: 165
sorted: 116 out of: 165
sorted: 117 out of: 165
sorted: 118 out of: 165
sorted: 119 out of: 165
sorted: 120 out of: 165
sorted: 121 out of: 165
sorted: 122 out of: 165
sorted: 123 out of: 165
sorted: 124 out of: 165
sorted: 125 out of: 165
sorted: 126 out of: 165
sorted: 127 out of: 165
sorted: 128 out of: 165
sorted: 129 out of: 165
sorted: 130 out of: 165
sorted: 131 out of: 165
sorted: 132 out of: 165
sorted: 133 out of: 165
sorted: 134 out of: 165
sorted: 135 out of: 165
sorted: 136 out of: 165
sorted: 137 out of: 165
sorted: 138 out of: 165
sorted: 139 out of: 165
sorted: 140 out of: 165
sorted: 141 out of: 165
sorted: 142 out of: 165
sorted: 143 out of: 165
sorted: 144 out of: 165
sorted: 145 out of: 165
sorted: 146 out of: 165
sorted: 147 out of: 165
sorted: 148 out of: 165
sorted: 149 out of: 165
sorted: 150 out of: 165
sorted: 151 out of: 165
sorted: 152 out of: 165
sorted: 153 out of: 165
sorted: 154 out of: 165
sorted: 155 out of: 165
sorted: 156 out of: 165
sorted: 157 out of: 165
sorted: 158 out of: 165
sorted: 159 out of: 165
sorted: 160 out of: 165
sorted: 161 out of: 165
sorted: 162 out of: 165
sorted: 163 out of: 165
sorted: 164 out of: 165
sorted: 165 out of: 165
Cluster size: 165
there were : 129 values
sorted: 1 out of: 129
sorted: 2 out of: 129
sorted: 3 out of: 129
sorted: 4 out of: 129
sorted: 5 out of: 129
sorted: 6 out of: 129
sorted: 7 out of: 129
sorted: 8 out of: 129
sorted: 9 out of: 129
sorted: 10 out of: 129
sorted: 11 out of: 129
sorted: 12 out of: 129
sorted: 13 out of: 129
sorted: 14 out of: 129
sorted: 15 out of: 129
sorted: 16 out of: 129
sorted: 17 out of: 129
sorted: 18 out of: 129
sorted: 19 out of: 129
sorted: 20 out of: 129
sorted: 21 out of: 129
sorted: 22 out of: 129
sorted: 23 out of: 129
sorted: 24 out of: 129
sorted: 25 out of: 129
sorted: 26 out of: 129
sorted: 27 out of: 129
sorted: 28 out of: 129
sorted: 29 out of: 129
sorted: 30 out of: 129
sorted: 31 out of: 129
sorted: 32 out of: 129
sorted: 33 out of: 129
sorted: 34 out of: 129
sorted: 35 out of: 129
sorted: 36 out of: 129
sorted: 37 out of: 129
sorted: 38 out of: 129
sorted: 39 out of: 129
sorted: 40 out of: 129
sorted: 41 out of: 129
sorted: 42 out of: 129
sorted: 43 out of: 129
sorted: 44 out of: 129
sorted: 45 out of: 129
sorted: 46 out of: 129
sorted: 47 out of: 129
sorted: 48 out of: 129
sorted: 49 out of: 129
sorted: 50 out of: 129
sorted: 51 out of: 129
sorted: 52 out of: 129
sorted: 53 out of: 129
sorted: 54 out of: 129
sorted: 55 out of: 129
sorted: 56 out of: 129
sorted: 57 out of: 129
sorted: 58 out of: 129
sorted: 59 out of: 129
sorted: 60 out of: 129
sorted: 61 out of: 129
sorted: 62 out of: 129
sorted: 63 out of: 129
sorted: 64 out of: 129
sorted: 65 out of: 129
sorted: 66 out of: 129
sorted: 67 out of: 129
sorted: 68 out of: 129
sorted: 69 out of: 129
sorted: 70 out of: 129
sorted: 71 out of: 129
sorted: 72 out of: 129
sorted: 73 out of: 129
sorted: 74 out of: 129
sorted: 75 out of: 129
sorted: 76 out of: 129
sorted: 77 out of: 129
sorted: 78 out of: 129
sorted: 79 out of: 129
sorted: 80 out of: 129
sorted: 81 out of: 129
sorted: 82 out of: 129
sorted: 83 out of: 129
sorted: 84 out of: 129
sorted: 85 out of: 129
sorted: 86 out of: 129
sorted: 87 out of: 129
sorted: 88 out of: 129
sorted: 89 out of: 129
sorted: 90 out of: 129
sorted: 91 out of: 129
sorted: 92 out of: 129
sorted: 93 out of: 129
sorted: 94 out of: 129
sorted: 95 out of: 129
sorted: 96 out of: 129
sorted: 97 out of: 129
sorted: 98 out of: 129
sorted: 99 out of: 129
sorted: 100 out of: 129
sorted: 101 out of: 129
sorted: 102 out of: 129
sorted: 103 out of: 129
sorted: 104 out of: 129
sorted: 105 out of: 129
sorted: 106 out of: 129
sorted: 107 out of: 129
sorted: 108 out of: 129
sorted: 109 out of: 129
sorted: 110 out of: 129
sorted: 111 out of: 129
sorted: 112 out of: 129
sorted: 113 out of: 129
sorted: 114 out of: 129
sorted: 115 out of: 129
sorted: 116 out of: 129
sorted: 117 out of: 129
sorted: 118 out of: 129
sorted: 119 out of: 129
sorted: 120 out of: 129
sorted: 121 out of: 129
sorted: 122 out of: 129
sorted: 123 out of: 129
sorted: 124 out of: 129
sorted: 125 out of: 129
sorted: 126 out of: 129
sorted: 127 out of: 129
sorted: 128 out of: 129
sorted: 129 out of: 129
Cluster size: 129
there were : 92 values
sorted: 1 out of: 92
sorted: 2 out of: 92
sorted: 3 out of: 92
sorted: 4 out of: 92
sorted: 5 out of: 92
sorted: 6 out of: 92
sorted: 7 out of: 92
sorted: 8 out of: 92
sorted: 9 out of: 92
sorted: 10 out of: 92
sorted: 11 out of: 92
sorted: 12 out of: 92
sorted: 13 out of: 92
sorted: 14 out of: 92
sorted: 15 out of: 92
sorted: 16 out of: 92
sorted: 17 out of: 92
sorted: 18 out of: 92
sorted: 19 out of: 92
sorted: 20 out of: 92
sorted: 21 out of: 92
sorted: 22 out of: 92
sorted: 23 out of: 92
sorted: 24 out of: 92
sorted: 25 out of: 92
sorted: 26 out of: 92
sorted: 27 out of: 92
sorted: 28 out of: 92
sorted: 29 out of: 92
sorted: 30 out of: 92
sorted: 31 out of: 92
sorted: 32 out of: 92
sorted: 33 out of: 92
sorted: 34 out of: 92
sorted: 35 out of: 92
sorted: 36 out of: 92
sorted: 37 out of: 92
sorted: 38 out of: 92
sorted: 39 out of: 92
sorted: 40 out of: 92
sorted: 41 out of: 92
sorted: 42 out of: 92
sorted: 43 out of: 92
sorted: 44 out of: 92
sorted: 45 out of: 92
sorted: 46 out of: 92
sorted: 47 out of: 92
sorted: 48 out of: 92
sorted: 49 out of: 92
sorted: 50 out of: 92
sorted: 51 out of: 92
sorted: 52 out of: 92
sorted: 53 out of: 92
sorted: 54 out of: 92
sorted: 55 out of: 92
sorted: 56 out of: 92
sorted: 57 out of: 92
sorted: 58 out of: 92
sorted: 59 out of: 92
sorted: 60 out of: 92
sorted: 61 out of: 92
sorted: 62 out of: 92
sorted: 63 out of: 92
sorted: 64 out of: 92
sorted: 65 out of: 92
sorted: 66 out of: 92
sorted: 67 out of: 92
sorted: 68 out of: 92
sorted: 69 out of: 92
sorted: 70 out of: 92
sorted: 71 out of: 92
sorted: 72 out of: 92
sorted: 73 out of: 92
sorted: 74 out of: 92
sorted: 75 out of: 92
sorted: 76 out of: 92
sorted: 77 out of: 92
sorted: 78 out of: 92
sorted: 79 out of: 92
sorted: 80 out of: 92
sorted: 81 out of: 92
sorted: 82 out of: 92
sorted: 83 out of: 92
sorted: 84 out of: 92
sorted: 85 out of: 92
sorted: 86 out of: 92
sorted: 87 out of: 92
sorted: 88 out of: 92
sorted: 89 out of: 92
sorted: 90 out of: 92
sorted: 91 out of: 92
sorted: 92 out of: 92
Cluster size: 92
there were : 90 values
sorted: 1 out of: 90
sorted: 2 out of: 90
sorted: 3 out of: 90
sorted: 4 out of: 90
sorted: 5 out of: 90
sorted: 6 out of: 90
sorted: 7 out of: 90
sorted: 8 out of: 90
sorted: 9 out of: 90
sorted: 10 out of: 90
sorted: 11 out of: 90
sorted: 12 out of: 90
sorted: 13 out of: 90
sorted: 14 out of: 90
sorted: 15 out of: 90
sorted: 16 out of: 90
sorted: 17 out of: 90
sorted: 18 out of: 90
sorted: 19 out of: 90
sorted: 20 out of: 90
sorted: 21 out of: 90
sorted: 22 out of: 90
sorted: 23 out of: 90
sorted: 24 out of: 90
sorted: 25 out of: 90
sorted: 26 out of: 90
sorted: 27 out of: 90
sorted: 28 out of: 90
sorted: 29 out of: 90
sorted: 30 out of: 90
sorted: 31 out of: 90
sorted: 32 out of: 90
sorted: 33 out of: 90
sorted: 34 out of: 90
sorted: 35 out of: 90
sorted: 36 out of: 90
sorted: 37 out of: 90
sorted: 38 out of: 90
sorted: 39 out of: 90
sorted: 40 out of: 90
sorted: 41 out of: 90
sorted: 42 out of: 90
sorted: 43 out of: 90
sorted: 44 out of: 90
sorted: 45 out of: 90
sorted: 46 out of: 90
sorted: 47 out of: 90
sorted: 48 out of: 90
sorted: 49 out of: 90
sorted: 50 out of: 90
sorted: 51 out of: 90
sorted: 52 out of: 90
sorted: 53 out of: 90
sorted: 54 out of: 90
sorted: 55 out of: 90
sorted: 56 out of: 90
sorted: 57 out of: 90
sorted: 58 out of: 90
sorted: 59 out of: 90
sorted: 60 out of: 90
sorted: 61 out of: 90
sorted: 62 out of: 90
sorted: 63 out of: 90
sorted: 64 out of: 90
sorted: 65 out of: 90
sorted: 66 out of: 90
sorted: 67 out of: 90
sorted: 68 out of: 90
sorted: 69 out of: 90
sorted: 70 out of: 90
sorted: 71 out of: 90
sorted: 72 out of: 90
sorted: 73 out of: 90
sorted: 74 out of: 90
sorted: 75 out of: 90
sorted: 76 out of: 90
sorted: 77 out of: 90
sorted: 78 out of: 90
sorted: 79 out of: 90
sorted: 80 out of: 90
sorted: 81 out of: 90
sorted: 82 out of: 90
sorted: 83 out of: 90
sorted: 84 out of: 90
sorted: 85 out of: 90
sorted: 86 out of: 90
sorted: 87 out of: 90
sorted: 88 out of: 90
sorted: 89 out of: 90
sorted: 90 out of: 90
Cluster size: 90
there were : 81 values
sorted: 1 out of: 81
sorted: 2 out of: 81
sorted: 3 out of: 81
sorted: 4 out of: 81
sorted: 5 out of: 81
sorted: 6 out of: 81
sorted: 7 out of: 81
sorted: 8 out of: 81
sorted: 9 out of: 81
sorted: 10 out of: 81
sorted: 11 out of: 81
sorted: 12 out of: 81
sorted: 13 out of: 81
sorted: 14 out of: 81
sorted: 15 out of: 81
sorted: 16 out of: 81
sorted: 17 out of: 81
sorted: 18 out of: 81
sorted: 19 out of: 81
sorted: 20 out of: 81
sorted: 21 out of: 81
sorted: 22 out of: 81
sorted: 23 out of: 81
sorted: 24 out of: 81
sorted: 25 out of: 81
sorted: 26 out of: 81
sorted: 27 out of: 81
sorted: 28 out of: 81
sorted: 29 out of: 81
sorted: 30 out of: 81
sorted: 31 out of: 81
sorted: 32 out of: 81
sorted: 33 out of: 81
sorted: 34 out of: 81
sorted: 35 out of: 81
sorted: 36 out of: 81
sorted: 37 out of: 81
sorted: 38 out of: 81
sorted: 39 out of: 81
sorted: 40 out of: 81
sorted: 41 out of: 81
sorted: 42 out of: 81
sorted: 43 out of: 81
sorted: 44 out of: 81
sorted: 45 out of: 81
sorted: 46 out of: 81
sorted: 47 out of: 81
sorted: 48 out of: 81
sorted: 49 out of: 81
sorted: 50 out of: 81
sorted: 51 out of: 81
sorted: 52 out of: 81
sorted: 53 out of: 81
sorted: 54 out of: 81
sorted: 55 out of: 81
sorted: 56 out of: 81
sorted: 57 out of: 81
sorted: 58 out of: 81
sorted: 59 out of: 81
sorted: 60 out of: 81
sorted: 61 out of: 81
sorted: 62 out of: 81
sorted: 63 out of: 81
sorted: 64 out of: 81
sorted: 65 out of: 81
sorted: 66 out of: 81
sorted: 67 out of: 81
sorted: 68 out of: 81
sorted: 69 out of: 81
sorted: 70 out of: 81
sorted: 71 out of: 81
sorted: 72 out of: 81
sorted: 73 out of: 81
sorted: 74 out of: 81
sorted: 75 out of: 81
sorted: 76 out of: 81
sorted: 77 out of: 81
sorted: 78 out of: 81
sorted: 79 out of: 81
sorted: 80 out of: 81
sorted: 81 out of: 81
Cluster size: 81
there were : 75 values
sorted: 1 out of: 75
sorted: 2 out of: 75
sorted: 3 out of: 75
sorted: 4 out of: 75
sorted: 5 out of: 75
sorted: 6 out of: 75
sorted: 7 out of: 75
sorted: 8 out of: 75
sorted: 9 out of: 75
sorted: 10 out of: 75
sorted: 11 out of: 75
sorted: 12 out of: 75
sorted: 13 out of: 75
sorted: 14 out of: 75
sorted: 15 out of: 75
sorted: 16 out of: 75
sorted: 17 out of: 75
sorted: 18 out of: 75
sorted: 19 out of: 75
sorted: 20 out of: 75
sorted: 21 out of: 75
sorted: 22 out of: 75
sorted: 23 out of: 75
sorted: 24 out of: 75
sorted: 25 out of: 75
sorted: 26 out of: 75
sorted: 27 out of: 75
sorted: 28 out of: 75
sorted: 29 out of: 75
sorted: 30 out of: 75
sorted: 31 out of: 75
sorted: 32 out of: 75
sorted: 33 out of: 75
sorted: 34 out of: 75
sorted: 35 out of: 75
sorted: 36 out of: 75
sorted: 37 out of: 75
sorted: 38 out of: 75
sorted: 39 out of: 75
sorted: 40 out of: 75
sorted: 41 out of: 75
sorted: 42 out of: 75
sorted: 43 out of: 75
sorted: 44 out of: 75
sorted: 45 out of: 75
sorted: 46 out of: 75
sorted: 47 out of: 75
sorted: 48 out of: 75
sorted: 49 out of: 75
sorted: 50 out of: 75
sorted: 51 out of: 75
sorted: 52 out of: 75
sorted: 53 out of: 75
sorted: 54 out of: 75
sorted: 55 out of: 75
sorted: 56 out of: 75
sorted: 57 out of: 75
sorted: 58 out of: 75
sorted: 59 out of: 75
sorted: 60 out of: 75
sorted: 61 out of: 75
sorted: 62 out of: 75
sorted: 63 out of: 75
sorted: 64 out of: 75
sorted: 65 out of: 75
sorted: 66 out of: 75
sorted: 67 out of: 75
sorted: 68 out of: 75
sorted: 69 out of: 75
sorted: 70 out of: 75
sorted: 71 out of: 75
sorted: 72 out of: 75
sorted: 73 out of: 75
sorted: 74 out of: 75
sorted: 75 out of: 75
Cluster size: 75
there were : 70 values
sorted: 1 out of: 70
sorted: 2 out of: 70
sorted: 3 out of: 70
sorted: 4 out of: 70
sorted: 5 out of: 70
sorted: 6 out of: 70
sorted: 7 out of: 70
sorted: 8 out of: 70
sorted: 9 out of: 70
sorted: 10 out of: 70
sorted: 11 out of: 70
sorted: 12 out of: 70
sorted: 13 out of: 70
sorted: 14 out of: 70
sorted: 15 out of: 70
sorted: 16 out of: 70
sorted: 17 out of: 70
sorted: 18 out of: 70
sorted: 19 out of: 70
sorted: 20 out of: 70
sorted: 21 out of: 70
sorted: 22 out of: 70
sorted: 23 out of: 70
sorted: 24 out of: 70
sorted: 25 out of: 70
sorted: 26 out of: 70
sorted: 27 out of: 70
sorted: 28 out of: 70
sorted: 29 out of: 70
sorted: 30 out of: 70
sorted: 31 out of: 70
sorted: 32 out of: 70
sorted: 33 out of: 70
sorted: 34 out of: 70
sorted: 35 out of: 70
sorted: 36 out of: 70
sorted: 37 out of: 70
sorted: 38 out of: 70
sorted: 39 out of: 70
sorted: 40 out of: 70
sorted: 41 out of: 70
sorted: 42 out of: 70
sorted: 43 out of: 70
sorted: 44 out of: 70
sorted: 45 out of: 70
sorted: 46 out of: 70
sorted: 47 out of: 70
sorted: 48 out of: 70
sorted: 49 out of: 70
sorted: 50 out of: 70
sorted: 51 out of: 70
sorted: 52 out of: 70
sorted: 53 out of: 70
sorted: 54 out of: 70
sorted: 55 out of: 70
sorted: 56 out of: 70
sorted: 57 out of: 70
sorted: 58 out of: 70
sorted: 59 out of: 70
sorted: 60 out of: 70
sorted: 61 out of: 70
sorted: 62 out of: 70
sorted: 63 out of: 70
sorted: 64 out of: 70
sorted: 65 out of: 70
sorted: 66 out of: 70
sorted: 67 out of: 70
sorted: 68 out of: 70
sorted: 69 out of: 70
sorted: 70 out of: 70
Cluster size: 70
there were : 70 values
sorted: 1 out of: 70
sorted: 2 out of: 70
sorted: 3 out of: 70
sorted: 4 out of: 70
sorted: 5 out of: 70
sorted: 6 out of: 70
sorted: 7 out of: 70
sorted: 8 out of: 70
sorted: 9 out of: 70
sorted: 10 out of: 70
sorted: 11 out of: 70
sorted: 12 out of: 70
sorted: 13 out of: 70
sorted: 14 out of: 70
sorted: 15 out of: 70
sorted: 16 out of: 70
sorted: 17 out of: 70
sorted: 18 out of: 70
sorted: 19 out of: 70
sorted: 20 out of: 70
sorted: 21 out of: 70
sorted: 22 out of: 70
sorted: 23 out of: 70
sorted: 24 out of: 70
sorted: 25 out of: 70
sorted: 26 out of: 70
sorted: 27 out of: 70
sorted: 28 out of: 70
sorted: 29 out of: 70
sorted: 30 out of: 70
sorted: 31 out of: 70
sorted: 32 out of: 70
sorted: 33 out of: 70
sorted: 34 out of: 70
sorted: 35 out of: 70
sorted: 36 out of: 70
sorted: 37 out of: 70
sorted: 38 out of: 70
sorted: 39 out of: 70
sorted: 40 out of: 70
sorted: 41 out of: 70
sorted: 42 out of: 70
sorted: 43 out of: 70
sorted: 44 out of: 70
sorted: 45 out of: 70
sorted: 46 out of: 70
sorted: 47 out of: 70
sorted: 48 out of: 70
sorted: 49 out of: 70
sorted: 50 out of: 70
sorted: 51 out of: 70
sorted: 52 out of: 70
sorted: 53 out of: 70
sorted: 54 out of: 70
sorted: 55 out of: 70
sorted: 56 out of: 70
sorted: 57 out of: 70
sorted: 58 out of: 70
sorted: 59 out of: 70
sorted: 60 out of: 70
sorted: 61 out of: 70
sorted: 62 out of: 70
sorted: 63 out of: 70
sorted: 64 out of: 70
sorted: 65 out of: 70
sorted: 66 out of: 70
sorted: 67 out of: 70
sorted: 68 out of: 70
sorted: 69 out of: 70
sorted: 70 out of: 70
Cluster size: 70
there were : 58 values
sorted: 1 out of: 58
sorted: 2 out of: 58
sorted: 3 out of: 58
sorted: 4 out of: 58
sorted: 5 out of: 58
sorted: 6 out of: 58
sorted: 7 out of: 58
sorted: 8 out of: 58
sorted: 9 out of: 58
sorted: 10 out of: 58
sorted: 11 out of: 58
sorted: 12 out of: 58
sorted: 13 out of: 58
sorted: 14 out of: 58
sorted: 15 out of: 58
sorted: 16 out of: 58
sorted: 17 out of: 58
sorted: 18 out of: 58
sorted: 19 out of: 58
sorted: 20 out of: 58
sorted: 21 out of: 58
sorted: 22 out of: 58
sorted: 23 out of: 58
sorted: 24 out of: 58
sorted: 25 out of: 58
sorted: 26 out of: 58
sorted: 27 out of: 58
sorted: 28 out of: 58
sorted: 29 out of: 58
sorted: 30 out of: 58
sorted: 31 out of: 58
sorted: 32 out of: 58
sorted: 33 out of: 58
sorted: 34 out of: 58
sorted: 35 out of: 58
sorted: 36 out of: 58
sorted: 37 out of: 58
sorted: 38 out of: 58
sorted: 39 out of: 58
sorted: 40 out of: 58
sorted: 41 out of: 58
sorted: 42 out of: 58
sorted: 43 out of: 58
sorted: 44 out of: 58
sorted: 45 out of: 58
sorted: 46 out of: 58
sorted: 47 out of: 58
sorted: 48 out of: 58
sorted: 49 out of: 58
sorted: 50 out of: 58
sorted: 51 out of: 58
sorted: 52 out of: 58
sorted: 53 out of: 58
sorted: 54 out of: 58
sorted: 55 out of: 58
sorted: 56 out of: 58
sorted: 57 out of: 58
sorted: 58 out of: 58
Cluster size: 58
there were : 56 values
sorted: 1 out of: 56
sorted: 2 out of: 56
sorted: 3 out of: 56
sorted: 4 out of: 56
sorted: 5 out of: 56
sorted: 6 out of: 56
sorted: 7 out of: 56
sorted: 8 out of: 56
sorted: 9 out of: 56
sorted: 10 out of: 56
sorted: 11 out of: 56
sorted: 12 out of: 56
sorted: 13 out of: 56
sorted: 14 out of: 56
sorted: 15 out of: 56
sorted: 16 out of: 56
sorted: 17 out of: 56
sorted: 18 out of: 56
sorted: 19 out of: 56
sorted: 20 out of: 56
sorted: 21 out of: 56
sorted: 22 out of: 56
sorted: 23 out of: 56
sorted: 24 out of: 56
sorted: 25 out of: 56
sorted: 26 out of: 56
sorted: 27 out of: 56
sorted: 28 out of: 56
sorted: 29 out of: 56
sorted: 30 out of: 56
sorted: 31 out of: 56
sorted: 32 out of: 56
sorted: 33 out of: 56
sorted: 34 out of: 56
sorted: 35 out of: 56
sorted: 36 out of: 56
sorted: 37 out of: 56
sorted: 38 out of: 56
sorted: 39 out of: 56
sorted: 40 out of: 56
sorted: 41 out of: 56
sorted: 42 out of: 56
sorted: 43 out of: 56
sorted: 44 out of: 56
sorted: 45 out of: 56
sorted: 46 out of: 56
sorted: 47 out of: 56
sorted: 48 out of: 56
sorted: 49 out of: 56
sorted: 50 out of: 56
sorted: 51 out of: 56
sorted: 52 out of: 56
sorted: 53 out of: 56
sorted: 54 out of: 56
sorted: 55 out of: 56
sorted: 56 out of: 56
Cluster size: 56
there were : 53 values
sorted: 1 out of: 53
sorted: 2 out of: 53
sorted: 3 out of: 53
sorted: 4 out of: 53
sorted: 5 out of: 53
sorted: 6 out of: 53
sorted: 7 out of: 53
sorted: 8 out of: 53
sorted: 9 out of: 53
sorted: 10 out of: 53
sorted: 11 out of: 53
sorted: 12 out of: 53
sorted: 13 out of: 53
sorted: 14 out of: 53
sorted: 15 out of: 53
sorted: 16 out of: 53
sorted: 17 out of: 53
sorted: 18 out of: 53
sorted: 19 out of: 53
sorted: 20 out of: 53
sorted: 21 out of: 53
sorted: 22 out of: 53
sorted: 23 out of: 53
sorted: 24 out of: 53
sorted: 25 out of: 53
sorted: 26 out of: 53
sorted: 27 out of: 53
sorted: 28 out of: 53
sorted: 29 out of: 53
sorted: 30 out of: 53
sorted: 31 out of: 53
sorted: 32 out of: 53
sorted: 33 out of: 53
sorted: 34 out of: 53
sorted: 35 out of: 53
sorted: 36 out of: 53
sorted: 37 out of: 53
sorted: 38 out of: 53
sorted: 39 out of: 53
sorted: 40 out of: 53
sorted: 41 out of: 53
sorted: 42 out of: 53
sorted: 43 out of: 53
sorted: 44 out of: 53
sorted: 45 out of: 53
sorted: 46 out of: 53
sorted: 47 out of: 53
sorted: 48 out of: 53
sorted: 49 out of: 53
sorted: 50 out of: 53
sorted: 51 out of: 53
sorted: 52 out of: 53
sorted: 53 out of: 53
Cluster size: 53
there were : 53 values
sorted: 1 out of: 53
sorted: 2 out of: 53
sorted: 3 out of: 53
sorted: 4 out of: 53
sorted: 5 out of: 53
sorted: 6 out of: 53
sorted: 7 out of: 53
sorted: 8 out of: 53
sorted: 9 out of: 53
sorted: 10 out of: 53
sorted: 11 out of: 53
sorted: 12 out of: 53
sorted: 13 out of: 53
sorted: 14 out of: 53
sorted: 15 out of: 53
sorted: 16 out of: 53
sorted: 17 out of: 53
sorted: 18 out of: 53
sorted: 19 out of: 53
sorted: 20 out of: 53
sorted: 21 out of: 53
sorted: 22 out of: 53
sorted: 23 out of: 53
sorted: 24 out of: 53
sorted: 25 out of: 53
sorted: 26 out of: 53
sorted: 27 out of: 53
sorted: 28 out of: 53
sorted: 29 out of: 53
sorted: 30 out of: 53
sorted: 31 out of: 53
sorted: 32 out of: 53
sorted: 33 out of: 53
sorted: 34 out of: 53
sorted: 35 out of: 53
sorted: 36 out of: 53
sorted: 37 out of: 53
sorted: 38 out of: 53
sorted: 39 out of: 53
sorted: 40 out of: 53
sorted: 41 out of: 53
sorted: 42 out of: 53
sorted: 43 out of: 53
sorted: 44 out of: 53
sorted: 45 out of: 53
sorted: 46 out of: 53
sorted: 47 out of: 53
sorted: 48 out of: 53
sorted: 49 out of: 53
sorted: 50 out of: 53
sorted: 51 out of: 53
sorted: 52 out of: 53
sorted: 53 out of: 53
Cluster size: 53
there were : 52 values
sorted: 1 out of: 52
sorted: 2 out of: 52
sorted: 3 out of: 52
sorted: 4 out of: 52
sorted: 5 out of: 52
sorted: 6 out of: 52
sorted: 7 out of: 52
sorted: 8 out of: 52
sorted: 9 out of: 52
sorted: 10 out of: 52
sorted: 11 out of: 52
sorted: 12 out of: 52
sorted: 13 out of: 52
sorted: 14 out of: 52
sorted: 15 out of: 52
sorted: 16 out of: 52
sorted: 17 out of: 52
sorted: 18 out of: 52
sorted: 19 out of: 52
sorted: 20 out of: 52
sorted: 21 out of: 52
sorted: 22 out of: 52
sorted: 23 out of: 52
sorted: 24 out of: 52
sorted: 25 out of: 52
sorted: 26 out of: 52
sorted: 27 out of: 52
sorted: 28 out of: 52
sorted: 29 out of: 52
sorted: 30 out of: 52
sorted: 31 out of: 52
sorted: 32 out of: 52
sorted: 33 out of: 52
sorted: 34 out of: 52
sorted: 35 out of: 52
sorted: 36 out of: 52
sorted: 37 out of: 52
sorted: 38 out of: 52
sorted: 39 out of: 52
sorted: 40 out of: 52
sorted: 41 out of: 52
sorted: 42 out of: 52
sorted: 43 out of: 52
sorted: 44 out of: 52
sorted: 45 out of: 52
sorted: 46 out of: 52
sorted: 47 out of: 52
sorted: 48 out of: 52
sorted: 49 out of: 52
sorted: 50 out of: 52
sorted: 51 out of: 52
sorted: 52 out of: 52
Cluster size: 52
there were : 51 values
sorted: 1 out of: 51
sorted: 2 out of: 51
sorted: 3 out of: 51
sorted: 4 out of: 51
sorted: 5 out of: 51
sorted: 6 out of: 51
sorted: 7 out of: 51
sorted: 8 out of: 51
sorted: 9 out of: 51
sorted: 10 out of: 51
sorted: 11 out of: 51
sorted: 12 out of: 51
sorted: 13 out of: 51
sorted: 14 out of: 51
sorted: 15 out of: 51
sorted: 16 out of: 51
sorted: 17 out of: 51
sorted: 18 out of: 51
sorted: 19 out of: 51
sorted: 20 out of: 51
sorted: 21 out of: 51
sorted: 22 out of: 51
sorted: 23 out of: 51
sorted: 24 out of: 51
sorted: 25 out of: 51
sorted: 26 out of: 51
sorted: 27 out of: 51
sorted: 28 out of: 51
sorted: 29 out of: 51
sorted: 30 out of: 51
sorted: 31 out of: 51
sorted: 32 out of: 51
sorted: 33 out of: 51
sorted: 34 out of: 51
sorted: 35 out of: 51
sorted: 36 out of: 51
sorted: 37 out of: 51
sorted: 38 out of: 51
sorted: 39 out of: 51
sorted: 40 out of: 51
sorted: 41 out of: 51
sorted: 42 out of: 51
sorted: 43 out of: 51
sorted: 44 out of: 51
sorted: 45 out of: 51
sorted: 46 out of: 51
sorted: 47 out of: 51
sorted: 48 out of: 51
sorted: 49 out of: 51
sorted: 50 out of: 51
sorted: 51 out of: 51
Cluster size: 51
there were : 49 values
sorted: 1 out of: 49
sorted: 2 out of: 49
sorted: 3 out of: 49
sorted: 4 out of: 49
sorted: 5 out of: 49
sorted: 6 out of: 49
sorted: 7 out of: 49
sorted: 8 out of: 49
sorted: 9 out of: 49
sorted: 10 out of: 49
sorted: 11 out of: 49
sorted: 12 out of: 49
sorted: 13 out of: 49
sorted: 14 out of: 49
sorted: 15 out of: 49
sorted: 16 out of: 49
sorted: 17 out of: 49
sorted: 18 out of: 49
sorted: 19 out of: 49
sorted: 20 out of: 49
sorted: 21 out of: 49
sorted: 22 out of: 49
sorted: 23 out of: 49
sorted: 24 out of: 49
sorted: 25 out of: 49
sorted: 26 out of: 49
sorted: 27 out of: 49
sorted: 28 out of: 49
sorted: 29 out of: 49
sorted: 30 out of: 49
sorted: 31 out of: 49
sorted: 32 out of: 49
sorted: 33 out of: 49
sorted: 34 out of: 49
sorted: 35 out of: 49
sorted: 36 out of: 49
sorted: 37 out of: 49
sorted: 38 out of: 49
sorted: 39 out of: 49
sorted: 40 out of: 49
sorted: 41 out of: 49
sorted: 42 out of: 49
sorted: 43 out of: 49
sorted: 44 out of: 49
sorted: 45 out of: 49
sorted: 46 out of: 49
sorted: 47 out of: 49
sorted: 48 out of: 49
sorted: 49 out of: 49
Cluster size: 49
there were : 47 values
sorted: 1 out of: 47
sorted: 2 out of: 47
sorted: 3 out of: 47
sorted: 4 out of: 47
sorted: 5 out of: 47
sorted: 6 out of: 47
sorted: 7 out of: 47
sorted: 8 out of: 47
sorted: 9 out of: 47
sorted: 10 out of: 47
sorted: 11 out of: 47
sorted: 12 out of: 47
sorted: 13 out of: 47
sorted: 14 out of: 47
sorted: 15 out of: 47
sorted: 16 out of: 47
sorted: 17 out of: 47
sorted: 18 out of: 47
sorted: 19 out of: 47
sorted: 20 out of: 47
sorted: 21 out of: 47
sorted: 22 out of: 47
sorted: 23 out of: 47
sorted: 24 out of: 47
sorted: 25 out of: 47
sorted: 26 out of: 47
sorted: 27 out of: 47
sorted: 28 out of: 47
sorted: 29 out of: 47
sorted: 30 out of: 47
sorted: 31 out of: 47
sorted: 32 out of: 47
sorted: 33 out of: 47
sorted: 34 out of: 47
sorted: 35 out of: 47
sorted: 36 out of: 47
sorted: 37 out of: 47
sorted: 38 out of: 47
sorted: 39 out of: 47
sorted: 40 out of: 47
sorted: 41 out of: 47
sorted: 42 out of: 47
sorted: 43 out of: 47
sorted: 44 out of: 47
sorted: 45 out of: 47
sorted: 46 out of: 47
sorted: 47 out of: 47
Cluster size: 47
there were : 46 values
sorted: 1 out of: 46
sorted: 2 out of: 46
sorted: 3 out of: 46
sorted: 4 out of: 46
sorted: 5 out of: 46
sorted: 6 out of: 46
sorted: 7 out of: 46
sorted: 8 out of: 46
sorted: 9 out of: 46
sorted: 10 out of: 46
sorted: 11 out of: 46
sorted: 12 out of: 46
sorted: 13 out of: 46
sorted: 14 out of: 46
sorted: 15 out of: 46
sorted: 16 out of: 46
sorted: 17 out of: 46
sorted: 18 out of: 46
sorted: 19 out of: 46
sorted: 20 out of: 46
sorted: 21 out of: 46
sorted: 22 out of: 46
sorted: 23 out of: 46
sorted: 24 out of: 46
sorted: 25 out of: 46
sorted: 26 out of: 46
sorted: 27 out of: 46
sorted: 28 out of: 46
sorted: 29 out of: 46
sorted: 30 out of: 46
sorted: 31 out of: 46
sorted: 32 out of: 46
sorted: 33 out of: 46
sorted: 34 out of: 46
sorted: 35 out of: 46
sorted: 36 out of: 46
sorted: 37 out of: 46
sorted: 38 out of: 46
sorted: 39 out of: 46
sorted: 40 out of: 46
sorted: 41 out of: 46
sorted: 42 out of: 46
sorted: 43 out of: 46
sorted: 44 out of: 46
sorted: 45 out of: 46
sorted: 46 out of: 46
Cluster size: 46
there were : 45 values
sorted: 1 out of: 45
sorted: 2 out of: 45
sorted: 3 out of: 45
sorted: 4 out of: 45
sorted: 5 out of: 45
sorted: 6 out of: 45
sorted: 7 out of: 45
sorted: 8 out of: 45
sorted: 9 out of: 45
sorted: 10 out of: 45
sorted: 11 out of: 45
sorted: 12 out of: 45
sorted: 13 out of: 45
sorted: 14 out of: 45
sorted: 15 out of: 45
sorted: 16 out of: 45
sorted: 17 out of: 45
sorted: 18 out of: 45
sorted: 19 out of: 45
sorted: 20 out of: 45
sorted: 21 out of: 45
sorted: 22 out of: 45
sorted: 23 out of: 45
sorted: 24 out of: 45
sorted: 25 out of: 45
sorted: 26 out of: 45
sorted: 27 out of: 45
sorted: 28 out of: 45
sorted: 29 out of: 45
sorted: 30 out of: 45
sorted: 31 out of: 45
sorted: 32 out of: 45
sorted: 33 out of: 45
sorted: 34 out of: 45
sorted: 35 out of: 45
sorted: 36 out of: 45
sorted: 37 out of: 45
sorted: 38 out of: 45
sorted: 39 out of: 45
sorted: 40 out of: 45
sorted: 41 out of: 45
sorted: 42 out of: 45
sorted: 43 out of: 45
sorted: 44 out of: 45
sorted: 45 out of: 45
Cluster size: 45
there were : 42 values
sorted: 1 out of: 42
sorted: 2 out of: 42
sorted: 3 out of: 42
sorted: 4 out of: 42
sorted: 5 out of: 42
sorted: 6 out of: 42
sorted: 7 out of: 42
sorted: 8 out of: 42
sorted: 9 out of: 42
sorted: 10 out of: 42
sorted: 11 out of: 42
sorted: 12 out of: 42
sorted: 13 out of: 42
sorted: 14 out of: 42
sorted: 15 out of: 42
sorted: 16 out of: 42
sorted: 17 out of: 42
sorted: 18 out of: 42
sorted: 19 out of: 42
sorted: 20 out of: 42
sorted: 21 out of: 42
sorted: 22 out of: 42
sorted: 23 out of: 42
sorted: 24 out of: 42
sorted: 25 out of: 42
sorted: 26 out of: 42
sorted: 27 out of: 42
sorted: 28 out of: 42
sorted: 29 out of: 42
sorted: 30 out of: 42
sorted: 31 out of: 42
sorted: 32 out of: 42
sorted: 33 out of: 42
sorted: 34 out of: 42
sorted: 35 out of: 42
sorted: 36 out of: 42
sorted: 37 out of: 42
sorted: 38 out of: 42
sorted: 39 out of: 42
sorted: 40 out of: 42
sorted: 41 out of: 42
sorted: 42 out of: 42
Cluster size: 42
there were : 42 values
sorted: 1 out of: 42
sorted: 2 out of: 42
sorted: 3 out of: 42
sorted: 4 out of: 42
sorted: 5 out of: 42
sorted: 6 out of: 42
sorted: 7 out of: 42
sorted: 8 out of: 42
sorted: 9 out of: 42
sorted: 10 out of: 42
sorted: 11 out of: 42
sorted: 12 out of: 42
sorted: 13 out of: 42
sorted: 14 out of: 42
sorted: 15 out of: 42
sorted: 16 out of: 42
sorted: 17 out of: 42
sorted: 18 out of: 42
sorted: 19 out of: 42
sorted: 20 out of: 42
sorted: 21 out of: 42
sorted: 22 out of: 42
sorted: 23 out of: 42
sorted: 24 out of: 42
sorted: 25 out of: 42
sorted: 26 out of: 42
sorted: 27 out of: 42
sorted: 28 out of: 42
sorted: 29 out of: 42
sorted: 30 out of: 42
sorted: 31 out of: 42
sorted: 32 out of: 42
sorted: 33 out of: 42
sorted: 34 out of: 42
sorted: 35 out of: 42
sorted: 36 out of: 42
sorted: 37 out of: 42
sorted: 38 out of: 42
sorted: 39 out of: 42
sorted: 40 out of: 42
sorted: 41 out of: 42
sorted: 42 out of: 42
Cluster size: 42
there were : 42 values
sorted: 1 out of: 42
sorted: 2 out of: 42
sorted: 3 out of: 42
sorted: 4 out of: 42
sorted: 5 out of: 42
sorted: 6 out of: 42
sorted: 7 out of: 42
sorted: 8 out of: 42
sorted: 9 out of: 42
sorted: 10 out of: 42
sorted: 11 out of: 42
sorted: 12 out of: 42
sorted: 13 out of: 42
sorted: 14 out of: 42
sorted: 15 out of: 42
sorted: 16 out of: 42
sorted: 17 out of: 42
sorted: 18 out of: 42
sorted: 19 out of: 42
sorted: 20 out of: 42
sorted: 21 out of: 42
sorted: 22 out of: 42
sorted: 23 out of: 42
sorted: 24 out of: 42
sorted: 25 out of: 42
sorted: 26 out of: 42
sorted: 27 out of: 42
sorted: 28 out of: 42
sorted: 29 out of: 42
sorted: 30 out of: 42
sorted: 31 out of: 42
sorted: 32 out of: 42
sorted: 33 out of: 42
sorted: 34 out of: 42
sorted: 35 out of: 42
sorted: 36 out of: 42
sorted: 37 out of: 42
sorted: 38 out of: 42
sorted: 39 out of: 42
sorted: 40 out of: 42
sorted: 41 out of: 42
INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';245;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';245;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\0LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Cancel application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application canceled)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan application rejected)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan application rejected)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Reject application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Reject application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send home insurance quote)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Appraise property)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check  application  form completeness)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application received)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotSuccession(Assess eligibility,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan application rejected)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan application rejected)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Reject application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Reject application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Cancel application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application canceled)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan application rejected)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan application rejected)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Reject application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Reject application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send home insurance quote)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Approve application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application approved)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check  application  form completeness)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check  application  form completeness)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotCoExistence(Send acceptance pack,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess eligibility)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check  application  form completeness)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotCoExistence(Send home insurance quote,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Receive updated application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Return application back to applicant)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';203;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';203;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\1LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check if home insurance quote is requested)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Prepare acceptance pack)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Verify repayment agreement)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Check if home insurance quote is requested)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Prepare acceptance pack)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Prepare acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Verify repayment agreement)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Check if home insurance quote is requested)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Prepare acceptance pack)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Verify repayment agreement)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Check if home insurance quote is requested)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Prepare acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Verify repayment agreement)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% AtMostOne(Check if home insurance quote is requested)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Verify repayment agreement)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% AtMostOne(Prepare acceptance pack)                                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Check if home insurance quote is requested)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Verify repayment agreement)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% AtMostOne(Verify repayment agreement)                                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess eligibility)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';178;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';178;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\2LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Approve application,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Approve application,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Approve application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Approve application)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application approved)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% AtMostOne(Approve application)                                                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Appraise property)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess eligibility)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess eligibility)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess eligibility)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check  application  form completeness)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check  application  form completeness)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check  application  form completeness)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check credit history)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Approve application,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Approve application,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Approve application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Approve application,  Loan  application approved)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Approve application,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Approve application,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application received)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan application rejected)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan application rejected)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Receive updated application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Return application back to applicant)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Approve application)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application approved)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Approve application)                                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application approved)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check  application  form completeness,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Approve application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application approved)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% Participation(Check if home insurance quote is requested)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% AtMostOne(Loan  application approved)                                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess eligibility)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess eligibility)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess eligibility)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess loan risk)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess loan risk)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check  application  form completeness)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check  application  form completeness)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check credit history)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check credit history)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Loan  application received)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application received)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application received)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% Participation(Prepare acceptance pack)                                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Approve application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application approved)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% Participation(Verify repayment agreement)                                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';165;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';165;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\3LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% AtMostOne(Cancel application)                                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Cancel application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Cancel application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Cancel application,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application received)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Cancel application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application canceled)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% AtMostOne(Loan  application canceled)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';129;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';129;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\4LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% Participation(Approve application)                                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% Participation(Cancel application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Cancel application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application canceled)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Send home insurance quote)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotSuccession(Check if home insurance quote is requested,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% End(Loan  application approved)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application approved)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% End(Loan  application canceled)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application canceled)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotSuccession(Prepare acceptance pack,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AlternateSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AlternateSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% Participation(Send acceptance pack)                                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% Participation(Send home insurance quote)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check if home insurance quote is requested)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Prepare acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Verify repayment agreement)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';92;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';92;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\5LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% NotCoExistence(Appraise property,  Receive updated application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Return application back to applicant)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% RespondedExistence(Approve application,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotCoExistence(Assess eligibility,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotCoExistence(Assess loan risk,  Receive updated application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Return application back to applicant)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotCoExistence(Check credit history,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% RespondedExistence(Loan  application approved,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess eligibility)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess eligibility)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess loan risk)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check credit history)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotSuccession(Send acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';90;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';90;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\6LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		100.000% Precedence(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% Response(Check  application  form completeness,  Receive updated application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check  application  form completeness,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Receive updated application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Return application back to applicant)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check  application  form completeness)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Return application back to applicant,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';81;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';81;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\7LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send home insurance quote)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send home insurance quote)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% AtMostOne(Send home insurance quote)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send home insurance quote,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';75;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';75;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\8LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send acceptance pack)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send acceptance pack)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% AtMostOne(Send acceptance pack)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send acceptance pack,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';70;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';70;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\9LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check credit history)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotSuccession(Send acceptance pack,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotSuccession(Send home insurance quote,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';70;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';70;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\10LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Check if home insurance quote is requested)       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Prepare acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';58;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';58;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\11LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess eligibility)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess loan risk)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check  application  form completeness)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application received)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Approve application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application approved)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Approve application)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application approved)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Approve application)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application approved)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Approve application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Approve application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application approved)     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application approved)      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';56;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';56;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\12LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Receive updated application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		100.000% Precedence(Receive updated application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Receive updated application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		100.000% Precedence(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Receive updated application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Receive updated application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Receive updated application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		100.000% Precedence(Receive updated application,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% Precedence(Receive updated application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% Participation(Receive updated application)                                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess eligibility)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess loan risk)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check credit history)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Return application back to applicant)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% Participation(Return application back to applicant)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Appraise property)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess loan risk)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check credit history)                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';53;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';53;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\13LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Added Activity,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity] => {
		100.000% AtMostOne(Added Activity)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Added Activity)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Added Activity)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';53;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';53;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\14LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Cancel application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Send acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Cancel application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application canceled)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Cancel application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application canceled)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';52;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';52;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\15LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Send home insurance quote,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send home insurance quote,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send home insurance quote,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send home insurance quote,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send home insurance quote,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send home insurance quote,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send home insurance quote)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Send home insurance quote)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send home insurance quote,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';51;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';51;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\16LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Cancel application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Cancel application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application canceled)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application canceled)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Approve application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';49;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';49;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\17LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Receive updated application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Return application back to applicant)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainSuccession(Check  application  form completeness,  Appraise property)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Check credit history)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Return application back to applicant)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotChainSuccession(Loan  application received,  Check  application  form completeness)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AtMostOne(Receive updated application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Receive updated application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AtMostOne(Return application back to applicant)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess eligibility)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess loan risk)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check  application  form completeness)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check credit history)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';47;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';47;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\18LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Reject application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% RespondedExistence(Loan application rejected,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% AtMostOne(Reject application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Reject application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Reject application,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';46;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';46;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\19LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Approve application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Cancel application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application approved)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application canceled)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Send acceptance pack)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Send home insurance quote)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Send home insurance quote)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Send home insurance quote)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotChainSuccession(Assess eligibility,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Added Activity)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';45;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';45;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\20LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send acceptance pack)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send acceptance pack)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send acceptance pack)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send acceptance pack)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send acceptance pack)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Send acceptance pack)     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send acceptance pack)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Approve application)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Approve application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application approved)       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application approved)        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';42;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';42;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\21LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan application rejected)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% AtMostOne(Loan application rejected)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';42;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';42;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\22LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Receive updated application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';42;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';42;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\23LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';36;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';36;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\24LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		100.000% Precedence(Receive updated application,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		100.000% Precedence(Receive updated application,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Receive updated application,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Receive updated application,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Receive updated application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		100.000% Precedence(Receive updated application,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Receive updated application,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Receive updated application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Receive updated application,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		
	}

	[Return application back to applicant] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';33;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';33;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\25LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check  application  form completeness] => {
		100.000% ChainResponse(Check  application  form completeness,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Receive updated application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Return application back to applicant)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan application rejected)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';25;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';25;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\26LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% ChainResponse(Assess eligibility,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Added Activity)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Added Activity)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';25;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';25;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\27LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% ChainPrecedence(Check credit history,  Appraise property)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Approve application] => {
		
	}

	[ Assess loan risk] => {
		100.000% ChainPrecedence(Appraise property,  Assess loan risk)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		
	}

	[ Reject application] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[Appraise property] => {
		100.000% ChainSuccession(Appraise property,  Assess loan risk)                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess loan risk)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% ChainSuccession(Check credit history,  Appraise property)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Appraise property)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Assess loan risk)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Approve application)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application approved)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Send acceptance pack)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';25;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';25;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\28LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan application rejected)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan application rejected)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% End(Loan application rejected)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan application rejected)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';25;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';25;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\29LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';25;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';25;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\30LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		100.000% Precedence(Send acceptance pack,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send acceptance pack,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send acceptance pack,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send acceptance pack,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send acceptance pack,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send acceptance pack,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Send acceptance pack)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send acceptance pack)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send acceptance pack,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\31LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Added Activity] => {
		100.000% CoExistence(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Added Activity)       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\32LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\33LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Reject application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Reject application)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Reject application)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';21;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';21;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\34LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Reject application)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Cancel application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application canceled)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Reject application)     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';19;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';19;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\35LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Receive updated application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Added Activity] => {
		100.000% Participation(Added Activity)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

sorted: 42 out of: 42
Cluster size: 42
there were : 36 values
sorted: 1 out of: 36
sorted: 2 out of: 36
sorted: 3 out of: 36
sorted: 4 out of: 36
sorted: 5 out of: 36
sorted: 6 out of: 36
sorted: 7 out of: 36
sorted: 8 out of: 36
sorted: 9 out of: 36
sorted: 10 out of: 36
sorted: 11 out of: 36
sorted: 12 out of: 36
sorted: 13 out of: 36
sorted: 14 out of: 36
sorted: 15 out of: 36
sorted: 16 out of: 36
sorted: 17 out of: 36
sorted: 18 out of: 36
sorted: 19 out of: 36
sorted: 20 out of: 36
sorted: 21 out of: 36
sorted: 22 out of: 36
sorted: 23 out of: 36
sorted: 24 out of: 36
sorted: 25 out of: 36
sorted: 26 out of: 36
sorted: 27 out of: 36
sorted: 28 out of: 36
sorted: 29 out of: 36
sorted: 30 out of: 36
sorted: 31 out of: 36
sorted: 32 out of: 36
sorted: 33 out of: 36
sorted: 34 out of: 36
sorted: 35 out of: 36
sorted: 36 out of: 36
Cluster size: 36
there were : 33 values
sorted: 1 out of: 33
sorted: 2 out of: 33
sorted: 3 out of: 33
sorted: 4 out of: 33
sorted: 5 out of: 33
sorted: 6 out of: 33
sorted: 7 out of: 33
sorted: 8 out of: 33
sorted: 9 out of: 33
sorted: 10 out of: 33
sorted: 11 out of: 33
sorted: 12 out of: 33
sorted: 13 out of: 33
sorted: 14 out of: 33
sorted: 15 out of: 33
sorted: 16 out of: 33
sorted: 17 out of: 33
sorted: 18 out of: 33
sorted: 19 out of: 33
sorted: 20 out of: 33
sorted: 21 out of: 33
sorted: 22 out of: 33
sorted: 23 out of: 33
sorted: 24 out of: 33
sorted: 25 out of: 33
sorted: 26 out of: 33
sorted: 27 out of: 33
sorted: 28 out of: 33
sorted: 29 out of: 33
sorted: 30 out of: 33
sorted: 31 out of: 33
sorted: 32 out of: 33
sorted: 33 out of: 33
Cluster size: 33
there were : 25 values
sorted: 1 out of: 25
sorted: 2 out of: 25
sorted: 3 out of: 25
sorted: 4 out of: 25
sorted: 5 out of: 25
sorted: 6 out of: 25
sorted: 7 out of: 25
sorted: 8 out of: 25
sorted: 9 out of: 25
sorted: 10 out of: 25
sorted: 11 out of: 25
sorted: 12 out of: 25
sorted: 13 out of: 25
sorted: 14 out of: 25
sorted: 15 out of: 25
sorted: 16 out of: 25
sorted: 17 out of: 25
sorted: 18 out of: 25
sorted: 19 out of: 25
sorted: 20 out of: 25
sorted: 21 out of: 25
sorted: 22 out of: 25
sorted: 23 out of: 25
sorted: 24 out of: 25
sorted: 25 out of: 25
Cluster size: 25
there were : 25 values
sorted: 1 out of: 25
sorted: 2 out of: 25
sorted: 3 out of: 25
sorted: 4 out of: 25
sorted: 5 out of: 25
sorted: 6 out of: 25
sorted: 7 out of: 25
sorted: 8 out of: 25
sorted: 9 out of: 25
sorted: 10 out of: 25
sorted: 11 out of: 25
sorted: 12 out of: 25
sorted: 13 out of: 25
sorted: 14 out of: 25
sorted: 15 out of: 25
sorted: 16 out of: 25
sorted: 17 out of: 25
sorted: 18 out of: 25
sorted: 19 out of: 25
sorted: 20 out of: 25
sorted: 21 out of: 25
sorted: 22 out of: 25
sorted: 23 out of: 25
sorted: 24 out of: 25
sorted: 25 out of: 25
Cluster size: 25
there were : 25 values
sorted: 1 out of: 25
sorted: 2 out of: 25
sorted: 3 out of: 25
sorted: 4 out of: 25
sorted: 5 out of: 25
sorted: 6 out of: 25
sorted: 7 out of: 25
sorted: 8 out of: 25
sorted: 9 out of: 25
sorted: 10 out of: 25
sorted: 11 out of: 25
sorted: 12 out of: 25
sorted: 13 out of: 25
sorted: 14 out of: 25
sorted: 15 out of: 25
sorted: 16 out of: 25
sorted: 17 out of: 25
sorted: 18 out of: 25
sorted: 19 out of: 25
sorted: 20 out of: 25
sorted: 21 out of: 25
sorted: 22 out of: 25
sorted: 23 out of: 25
sorted: 24 out of: 25
sorted: 25 out of: 25
Cluster size: 25
there were : 25 values
sorted: 1 out of: 25
sorted: 2 out of: 25
sorted: 3 out of: 25
sorted: 4 out of: 25
sorted: 5 out of: 25
sorted: 6 out of: 25
sorted: 7 out of: 25
sorted: 8 out of: 25
sorted: 9 out of: 25
sorted: 10 out of: 25
sorted: 11 out of: 25
sorted: 12 out of: 25
sorted: 13 out of: 25
sorted: 14 out of: 25
sorted: 15 out of: 25
sorted: 16 out of: 25
sorted: 17 out of: 25
sorted: 18 out of: 25
sorted: 19 out of: 25
sorted: 20 out of: 25
sorted: 21 out of: 25
sorted: 22 out of: 25
sorted: 23 out of: 25
sorted: 24 out of: 25
sorted: 25 out of: 25
Cluster size: 25
there were : 25 values
sorted: 1 out of: 25
sorted: 2 out of: 25
sorted: 3 out of: 25
sorted: 4 out of: 25
sorted: 5 out of: 25
sorted: 6 out of: 25
sorted: 7 out of: 25
sorted: 8 out of: 25
sorted: 9 out of: 25
sorted: 10 out of: 25
sorted: 11 out of: 25
sorted: 12 out of: 25
sorted: 13 out of: 25
sorted: 14 out of: 25
sorted: 15 out of: 25
sorted: 16 out of: 25
sorted: 17 out of: 25
sorted: 18 out of: 25
sorted: 19 out of: 25
sorted: 20 out of: 25
sorted: 21 out of: 25
sorted: 22 out of: 25
sorted: 23 out of: 25
sorted: 24 out of: 25
sorted: 25 out of: 25
Cluster size: 25
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 23 values
sorted: 1 out of: 23
sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23
sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 21 values
sorted: 1 out of: 21
sorted: 2 out of: 21
sorted: 3 out of: 21
sorted: 4 out of: 21
sorted: 5 out of: 21
sorted: 6 out of: 21
sorted: 7 out of: 21
sorted: 8 out of: 21
sorted: 9 out of: 21
sorted: 10 out of: 21
sorted: 11 out of: 21
sorted: 12 out of: 21
sorted: 13 out of: 21
sorted: 14 out of: 21
sorted: 15 out of: 21
sorted: 16 out of: 21
sorted: 17 out of: 21
sorted: 18 out of: 21
sorted: 19 out of: 21
sorted: 20 out of: 21
sorted: 21 out of: 21
Cluster size: 21
there were : 19 values
sorted: 1 out of: 19
sorted: 2 out of: 19
sorted: 3 out of: 19
sorted: 4 out of: 19
sorted: 5 out of: 19
sorted: 6 out of: 19
sorted: 7 out of: 19
sorted: 8 out of: 19
sorted: 9 out of: 19
sorted: 10 out of: 19
sorted: 11 out of: 19
sorted: 12 out of: 19
sorted: 13 out of: 19
sorted: 14 out of: 19
sorted: 15 out of: 19
sorted: 16 out of: 19
sorted: 17 out of: 19
sorted: 18 out of: 19
sorted: 19 out of: 19
Cluster size: 19
there were : 19 values
sorted: 1 out of: 19
sorted: 2 out of: 19
sorted: 3 out of: 19
sorted: 4 out of: 19
sorted: 5 out of: 19
sorted: 6 out of: 19
sorted: 7 out of: 19
sorted: 8 out of: 19
sorted: 9 out of: 19
sorted: 10 out of: 19
sorted: 11 out of: 19
sorted: 12 out of: 19
sorted: 13 out of: 19
sorted: 14 out of: 19
sorted: 15 out of: 19
sorted: 16 out of: 19
sorted: 17 out of: 19
sorted: 18 out of: 19
sorted: 19 out of: 19
Cluster size: 19
there were : 19 values
sorted: 1 out of: 19
sorted: 2 out of: 19
sorted: 3 out of: 19
sorted: 4 out of: 19
sorted: 5 out of: 19
sorted: 6 out of: 19
sorted: 7 out of: 19
sorted: 8 out of: 19
sorted: 9 out of: 19
sorted: 10 out of: 19
sorted: 11 out of: 19
INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';19;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';19;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\36LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Added Activity] => {
		100.000% NotCoExistence(Added Activity,  Appraise property)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Assess loan risk)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check credit history)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application received)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotSuccession(Assess eligibility,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AlternateSuccession(Receive updated application,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AlternateSuccession(Return application back to applicant,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';19;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';19;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\37LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Assess loan risk,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Appraise property,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Assess loan risk)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotChainSuccession(Assess loan risk,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Appraise property)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Assess eligibility)                                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotChainSuccession(Check credit history,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';18;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';18;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\38LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Check credit history,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		100.000% AlternatePrecedence(Loan  application received,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Loan  application received,  Check  application  form completeness)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Check credit history)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		100.000% AlternatePrecedence(Loan  application received,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% AlternatePrecedence(Loan  application received,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check credit history)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AtMostOne(Check  application  form completeness)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Appraise property)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess eligibility)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess loan risk)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check credit history)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% Succession(Check credit history,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';17;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';17;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\39LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Reject application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Reject application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Reject application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% Succession(Reject application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Reject application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Reject application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Reject application,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Reject application,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Reject application,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan application rejected)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan application rejected)        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';15;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';15;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\40LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% Participation(Reject application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';14;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';14;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\41LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Reject application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Added Activity,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Reject application)            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotChainSuccession(Assess eligibility,  Reject application)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';14;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';14;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\42LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Assess loan risk,  Appraise property)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Appraise property)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess loan risk,  Appraise property)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Appraise property,  Assess eligibility)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		
	}

	[Appraise property] => {
		100.000% ChainSuccession(Appraise property,  Assess eligibility)      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess eligibility)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Assess loan risk)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% Succession(Assess loan risk,  Appraise property)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Appraise property)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Appraise property)        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Appraise property)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Appraise property)      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Appraise property)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';13;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';13;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\43LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Appraise property,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess eligibility,  Added Activity)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess eligibility,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess loan risk,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check  application  form completeness,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check credit history,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Loan  application received,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		
	}

	[Assess eligibility] => {
		
	}

	[Assess loan risk] => {
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';11;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';11;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\44LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Appraise property)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Appraise property,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Check credit history)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Appraise property,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% Succession(Appraise property,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check credit history)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Check credit history)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Appraise property)                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';9;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';9;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\45LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Loan application rejected] => {
		100.000% Precedence(Reject application,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Reject application,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Reject application,  Loan application rejected)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Reject application)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Loan application rejected)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Reject application,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Reject application,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Reject application,  Loan application rejected)        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Reject application,  Loan application rejected)          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';8;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';8;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\46LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Appraise property)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Appraise property)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess eligibility)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess loan risk)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check credit history)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check credit history)           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Loan  application received,  Check  application  form completeness)        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';3;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';3;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\47LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Loan application rejected] => {
		100.000% ChainPrecedence(Added Activity,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity] => {
		100.000% ChainSuccession(Added Activity,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Loan application rejected)      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';3;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';3;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\48LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Reject application] => {
		100.000% Precedence(Added Activity,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Added Activity,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';2;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';2;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\49LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Reject application] => {
		
	}

	[Assess eligibility] => {
		100.000% ChainSuccession(Assess eligibility,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';1;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';1;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS10_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\50LS10_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Reject application] => {
		100.000% ChainPrecedence(Assess eligibility,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		
	}

sorted: 12 out of: 19
sorted: 13 out of: 19
sorted: 14 out of: 19
sorted: 15 out of: 19
sorted: 16 out of: 19
sorted: 17 out of: 19
sorted: 18 out of: 19
sorted: 19 out of: 19
Cluster size: 19
there were : 18 values
sorted: 1 out of: 18
sorted: 2 out of: 18
sorted: 3 out of: 18
sorted: 4 out of: 18
sorted: 5 out of: 18
sorted: 6 out of: 18
sorted: 7 out of: 18
sorted: 8 out of: 18
sorted: 9 out of: 18
sorted: 10 out of: 18
sorted: 11 out of: 18
sorted: 12 out of: 18
sorted: 13 out of: 18
sorted: 14 out of: 18
sorted: 15 out of: 18
sorted: 16 out of: 18
sorted: 17 out of: 18
sorted: 18 out of: 18
Cluster size: 18
there were : 17 values
sorted: 1 out of: 17
sorted: 2 out of: 17
sorted: 3 out of: 17
sorted: 4 out of: 17
sorted: 5 out of: 17
sorted: 6 out of: 17
sorted: 7 out of: 17
sorted: 8 out of: 17
sorted: 9 out of: 17
sorted: 10 out of: 17
sorted: 11 out of: 17
sorted: 12 out of: 17
sorted: 13 out of: 17
sorted: 14 out of: 17
sorted: 15 out of: 17
sorted: 16 out of: 17
sorted: 17 out of: 17
Cluster size: 17
there were : 15 values
sorted: 1 out of: 15
sorted: 2 out of: 15
sorted: 3 out of: 15
sorted: 4 out of: 15
sorted: 5 out of: 15
sorted: 6 out of: 15
sorted: 7 out of: 15
sorted: 8 out of: 15
sorted: 9 out of: 15
sorted: 10 out of: 15
sorted: 11 out of: 15
sorted: 12 out of: 15
sorted: 13 out of: 15
sorted: 14 out of: 15
sorted: 15 out of: 15
Cluster size: 15
there were : 14 values
sorted: 1 out of: 14
sorted: 2 out of: 14
sorted: 3 out of: 14
sorted: 4 out of: 14
sorted: 5 out of: 14
sorted: 6 out of: 14
sorted: 7 out of: 14
sorted: 8 out of: 14
sorted: 9 out of: 14
sorted: 10 out of: 14
sorted: 11 out of: 14
sorted: 12 out of: 14
sorted: 13 out of: 14
sorted: 14 out of: 14
Cluster size: 14
there were : 14 values
sorted: 1 out of: 14
sorted: 2 out of: 14
sorted: 3 out of: 14
sorted: 4 out of: 14
sorted: 5 out of: 14
sorted: 6 out of: 14
sorted: 7 out of: 14
sorted: 8 out of: 14
sorted: 9 out of: 14
sorted: 10 out of: 14
sorted: 11 out of: 14
sorted: 12 out of: 14
sorted: 13 out of: 14
sorted: 14 out of: 14
Cluster size: 14
there were : 13 values
sorted: 1 out of: 13
sorted: 2 out of: 13
sorted: 3 out of: 13
sorted: 4 out of: 13
sorted: 5 out of: 13
sorted: 6 out of: 13
sorted: 7 out of: 13
sorted: 8 out of: 13
sorted: 9 out of: 13
sorted: 10 out of: 13
sorted: 11 out of: 13
sorted: 12 out of: 13
sorted: 13 out of: 13
Cluster size: 13
there were : 11 values
sorted: 1 out of: 11
sorted: 2 out of: 11
sorted: 3 out of: 11
sorted: 4 out of: 11
sorted: 5 out of: 11
sorted: 6 out of: 11
sorted: 7 out of: 11
sorted: 8 out of: 11
sorted: 9 out of: 11
sorted: 10 out of: 11
sorted: 11 out of: 11
Cluster size: 11
there were : 9 values
sorted: 1 out of: 9
sorted: 2 out of: 9
sorted: 3 out of: 9
sorted: 4 out of: 9
sorted: 5 out of: 9
sorted: 6 out of: 9
sorted: 7 out of: 9
sorted: 8 out of: 9
sorted: 9 out of: 9
Cluster size: 9
there were : 8 values
sorted: 1 out of: 8
sorted: 2 out of: 8
sorted: 3 out of: 8
sorted: 4 out of: 8
sorted: 5 out of: 8
sorted: 6 out of: 8
sorted: 7 out of: 8
sorted: 8 out of: 8
Cluster size: 8
there were : 3 values
sorted: 1 out of: 3
sorted: 2 out of: 3
sorted: 3 out of: 3
Cluster size: 3
there were : 3 values
sorted: 1 out of: 3
sorted: 2 out of: 3
sorted: 3 out of: 3
Cluster size: 3
there were : 2 values
sorted: 1 out of: 2
sorted: 2 out of: 2
Cluster size: 2
there were : 1 values
sorted: 1 out of: 1
Cluster size: 1
number of clusters: 51
x lines: 
[35, 60, 119]
clusters were ordered in the : 
[24, 4, 51, 42, 12, 17, 6, 43, 50, 13, 49, 14, 40, 25, 23, 16, 47, 38, 35, 30, 15, 5, 9, 39, 41, 45, 26, 46, 37, 21, 22, 31, 34, 18, 48, 29, 27, 3, 7, 11, 20, 33, 44, 1, 8, 36, 2, 28, 32, 19, 10]
- - - start drawing drift map
- - - start processing the timeseries in clusters
without DRIFT: 118
current DRIFT (curve length): 121.32291718306801
current DRIFT (polyine length): 148.31034123188067
without DRIFT: 118
current DRIFT (curve length): 277.7349070456978
current DRIFT (polyine length): 841.7184007624068
without DRIFT: 118
current DRIFT (curve length): 245.55415423688913
current DRIFT (polyine length): 740.9041975360099
without DRIFT: 118
current DRIFT (curve length): 228.66763742287355
current DRIFT (polyine length): 643.7441845415044
without DRIFT: 118
current DRIFT (curve length): 130.37651657897595
current DRIFT (polyine length): 212.51921737252042
without DRIFT: 118
current DRIFT (curve length): 132.69810317982615
current DRIFT (polyine length): 257.53657233876544
without DRIFT: 118
current DRIFT (curve length): 243.3933883613438
current DRIFT (polyine length): 825.9153731786157
without DRIFT: 118
current DRIFT (curve length): 228.98581453930151
current DRIFT (polyine length): 660.1149075345799
without DRIFT: 118
current DRIFT (curve length): 265.19275048972173
current DRIFT (polyine length): 789.3604509499404
without DRIFT: 118
current DRIFT (curve length): 163.87811235552908
current DRIFT (polyine length): 378.7931436105448
without DRIFT: 118
current DRIFT (curve length): 298.21368854766826
current DRIFT (polyine length): 927.339440263164
without DRIFT: 118
current DRIFT (curve length): 196.7684153151926
current DRIFT (polyine length): 538.0775879271471
without DRIFT: 118
current DRIFT (curve length): 213.83843850899464
current DRIFT (polyine length): 695.1908799445317
without DRIFT: 118
current DRIFT (curve length): 273.8854673737632
current DRIFT (polyine length): 644.1376928476691
without DRIFT: 118
current DRIFT (curve length): 195.2097710716797
current DRIFT (polyine length): 505.7957707175848
without DRIFT: 118
current DRIFT (curve length): 201.65020239537472
current DRIFT (polyine length): 532.9637707023765
without DRIFT: 118
current DRIFT (curve length): 179.56660823263002
current DRIFT (polyine length): 490.8066457075738
without DRIFT: 118
current DRIFT (curve length): 244.2145965199778
current DRIFT (polyine length): 834.1638496399551
without DRIFT: 118
current DRIFT (curve length): 300.4877516097271
current DRIFT (polyine length): 808.3424564249667
without DRIFT: 118
current DRIFT (curve length): 165.59436569784398
current DRIFT (polyine length): 304.2396179058668
without DRIFT: 118
current DRIFT (curve length): 207.69928322252326
current DRIFT (polyine length): 537.5536743339844
without DRIFT: 118
current DRIFT (curve length): 278.08981450143835
current DRIFT (polyine length): 844.0927858221366
without DRIFT: 118
current DRIFT (curve length): 173.90977327324393
current DRIFT (polyine length): 498.0939668291151
without DRIFT: 118
current DRIFT (curve length): 234.31816565448185
current DRIFT (polyine length): 691.5145524590966
without DRIFT: 118
current DRIFT (curve length): 300.1091761551984
current DRIFT (polyine length): 974.9448651174287
without DRIFT: 118
current DRIFT (curve length): 184.20203459040243
current DRIFT (polyine length): 513.5959896215903
without DRIFT: 118
current DRIFT (curve length): 204.42372850868614
current DRIFT (polyine length): 460.4017521002732
without DRIFT: 118
current DRIFT (curve length): 199.89712456656423
current DRIFT (polyine length): 506.36378632411635
without DRIFT: 118
current DRIFT (curve length): 300.2273151578579
current DRIFT (polyine length): 919.646758288192
without DRIFT: 118
current DRIFT (curve length): 243.6102616537763
current DRIFT (polyine length): 735.7589963943907
without DRIFT: 118
current DRIFT (curve length): 249.0598775192515
current DRIFT (polyine length): 749.3846064850845
without DRIFT: 118
current DRIFT (curve length): 267.5795985768989
current DRIFT (polyine length): 668.5774105574192
without DRIFT: 118
current DRIFT (curve length): 229.99622735012267
current DRIFT (polyine length): 664.5824727834621
without DRIFT: 118
current DRIFT (curve length): 284.86799501727916
current DRIFT (polyine length): 736.0288428550747
without DRIFT: 118
current DRIFT (curve length): 185.16568311503568
current DRIFT (polyine length): 463.11103603058245
without DRIFT: 118
current DRIFT (curve length): 219.06041587424488
current DRIFT (polyine length): 525.1112611755274
without DRIFT: 118
current DRIFT (curve length): 134.98209841174923
current DRIFT (polyine length): 159.53298927548127
without DRIFT: 118
current DRIFT (curve length): 169.13533630695696
current DRIFT (polyine length): 477.383860238708
without DRIFT: 118
current DRIFT (curve length): 187.75028989596578
current DRIFT (polyine length): 528.378614018934
without DRIFT: 118
current DRIFT (curve length): 134.16636502992137
current DRIFT (polyine length): 218.46167781495757
without DRIFT: 118
current DRIFT (curve length): 229.17558971486548
current DRIFT (polyine length): 597.1361692134548
without DRIFT: 118
current DRIFT (curve length): 283.50548624965114
current DRIFT (polyine length): 526.1304543891839
without DRIFT: 118
current DRIFT (curve length): 215.51943120835622
current DRIFT (polyine length): 730.8962494253859
without DRIFT: 118
current DRIFT (curve length): 233.48193989466716
current DRIFT (polyine length): 246.2403719881751
without DRIFT: 118
current DRIFT (curve length): 274.1961385885869
current DRIFT (polyine length): 882.8840021771409
without DRIFT: 118
current DRIFT (curve length): 296.8387277030976
current DRIFT (polyine length): 745.3933306744268
without DRIFT: 118
current DRIFT (curve length): 146.69544541424185
current DRIFT (polyine length): 332.5537947965834
without DRIFT: 118
current DRIFT (curve length): 224.23709108307932
current DRIFT (polyine length): 525.3171905016669
without DRIFT: 118
current DRIFT (curve length): 301.6727067259755
current DRIFT (polyine length): 702.2827552240594
without DRIFT: 118
current DRIFT (curve length): 239.85584442036736
current DRIFT (polyine length): 524.2413359109663
without DRIFT: 118
current DRIFT (curve length): 400.8348233312166
current DRIFT (polyine length): 786.5183110792062
