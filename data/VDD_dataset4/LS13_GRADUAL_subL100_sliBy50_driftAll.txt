there are : 2383 values left after deleting 100, and 0s
there were: 2253 vectors with zeros removed
there were: 228 vectors with hundreds removed
there were: 0 vectors with non changing values removed
there were : 278 values
sorted: 1 out of: 278
sorted: 2 out of: 278
sorted: 3 out of: 278
sorted: 4 out of: 278
sorted: 5 out of: 278
sorted: 6 out of: 278
sorted: 7 out of: 278
sorted: 8 out of: 278
sorted: 9 out of: 278
sorted: 10 out of: 278
sorted: 11 out of: 278
sorted: 12 out of: 278
sorted: 13 out of: 278
sorted: 14 out of: 278
sorted: 15 out of: 278
sorted: 16 out of: 278
sorted: 17 out of: 278
sorted: 18 out of: 278
sorted: 19 out of: 278
sorted: 20 out of: 278
sorted: 21 out of: 278
sorted: 22 out of: 278
sorted: 23 out of: 278
sorted: 24 out of: 278
sorted: 25 out of: 278
sorted: 26 out of: 278
sorted: 27 out of: 278
sorted: 28 out of: 278
sorted: 29 out of: 278
sorted: 30 out of: 278
sorted: 31 out of: 278
sorted: 32 out of: 278
sorted: 33 out of: 278
sorted: 34 out of: 278
sorted: 35 out of: 278
sorted: 36 out of: 278
sorted: 37 out of: 278
sorted: 38 out of: 278
sorted: 39 out of: 278
sorted: 40 out of: 278
sorted: 41 out of: 278
sorted: 42 out of: 278
sorted: 43 out of: 278
sorted: 44 out of: 278
sorted: 45 out of: 278
sorted: 46 out of: 278
sorted: 47 out of: 278
sorted: 48 out of: 278
sorted: 49 out of: 278
sorted: 50 out of: 278
sorted: 51 out of: 278
sorted: 52 out of: 278
sorted: 53 out of: 278
sorted: 54 out of: 278
sorted: 55 out of: 278
sorted: 56 out of: 278
sorted: 57 out of: 278
sorted: 58 out of: 278
sorted: 59 out of: 278
sorted: 60 out of: 278
sorted: 61 out of: 278
sorted: 62 out of: 278
sorted: 63 out of: 278
sorted: 64 out of: 278
sorted: 65 out of: 278
sorted: 66 out of: 278
sorted: 67 out of: 278
sorted: 68 out of: 278
sorted: 69 out of: 278
sorted: 70 out of: 278
sorted: 71 out of: 278
sorted: 72 out of: 278
sorted: 73 out of: 278
sorted: 74 out of: 278
sorted: 75 out of: 278
sorted: 76 out of: 278
sorted: 77 out of: 278
sorted: 78 out of: 278
sorted: 79 out of: 278
sorted: 80 out of: 278
sorted: 81 out of: 278
sorted: 82 out of: 278
sorted: 83 out of: 278
sorted: 84 out of: 278
sorted: 85 out of: 278
sorted: 86 out of: 278
sorted: 87 out of: 278
sorted: 88 out of: 278
sorted: 89 out of: 278
sorted: 90 out of: 278
sorted: 91 out of: 278
sorted: 92 out of: 278
sorted: 93 out of: 278
sorted: 94 out of: 278
sorted: 95 out of: 278
sorted: 96 out of: 278
sorted: 97 out of: 278
sorted: 98 out of: 278
sorted: 99 out of: 278
sorted: 100 out of: 278
sorted: 101 out of: 278
sorted: 102 out of: 278
sorted: 103 out of: 278
sorted: 104 out of: 278
sorted: 105 out of: 278
sorted: 106 out of: 278
sorted: 107 out of: 278
sorted: 108 out of: 278
sorted: 109 out of: 278
sorted: 110 out of: 278
sorted: 111 out of: 278
sorted: 112 out of: 278
sorted: 113 out of: 278
sorted: 114 out of: 278
sorted: 115 out of: 278
sorted: 116 out of: 278
sorted: 117 out of: 278
sorted: 118 out of: 278
sorted: 119 out of: 278
sorted: 120 out of: 278
sorted: 121 out of: 278
sorted: 122 out of: 278
sorted: 123 out of: 278
sorted: 124 out of: 278
sorted: 125 out of: 278
sorted: 126 out of: 278
sorted: 127 out of: 278
sorted: 128 out of: 278
sorted: 129 out of: 278
sorted: 130 out of: 278
sorted: 131 out of: 278
sorted: 132 out of: 278
sorted: 133 out of: 278
sorted: 134 out of: 278
sorted: 135 out of: 278
sorted: 136 out of: 278
sorted: 137 out of: 278
sorted: 138 out of: 278
sorted: 139 out of: 278
sorted: 140 out of: 278
sorted: 141 out of: 278
sorted: 142 out of: 278
sorted: 143 out of: 278
sorted: 144 out of: 278
sorted: 145 out of: 278
sorted: 146 out of: 278
sorted: 147 out of: 278
sorted: 148 out of: 278
sorted: 149 out of: 278
sorted: 150 out of: 278
sorted: 151 out of: 278
sorted: 152 out of: 278
sorted: 153 out of: 278
sorted: 154 out of: 278
sorted: 155 out of: 278
sorted: 156 out of: 278
sorted: 157 out of: 278
sorted: 158 out of: 278
sorted: 159 out of: 278
sorted: 160 out of: 278
sorted: 161 out of: 278
sorted: 162 out of: 278
sorted: 163 out of: 278
sorted: 164 out of: 278
sorted: 165 out of: 278
sorted: 166 out of: 278
sorted: 167 out of: 278
sorted: 168 out of: 278
sorted: 169 out of: 278
sorted: 170 out of: 278
sorted: 171 out of: 278
sorted: 172 out of: 278
sorted: 173 out of: 278
sorted: 174 out of: 278
sorted: 175 out of: 278
sorted: 176 out of: 278
sorted: 177 out of: 278
sorted: 178 out of: 278
sorted: 179 out of: 278
sorted: 180 out of: 278
sorted: 181 out of: 278
sorted: 182 out of: 278
sorted: 183 out of: 278
sorted: 184 out of: 278
sorted: 185 out of: 278
sorted: 186 out of: 278
sorted: 187 out of: 278
sorted: 188 out of: 278
sorted: 189 out of: 278
sorted: 190 out of: 278
sorted: 191 out of: 278
sorted: 192 out of: 278
sorted: 193 out of: 278
sorted: 194 out of: 278
sorted: 195 out of: 278
sorted: 196 out of: 278
sorted: 197 out of: 278
sorted: 198 out of: 278
sorted: 199 out of: 278
sorted: 200 out of: 278
sorted: 201 out of: 278
sorted: 202 out of: 278
sorted: 203 out of: 278
sorted: 204 out of: 278
sorted: 205 out of: 278
sorted: 206 out of: 278
sorted: 207 out of: 278
sorted: 208 out of: 278
sorted: 209 out of: 278
sorted: 210 out of: 278
sorted: 211 out of: 278
sorted: 212 out of: 278
sorted: 213 out of: 278
sorted: 214 out of: 278
sorted: 215 out of: 278
sorted: 216 out of: 278
sorted: 217 out of: 278
sorted: 218 out of: 278
sorted: 219 out of: 278
sorted: 220 out of: 278
sorted: 221 out of: 278
sorted: 222 out of: 278
sorted: 223 out of: 278
sorted: 224 out of: 278
sorted: 225 out of: 278
sorted: 226 out of: 278
sorted: 227 out of: 278
sorted: 228 out of: 278
sorted: 229 out of: 278
sorted: 230 out of: 278
sorted: 231 out of: 278
sorted: 232 out of: 278
sorted: 233 out of: 278
sorted: 234 out of: 278
sorted: 235 out of: 278
sorted: 236 out of: 278
sorted: 237 out of: 278
sorted: 238 out of: 278
sorted: 239 out of: 278
sorted: 240 out of: 278
sorted: 241 out of: 278
sorted: 242 out of: 278
sorted: 243 out of: 278
sorted: 244 out of: 278
sorted: 245 out of: 278
sorted: 246 out of: 278
sorted: 247 out of: 278
sorted: 248 out of: 278
sorted: 249 out of: 278
sorted: 250 out of: 278
sorted: 251 out of: 278
sorted: 252 out of: 278
sorted: 253 out of: 278
sorted: 254 out of: 278
sorted: 255 out of: 278
sorted: 256 out of: 278
sorted: 257 out of: 278
sorted: 258 out of: 278
sorted: 259 out of: 278
sorted: 260 out of: 278
sorted: 261 out of: 278
sorted: 262 out of: 278
sorted: 263 out of: 278
sorted: 264 out of: 278
sorted: 265 out of: 278
sorted: 266 out of: 278
sorted: 267 out of: 278
sorted: 268 out of: 278
sorted: 269 out of: 278
sorted: 270 out of: 278
sorted: 271 out of: 278
sorted: 272 out of: 278
sorted: 273 out of: 278
sorted: 274 out of: 278
sorted: 275 out of: 278
sorted: 276 out of: 278
sorted: 277 out of: 278
sorted: 278 out of: 278
Cluster size: 278
there were : 188 values
sorted: 1 out of: 188
sorted: 2 out of: 188
sorted: 3 out of: 188
sorted: 4 out of: 188
sorted: 5 out of: 188
sorted: 6 out of: 188
sorted: 7 out of: 188
sorted: 8 out of: 188
sorted: 9 out of: 188
sorted: 10 out of: 188
sorted: 11 out of: 188
sorted: 12 out of: 188
sorted: 13 out of: 188
sorted: 14 out of: 188
sorted: 15 out of: 188
sorted: 16 out of: 188
sorted: 17 out of: 188
sorted: 18 out of: 188
sorted: 19 out of: 188
sorted: 20 out of: 188
sorted: 21 out of: 188
sorted: 22 out of: 188
sorted: 23 out of: 188
sorted: 24 out of: 188
sorted: 25 out of: 188
sorted: 26 out of: 188
sorted: 27 out of: 188
sorted: 28 out of: 188
sorted: 29 out of: 188
sorted: 30 out of: 188
sorted: 31 out of: 188
sorted: 32 out of: 188
sorted: 33 out of: 188
sorted: 34 out of: 188
sorted: 35 out of: 188
sorted: 36 out of: 188
sorted: 37 out of: 188
sorted: 38 out of: 188
sorted: 39 out of: 188
sorted: 40 out of: 188
sorted: 41 out of: 188
sorted: 42 out of: 188
sorted: 43 out of: 188
sorted: 44 out of: 188
sorted: 45 out of: 188
sorted: 46 out of: 188
sorted: 47 out of: 188
sorted: 48 out of: 188
sorted: 49 out of: 188
sorted: 50 out of: 188
sorted: 51 out of: 188
sorted: 52 out of: 188
sorted: 53 out of: 188
sorted: 54 out of: 188
sorted: 55 out of: 188
sorted: 56 out of: 188
sorted: 57 out of: 188
sorted: 58 out of: 188
sorted: 59 out of: 188
sorted: 60 out of: 188
sorted: 61 out of: 188
sorted: 62 out of: 188
sorted: 63 out of: 188
sorted: 64 out of: 188
sorted: 65 out of: 188
sorted: 66 out of: 188
sorted: 67 out of: 188
sorted: 68 out of: 188
sorted: 69 out of: 188
sorted: 70 out of: 188
sorted: 71 out of: 188
sorted: 72 out of: 188
sorted: 73 out of: 188
sorted: 74 out of: 188
sorted: 75 out of: 188
sorted: 76 out of: 188
sorted: 77 out of: 188
sorted: 78 out of: 188
sorted: 79 out of: 188
sorted: 80 out of: 188
sorted: 81 out of: 188
sorted: 82 out of: 188
sorted: 83 out of: 188
sorted: 84 out of: 188
sorted: 85 out of: 188
sorted: 86 out of: 188
sorted: 87 out of: 188
sorted: 88 out of: 188
sorted: 89 out of: 188
sorted: 90 out of: 188
sorted: 91 out of: 188
sorted: 92 out of: 188
sorted: 93 out of: 188
sorted: 94 out of: 188
sorted: 95 out of: 188
sorted: 96 out of: 188
sorted: 97 out of: 188
sorted: 98 out of: 188
sorted: 99 out of: 188
sorted: 100 out of: 188
sorted: 101 out of: 188
sorted: 102 out of: 188
sorted: 103 out of: 188
sorted: 104 out of: 188
sorted: 105 out of: 188
sorted: 106 out of: 188
sorted: 107 out of: 188
sorted: 108 out of: 188
sorted: 109 out of: 188
sorted: 110 out of: 188
sorted: 111 out of: 188
sorted: 112 out of: 188
sorted: 113 out of: 188
sorted: 114 out of: 188
sorted: 115 out of: 188
sorted: 116 out of: 188
sorted: 117 out of: 188
sorted: 118 out of: 188
sorted: 119 out of: 188
sorted: 120 out of: 188
sorted: 121 out of: 188
sorted: 122 out of: 188
sorted: 123 out of: 188
sorted: 124 out of: 188
sorted: 125 out of: 188
sorted: 126 out of: 188
sorted: 127 out of: 188
sorted: 128 out of: 188
sorted: 129 out of: 188
sorted: 130 out of: 188
sorted: 131 out of: 188
sorted: 132 out of: 188
sorted: 133 out of: 188
sorted: 134 out of: 188
sorted: 135 out of: 188
sorted: 136 out of: 188
sorted: 137 out of: 188
sorted: 138 out of: 188
sorted: 139 out of: 188
sorted: 140 out of: 188
sorted: 141 out of: 188
sorted: 142 out of: 188
sorted: 143 out of: 188
sorted: 144 out of: 188
sorted: 145 out of: 188
sorted: 146 out of: 188
sorted: 147 out of: 188
sorted: 148 out of: 188
sorted: 149 out of: 188
sorted: 150 out of: 188
sorted: 151 out of: 188
sorted: 152 out of: 188
sorted: 153 out of: 188
sorted: 154 out of: 188
sorted: 155 out of: 188
sorted: 156 out of: 188
sorted: 157 out of: 188
sorted: 158 out of: 188
sorted: 159 out of: 188
sorted: 160 out of: 188
sorted: 161 out of: 188
sorted: 162 out of: 188
sorted: 163 out of: 188
sorted: 164 out of: 188
sorted: 165 out of: 188
sorted: 166 out of: 188
sorted: 167 out of: 188
sorted: 168 out of: 188
sorted: 169 out of: 188
sorted: 170 out of: 188
sorted: 171 out of: 188
sorted: 172 out of: 188
sorted: 173 out of: 188
sorted: 174 out of: 188
sorted: 175 out of: 188
sorted: 176 out of: 188
sorted: 177 out of: 188
sorted: 178 out of: 188
sorted: 179 out of: 188
sorted: 180 out of: 188
sorted: 181 out of: 188
sorted: 182 out of: 188
sorted: 183 out of: 188
sorted: 184 out of: 188
sorted: 185 out of: 188
sorted: 186 out of: 188
sorted: 187 out of: 188
sorted: 188 out of: 188
Cluster size: 188
there were : 181 values
sorted: 1 out of: 181
sorted: 2 out of: 181
sorted: 3 out of: 181
sorted: 4 out of: 181
sorted: 5 out of: 181
sorted: 6 out of: 181
sorted: 7 out of: 181
sorted: 8 out of: 181
sorted: 9 out of: 181
sorted: 10 out of: 181
sorted: 11 out of: 181
sorted: 12 out of: 181
sorted: 13 out of: 181
sorted: 14 out of: 181
sorted: 15 out of: 181
sorted: 16 out of: 181
sorted: 17 out of: 181
sorted: 18 out of: 181
sorted: 19 out of: 181
sorted: 20 out of: 181
sorted: 21 out of: 181
sorted: 22 out of: 181
sorted: 23 out of: 181
sorted: 24 out of: 181
sorted: 25 out of: 181
sorted: 26 out of: 181
sorted: 27 out of: 181
sorted: 28 out of: 181
sorted: 29 out of: 181
sorted: 30 out of: 181
sorted: 31 out of: 181
sorted: 32 out of: 181
sorted: 33 out of: 181
sorted: 34 out of: 181
sorted: 35 out of: 181
sorted: 36 out of: 181
sorted: 37 out of: 181
sorted: 38 out of: 181
sorted: 39 out of: 181
sorted: 40 out of: 181
sorted: 41 out of: 181
sorted: 42 out of: 181
sorted: 43 out of: 181
sorted: 44 out of: 181
sorted: 45 out of: 181
sorted: 46 out of: 181
sorted: 47 out of: 181
sorted: 48 out of: 181
sorted: 49 out of: 181
sorted: 50 out of: 181
sorted: 51 out of: 181
sorted: 52 out of: 181
sorted: 53 out of: 181
sorted: 54 out of: 181
sorted: 55 out of: 181
sorted: 56 out of: 181
sorted: 57 out of: 181
sorted: 58 out of: 181
sorted: 59 out of: 181
sorted: 60 out of: 181
sorted: 61 out of: 181
sorted: 62 out of: 181
sorted: 63 out of: 181
sorted: 64 out of: 181
sorted: 65 out of: 181
sorted: 66 out of: 181
sorted: 67 out of: 181
sorted: 68 out of: 181
sorted: 69 out of: 181
sorted: 70 out of: 181
sorted: 71 out of: 181
sorted: 72 out of: 181
sorted: 73 out of: 181
sorted: 74 out of: 181
sorted: 75 out of: 181
sorted: 76 out of: 181
sorted: 77 out of: 181
sorted: 78 out of: 181
sorted: 79 out of: 181
sorted: 80 out of: 181
sorted: 81 out of: 181
sorted: 82 out of: 181
sorted: 83 out of: 181
sorted: 84 out of: 181
sorted: 85 out of: 181
sorted: 86 out of: 181
sorted: 87 out of: 181
sorted: 88 out of: 181
sorted: 89 out of: 181
sorted: 90 out of: 181
sorted: 91 out of: 181
sorted: 92 out of: 181
sorted: 93 out of: 181
sorted: 94 out of: 181
sorted: 95 out of: 181
sorted: 96 out of: 181
sorted: 97 out of: 181
sorted: 98 out of: 181
sorted: 99 out of: 181
sorted: 100 out of: 181
sorted: 101 out of: 181
sorted: 102 out of: 181
sorted: 103 out of: 181
sorted: 104 out of: 181
sorted: 105 out of: 181
sorted: 106 out of: 181
sorted: 107 out of: 181
sorted: 108 out of: 181
sorted: 109 out of: 181
sorted: 110 out of: 181
sorted: 111 out of: 181
sorted: 112 out of: 181
sorted: 113 out of: 181
sorted: 114 out of: 181
sorted: 115 out of: 181
sorted: 116 out of: 181
sorted: 117 out of: 181
sorted: 118 out of: 181
sorted: 119 out of: 181
sorted: 120 out of: 181
sorted: 121 out of: 181
sorted: 122 out of: 181
sorted: 123 out of: 181
sorted: 124 out of: 181
sorted: 125 out of: 181
sorted: 126 out of: 181
sorted: 127 out of: 181
sorted: 128 out of: 181
sorted: 129 out of: 181
sorted: 130 out of: 181
sorted: 131 out of: 181
sorted: 132 out of: 181
sorted: 133 out of: 181
sorted: 134 out of: 181
sorted: 135 out of: 181
sorted: 136 out of: 181
sorted: 137 out of: 181
sorted: 138 out of: 181
sorted: 139 out of: 181
sorted: 140 out of: 181
sorted: 141 out of: 181
sorted: 142 out of: 181
sorted: 143 out of: 181
sorted: 144 out of: 181
sorted: 145 out of: 181
sorted: 146 out of: 181
sorted: 147 out of: 181
sorted: 148 out of: 181
sorted: 149 out of: 181
sorted: 150 out of: 181
sorted: 151 out of: 181
sorted: 152 out of: 181
sorted: 153 out of: 181
sorted: 154 out of: 181
sorted: 155 out of: 181
sorted: 156 out of: 181
sorted: 157 out of: 181
sorted: 158 out of: 181
sorted: 159 out of: 181
sorted: 160 out of: 181
sorted: 161 out of: 181
sorted: 162 out of: 181
sorted: 163 out of: 181
sorted: 164 out of: 181
sorted: 165 out of: 181
sorted: 166 out of: 181
sorted: 167 out of: 181
sorted: 168 out of: 181
sorted: 169 out of: 181
sorted: 170 out of: 181
sorted: 171 out of: 181
sorted: 172 out of: 181
sorted: 173 out of: 181
sorted: 174 out of: 181
sorted: 175 out of: 181
sorted: 176 out of: 181
sorted: 177 out of: 181
sorted: 178 out of: 181
sorted: 179 out of: 181
sorted: 180 out of: 181
sorted: 181 out of: 181
Cluster size: 181
there were : 180 values
sorted: 1 out of: 180
sorted: 2 out of: 180
sorted: 3 out of: 180
sorted: 4 out of: 180
sorted: 5 out of: 180
sorted: 6 out of: 180
sorted: 7 out of: 180
sorted: 8 out of: 180
sorted: 9 out of: 180
sorted: 10 out of: 180
sorted: 11 out of: 180
sorted: 12 out of: 180
sorted: 13 out of: 180
sorted: 14 out of: 180
sorted: 15 out of: 180
sorted: 16 out of: 180
sorted: 17 out of: 180
sorted: 18 out of: 180
sorted: 19 out of: 180
sorted: 20 out of: 180
sorted: 21 out of: 180
sorted: 22 out of: 180
sorted: 23 out of: 180
sorted: 24 out of: 180
sorted: 25 out of: 180
sorted: 26 out of: 180
sorted: 27 out of: 180
sorted: 28 out of: 180
sorted: 29 out of: 180
sorted: 30 out of: 180
sorted: 31 out of: 180
sorted: 32 out of: 180
sorted: 33 out of: 180
sorted: 34 out of: 180
sorted: 35 out of: 180
sorted: 36 out of: 180
sorted: 37 out of: 180
sorted: 38 out of: 180
sorted: 39 out of: 180
sorted: 40 out of: 180
sorted: 41 out of: 180
sorted: 42 out of: 180
sorted: 43 out of: 180
sorted: 44 out of: 180
sorted: 45 out of: 180
sorted: 46 out of: 180
sorted: 47 out of: 180
sorted: 48 out of: 180
sorted: 49 out of: 180
sorted: 50 out of: 180
sorted: 51 out of: 180
sorted: 52 out of: 180
sorted: 53 out of: 180
sorted: 54 out of: 180
sorted: 55 out of: 180
sorted: 56 out of: 180
sorted: 57 out of: 180
sorted: 58 out of: 180
sorted: 59 out of: 180
sorted: 60 out of: 180
sorted: 61 out of: 180
sorted: 62 out of: 180
sorted: 63 out of: 180
sorted: 64 out of: 180
sorted: 65 out of: 180
sorted: 66 out of: 180
sorted: 67 out of: 180
sorted: 68 out of: 180
sorted: 69 out of: 180
sorted: 70 out of: 180
sorted: 71 out of: 180
sorted: 72 out of: 180
sorted: 73 out of: 180
sorted: 74 out of: 180
sorted: 75 out of: 180
sorted: 76 out of: 180
sorted: 77 out of: 180
sorted: 78 out of: 180
sorted: 79 out of: 180
sorted: 80 out of: 180
sorted: 81 out of: 180
sorted: 82 out of: 180
sorted: 83 out of: 180
sorted: 84 out of: 180
sorted: 85 out of: 180
sorted: 86 out of: 180
sorted: 87 out of: 180
sorted: 88 out of: 180
sorted: 89 out of: 180
sorted: 90 out of: 180
sorted: 91 out of: 180
sorted: 92 out of: 180
sorted: 93 out of: 180
sorted: 94 out of: 180
sorted: 95 out of: 180
sorted: 96 out of: 180
sorted: 97 out of: 180
sorted: 98 out of: 180
sorted: 99 out of: 180
sorted: 100 out of: 180
sorted: 101 out of: 180
sorted: 102 out of: 180
sorted: 103 out of: 180
sorted: 104 out of: 180
sorted: 105 out of: 180
sorted: 106 out of: 180
sorted: 107 out of: 180
sorted: 108 out of: 180
sorted: 109 out of: 180
sorted: 110 out of: 180
sorted: 111 out of: 180
sorted: 112 out of: 180
sorted: 113 out of: 180
sorted: 114 out of: 180
sorted: 115 out of: 180
sorted: 116 out of: 180
sorted: 117 out of: 180
sorted: 118 out of: 180
sorted: 119 out of: 180
sorted: 120 out of: 180
sorted: 121 out of: 180
sorted: 122 out of: 180
sorted: 123 out of: 180
sorted: 124 out of: 180
sorted: 125 out of: 180
sorted: 126 out of: 180
sorted: 127 out of: 180
sorted: 128 out of: 180
sorted: 129 out of: 180
sorted: 130 out of: 180
sorted: 131 out of: 180
sorted: 132 out of: 180
sorted: 133 out of: 180
sorted: 134 out of: 180
sorted: 135 out of: 180
sorted: 136 out of: 180
sorted: 137 out of: 180
sorted: 138 out of: 180
sorted: 139 out of: 180
sorted: 140 out of: 180
sorted: 141 out of: 180
sorted: 142 out of: 180
sorted: 143 out of: 180
sorted: 144 out of: 180
sorted: 145 out of: 180
sorted: 146 out of: 180
sorted: 147 out of: 180
sorted: 148 out of: 180
sorted: 149 out of: 180
sorted: 150 out of: 180
sorted: 151 out of: 180
sorted: 152 out of: 180
sorted: 153 out of: 180
sorted: 154 out of: 180
sorted: 155 out of: 180
sorted: 156 out of: 180
sorted: 157 out of: 180
sorted: 158 out of: 180
sorted: 159 out of: 180
sorted: 160 out of: 180
sorted: 161 out of: 180
sorted: 162 out of: 180
sorted: 163 out of: 180
sorted: 164 out of: 180
sorted: 165 out of: 180
sorted: 166 out of: 180
sorted: 167 out of: 180
sorted: 168 out of: 180
sorted: 169 out of: 180
sorted: 170 out of: 180
sorted: 171 out of: 180
sorted: 172 out of: 180
sorted: 173 out of: 180
sorted: 174 out of: 180
sorted: 175 out of: 180
sorted: 176 out of: 180
sorted: 177 out of: 180
sorted: 178 out of: 180
sorted: 179 out of: 180
sorted: 180 out of: 180
Cluster size: 180
there were : 163 values
sorted: 1 out of: 163
sorted: 2 out of: 163
sorted: 3 out of: 163
sorted: 4 out of: 163
sorted: 5 out of: 163
sorted: 6 out of: 163
sorted: 7 out of: 163
sorted: 8 out of: 163
sorted: 9 out of: 163
sorted: 10 out of: 163
sorted: 11 out of: 163
sorted: 12 out of: 163
sorted: 13 out of: 163
sorted: 14 out of: 163
sorted: 15 out of: 163
sorted: 16 out of: 163
sorted: 17 out of: 163
sorted: 18 out of: 163
sorted: 19 out of: 163
sorted: 20 out of: 163
sorted: 21 out of: 163
sorted: 22 out of: 163
sorted: 23 out of: 163
sorted: 24 out of: 163
sorted: 25 out of: 163
sorted: 26 out of: 163
sorted: 27 out of: 163
sorted: 28 out of: 163
sorted: 29 out of: 163
sorted: 30 out of: 163
sorted: 31 out of: 163
sorted: 32 out of: 163
sorted: 33 out of: 163
sorted: 34 out of: 163
sorted: 35 out of: 163
sorted: 36 out of: 163
sorted: 37 out of: 163
sorted: 38 out of: 163
sorted: 39 out of: 163
sorted: 40 out of: 163
sorted: 41 out of: 163
sorted: 42 out of: 163
sorted: 43 out of: 163
sorted: 44 out of: 163
sorted: 45 out of: 163
sorted: 46 out of: 163
sorted: 47 out of: 163
sorted: 48 out of: 163
sorted: 49 out of: 163
sorted: 50 out of: 163
sorted: 51 out of: 163
sorted: 52 out of: 163
sorted: 53 out of: 163
sorted: 54 out of: 163
sorted: 55 out of: 163
sorted: 56 out of: 163
sorted: 57 out of: 163
sorted: 58 out of: 163
sorted: 59 out of: 163
sorted: 60 out of: 163
sorted: 61 out of: 163
sorted: 62 out of: 163
sorted: 63 out of: 163
sorted: 64 out of: 163
sorted: 65 out of: 163
sorted: 66 out of: 163
sorted: 67 out of: 163
sorted: 68 out of: 163
sorted: 69 out of: 163
sorted: 70 out of: 163
sorted: 71 out of: 163
sorted: 72 out of: 163
sorted: 73 out of: 163
sorted: 74 out of: 163
sorted: 75 out of: 163
sorted: 76 out of: 163
sorted: 77 out of: 163
sorted: 78 out of: 163
sorted: 79 out of: 163
sorted: 80 out of: 163
sorted: 81 out of: 163
sorted: 82 out of: 163
sorted: 83 out of: 163
sorted: 84 out of: 163
sorted: 85 out of: 163
sorted: 86 out of: 163
sorted: 87 out of: 163
sorted: 88 out of: 163
sorted: 89 out of: 163
sorted: 90 out of: 163
sorted: 91 out of: 163
sorted: 92 out of: 163
sorted: 93 out of: 163
sorted: 94 out of: 163
sorted: 95 out of: 163
sorted: 96 out of: 163
sorted: 97 out of: 163
sorted: 98 out of: 163
sorted: 99 out of: 163
sorted: 100 out of: 163
sorted: 101 out of: 163
sorted: 102 out of: 163
sorted: 103 out of: 163
sorted: 104 out of: 163
sorted: 105 out of: 163
sorted: 106 out of: 163
sorted: 107 out of: 163
sorted: 108 out of: 163
sorted: 109 out of: 163
sorted: 110 out of: 163
sorted: 111 out of: 163
sorted: 112 out of: 163
sorted: 113 out of: 163
sorted: 114 out of: 163
sorted: 115 out of: 163
sorted: 116 out of: 163
sorted: 117 out of: 163
sorted: 118 out of: 163
sorted: 119 out of: 163
sorted: 120 out of: 163
sorted: 121 out of: 163
sorted: 122 out of: 163
sorted: 123 out of: 163
sorted: 124 out of: 163
sorted: 125 out of: 163
sorted: 126 out of: 163
sorted: 127 out of: 163
sorted: 128 out of: 163
sorted: 129 out of: 163
sorted: 130 out of: 163
sorted: 131 out of: 163
sorted: 132 out of: 163
sorted: 133 out of: 163
sorted: 134 out of: 163
sorted: 135 out of: 163
sorted: 136 out of: 163
sorted: 137 out of: 163
sorted: 138 out of: 163
sorted: 139 out of: 163
sorted: 140 out of: 163
sorted: 141 out of: 163
sorted: 142 out of: 163
sorted: 143 out of: 163
sorted: 144 out of: 163
sorted: 145 out of: 163
sorted: 146 out of: 163
sorted: 147 out of: 163
sorted: 148 out of: 163
sorted: 149 out of: 163
sorted: 150 out of: 163
sorted: 151 out of: 163
sorted: 152 out of: 163
sorted: 153 out of: 163
sorted: 154 out of: 163
sorted: 155 out of: 163
sorted: 156 out of: 163
sorted: 157 out of: 163
sorted: 158 out of: 163
sorted: 159 out of: 163
sorted: 160 out of: 163
sorted: 161 out of: 163
sorted: 162 out of: 163
sorted: 163 out of: 163
Cluster size: 163
there were : 163 values
sorted: 1 out of: 163
sorted: 2 out of: 163
sorted: 3 out of: 163
sorted: 4 out of: 163
sorted: 5 out of: 163
sorted: 6 out of: 163
sorted: 7 out of: 163
sorted: 8 out of: 163
sorted: 9 out of: 163
sorted: 10 out of: 163
sorted: 11 out of: 163
sorted: 12 out of: 163
sorted: 13 out of: 163
sorted: 14 out of: 163
sorted: 15 out of: 163
sorted: 16 out of: 163
sorted: 17 out of: 163
sorted: 18 out of: 163
sorted: 19 out of: 163
sorted: 20 out of: 163
sorted: 21 out of: 163
sorted: 22 out of: 163
sorted: 23 out of: 163
sorted: 24 out of: 163
sorted: 25 out of: 163
sorted: 26 out of: 163
sorted: 27 out of: 163
sorted: 28 out of: 163
sorted: 29 out of: 163
sorted: 30 out of: 163
sorted: 31 out of: 163
sorted: 32 out of: 163
sorted: 33 out of: 163
sorted: 34 out of: 163
sorted: 35 out of: 163
sorted: 36 out of: 163
sorted: 37 out of: 163
sorted: 38 out of: 163
sorted: 39 out of: 163
sorted: 40 out of: 163
sorted: 41 out of: 163
sorted: 42 out of: 163
sorted: 43 out of: 163
sorted: 44 out of: 163
sorted: 45 out of: 163
sorted: 46 out of: 163
sorted: 47 out of: 163
sorted: 48 out of: 163
sorted: 49 out of: 163
sorted: 50 out of: 163
sorted: 51 out of: 163
sorted: 52 out of: 163
sorted: 53 out of: 163
sorted: 54 out of: 163
sorted: 55 out of: 163
sorted: 56 out of: 163
sorted: 57 out of: 163
sorted: 58 out of: 163
sorted: 59 out of: 163
sorted: 60 out of: 163
sorted: 61 out of: 163
sorted: 62 out of: 163
sorted: 63 out of: 163
sorted: 64 out of: 163
sorted: 65 out of: 163
sorted: 66 out of: 163
sorted: 67 out of: 163
sorted: 68 out of: 163
sorted: 69 out of: 163
sorted: 70 out of: 163
sorted: 71 out of: 163
sorted: 72 out of: 163
sorted: 73 out of: 163
sorted: 74 out of: 163
sorted: 75 out of: 163
sorted: 76 out of: 163
sorted: 77 out of: 163
sorted: 78 out of: 163
sorted: 79 out of: 163
sorted: 80 out of: 163
sorted: 81 out of: 163
sorted: 82 out of: 163
sorted: 83 out of: 163
sorted: 84 out of: 163
sorted: 85 out of: 163
sorted: 86 out of: 163
sorted: 87 out of: 163
sorted: 88 out of: 163
sorted: 89 out of: 163
sorted: 90 out of: 163
sorted: 91 out of: 163
sorted: 92 out of: 163
sorted: 93 out of: 163
sorted: 94 out of: 163
sorted: 95 out of: 163
sorted: 96 out of: 163
sorted: 97 out of: 163
sorted: 98 out of: 163
sorted: 99 out of: 163
sorted: 100 out of: 163
sorted: 101 out of: 163
sorted: 102 out of: 163
sorted: 103 out of: 163
sorted: 104 out of: 163
sorted: 105 out of: 163
sorted: 106 out of: 163
sorted: 107 out of: 163
sorted: 108 out of: 163
sorted: 109 out of: 163
sorted: 110 out of: 163
sorted: 111 out of: 163
sorted: 112 out of: 163
sorted: 113 out of: 163
sorted: 114 out of: 163
sorted: 115 out of: 163
sorted: 116 out of: 163
sorted: 117 out of: 163
sorted: 118 out of: 163
sorted: 119 out of: 163
sorted: 120 out of: 163
sorted: 121 out of: 163
sorted: 122 out of: 163
sorted: 123 out of: 163
sorted: 124 out of: 163
sorted: 125 out of: 163
sorted: 126 out of: 163
sorted: 127 out of: 163
sorted: 128 out of: 163
sorted: 129 out of: 163
sorted: 130 out of: 163
sorted: 131 out of: 163
sorted: 132 out of: 163
sorted: 133 out of: 163
sorted: 134 out of: 163
sorted: 135 out of: 163
sorted: 136 out of: 163
sorted: 137 out of: 163
sorted: 138 out of: 163
sorted: 139 out of: 163
sorted: 140 out of: 163
sorted: 141 out of: 163
sorted: 142 out of: 163
sorted: 143 out of: 163
sorted: 144 out of: 163
sorted: 145 out of: 163
sorted: 146 out of: 163
sorted: 147 out of: 163
sorted: 148 out of: 163
sorted: 149 out of: 163
sorted: 150 out of: 163
sorted: 151 out of: 163
sorted: 152 out of: 163
sorted: 153 out of: 163
sorted: 154 out of: 163
sorted: 155 out of: 163
sorted: 156 out of: 163
sorted: 157 out of: 163
sorted: 158 out of: 163
sorted: 159 out of: 163
sorted: 160 out of: 163
sorted: 161 out of: 163
sorted: 162 out of: 163
sorted: 163 out of: 163
Cluster size: 163
there were : 96 values
sorted: 1 out of: 96
sorted: 2 out of: 96
sorted: 3 out of: 96
sorted: 4 out of: 96
sorted: 5 out of: 96
sorted: 6 out of: 96
sorted: 7 out of: 96
sorted: 8 out of: 96
sorted: 9 out of: 96
sorted: 10 out of: 96
sorted: 11 out of: 96
sorted: 12 out of: 96
sorted: 13 out of: 96
sorted: 14 out of: 96
sorted: 15 out of: 96
sorted: 16 out of: 96
sorted: 17 out of: 96
sorted: 18 out of: 96
sorted: 19 out of: 96
sorted: 20 out of: 96
sorted: 21 out of: 96
sorted: 22 out of: 96
sorted: 23 out of: 96
sorted: 24 out of: 96
sorted: 25 out of: 96
sorted: 26 out of: 96
sorted: 27 out of: 96
sorted: 28 out of: 96
sorted: 29 out of: 96
sorted: 30 out of: 96
sorted: 31 out of: 96
sorted: 32 out of: 96
sorted: 33 out of: 96
sorted: 34 out of: 96
sorted: 35 out of: 96
sorted: 36 out of: 96
sorted: 37 out of: 96
sorted: 38 out of: 96
sorted: 39 out of: 96
sorted: 40 out of: 96
sorted: 41 out of: 96
sorted: 42 out of: 96
sorted: 43 out of: 96
sorted: 44 out of: 96
sorted: 45 out of: 96
sorted: 46 out of: 96
sorted: 47 out of: 96
sorted: 48 out of: 96
sorted: 49 out of: 96
sorted: 50 out of: 96
sorted: 51 out of: 96
sorted: 52 out of: 96
sorted: 53 out of: 96
sorted: 54 out of: 96
sorted: 55 out of: 96
sorted: 56 out of: 96
sorted: 57 out of: 96
sorted: 58 out of: 96
sorted: 59 out of: 96
sorted: 60 out of: 96
sorted: 61 out of: 96
sorted: 62 out of: 96
sorted: 63 out of: 96
sorted: 64 out of: 96
sorted: 65 out of: 96
sorted: 66 out of: 96
sorted: 67 out of: 96
sorted: 68 out of: 96
sorted: 69 out of: 96
sorted: 70 out of: 96
sorted: 71 out of: 96
sorted: 72 out of: 96
sorted: 73 out of: 96
sorted: 74 out of: 96
sorted: 75 out of: 96
sorted: 76 out of: 96
sorted: 77 out of: 96
sorted: 78 out of: 96
sorted: 79 out of: 96
sorted: 80 out of: 96
sorted: 81 out of: 96
sorted: 82 out of: 96
sorted: 83 out of: 96
sorted: 84 out of: 96
sorted: 85 out of: 96
sorted: 86 out of: 96
sorted: 87 out of: 96
sorted: 88 out of: 96
sorted: 89 out of: 96
sorted: 90 out of: 96
sorted: 91 out of: 96
sorted: 92 out of: 96
sorted: 93 out of: 96
sorted: 94 out of: 96
sorted: 95 out of: 96
sorted: 96 out of: 96
Cluster size: 96
there were : 88 values
sorted: 1 out of: 88
sorted: 2 out of: 88
sorted: 3 out of: 88
sorted: 4 out of: 88
sorted: 5 out of: 88
sorted: 6 out of: 88
sorted: 7 out of: 88
sorted: 8 out of: 88
sorted: 9 out of: 88
sorted: 10 out of: 88
sorted: 11 out of: 88
sorted: 12 out of: 88
sorted: 13 out of: 88
sorted: 14 out of: 88
sorted: 15 out of: 88
sorted: 16 out of: 88
sorted: 17 out of: 88
sorted: 18 out of: 88
sorted: 19 out of: 88
sorted: 20 out of: 88
sorted: 21 out of: 88
sorted: 22 out of: 88
sorted: 23 out of: 88
sorted: 24 out of: 88
sorted: 25 out of: 88
sorted: 26 out of: 88
sorted: 27 out of: 88
sorted: 28 out of: 88
sorted: 29 out of: 88
sorted: 30 out of: 88
sorted: 31 out of: 88
sorted: 32 out of: 88
sorted: 33 out of: 88
sorted: 34 out of: 88
sorted: 35 out of: 88
sorted: 36 out of: 88
sorted: 37 out of: 88
sorted: 38 out of: 88
sorted: 39 out of: 88
sorted: 40 out of: 88
sorted: 41 out of: 88
sorted: 42 out of: 88
sorted: 43 out of: 88
sorted: 44 out of: 88
sorted: 45 out of: 88
sorted: 46 out of: 88
sorted: 47 out of: 88
sorted: 48 out of: 88
sorted: 49 out of: 88
sorted: 50 out of: 88
sorted: 51 out of: 88
sorted: 52 out of: 88
sorted: 53 out of: 88
sorted: 54 out of: 88
sorted: 55 out of: 88
sorted: 56 out of: 88
sorted: 57 out of: 88
sorted: 58 out of: 88
sorted: 59 out of: 88
sorted: 60 out of: 88
sorted: 61 out of: 88
sorted: 62 out of: 88
sorted: 63 out of: 88
sorted: 64 out of: 88
sorted: 65 out of: 88
sorted: 66 out of: 88
sorted: 67 out of: 88
sorted: 68 out of: 88
sorted: 69 out of: 88
sorted: 70 out of: 88
sorted: 71 out of: 88
sorted: 72 out of: 88
sorted: 73 out of: 88
sorted: 74 out of: 88
sorted: 75 out of: 88
sorted: 76 out of: 88
sorted: 77 out of: 88
sorted: 78 out of: 88
sorted: 79 out of: 88
sorted: 80 out of: 88
sorted: 81 out of: 88
sorted: 82 out of: 88
sorted: 83 out of: 88
sorted: 84 out of: 88
sorted: 85 out of: 88
sorted: 86 out of: 88
sorted: 87 out of: 88
sorted: 88 out of: 88
Cluster size: 88
there were : 84 values
sorted: 1 out of: 84
sorted: 2 out of: 84
sorted: 3 out of: 84
sorted: 4 out of: 84
sorted: 5 out of: 84
sorted: 6 out of: 84
sorted: 7 out of: 84
sorted: 8 out of: 84
sorted: 9 out of: 84
sorted: 10 out of: 84
sorted: 11 out of: 84
sorted: 12 out of: 84
sorted: 13 out of: 84
sorted: 14 out of: 84
sorted: 15 out of: 84
sorted: 16 out of: 84
sorted: 17 out of: 84
sorted: 18 out of: 84
sorted: 19 out of: 84
sorted: 20 out of: 84
sorted: 21 out of: 84
sorted: 22 out of: 84
sorted: 23 out of: 84
sorted: 24 out of: 84
sorted: 25 out of: 84
sorted: 26 out of: 84
sorted: 27 out of: 84
sorted: 28 out of: 84
sorted: 29 out of: 84
sorted: 30 out of: 84
sorted: 31 out of: 84
sorted: 32 out of: 84
sorted: 33 out of: 84
sorted: 34 out of: 84
sorted: 35 out of: 84
sorted: 36 out of: 84
sorted: 37 out of: 84
sorted: 38 out of: 84
sorted: 39 out of: 84
sorted: 40 out of: 84
sorted: 41 out of: 84
sorted: 42 out of: 84
sorted: 43 out of: 84
sorted: 44 out of: 84
sorted: 45 out of: 84
sorted: 46 out of: 84
sorted: 47 out of: 84
sorted: 48 out of: 84
sorted: 49 out of: 84
sorted: 50 out of: 84
sorted: 51 out of: 84
sorted: 52 out of: 84
sorted: 53 out of: 84
sorted: 54 out of: 84
sorted: 55 out of: 84
sorted: 56 out of: 84
sorted: 57 out of: 84
sorted: 58 out of: 84
sorted: 59 out of: 84
sorted: 60 out of: 84
sorted: 61 out of: 84
sorted: 62 out of: 84
sorted: 63 out of: 84
sorted: 64 out of: 84
sorted: 65 out of: 84
sorted: 66 out of: 84
sorted: 67 out of: 84
sorted: 68 out of: 84
sorted: 69 out of: 84
sorted: 70 out of: 84
sorted: 71 out of: 84
sorted: 72 out of: 84
sorted: 73 out of: 84
sorted: 74 out of: 84
sorted: 75 out of: 84
sorted: 76 out of: 84
sorted: 77 out of: 84
sorted: 78 out of: 84
sorted: 79 out of: 84
sorted: 80 out of: 84
sorted: 81 out of: 84
sorted: 82 out of: 84
sorted: 83 out of: 84
sorted: 84 out of: 84
Cluster size: 84
there were : 84 values
sorted: 1 out of: 84
sorted: 2 out of: 84
sorted: 3 out of: 84
sorted: 4 out of: 84
sorted: 5 out of: 84
sorted: 6 out of: 84
sorted: 7 out of: 84
sorted: 8 out of: 84
sorted: 9 out of: 84
sorted: 10 out of: 84
sorted: 11 out of: 84
sorted: 12 out of: 84
sorted: 13 out of: 84
sorted: 14 out of: 84
sorted: 15 out of: 84
sorted: 16 out of: 84
sorted: 17 out of: 84
sorted: 18 out of: 84
sorted: 19 out of: 84
sorted: 20 out of: 84
sorted: 21 out of: 84
sorted: 22 out of: 84
sorted: 23 out of: 84
sorted: 24 out of: 84
sorted: 25 out of: 84
sorted: 26 out of: 84
sorted: 27 out of: 84
sorted: 28 out of: 84
sorted: 29 out of: 84
sorted: 30 out of: 84
sorted: 31 out of: 84
sorted: 32 out of: 84
sorted: 33 out of: 84
sorted: 34 out of: 84
sorted: 35 out of: 84
sorted: 36 out of: 84
sorted: 37 out of: 84
sorted: 38 out of: 84
sorted: 39 out of: 84
sorted: 40 out of: 84
sorted: 41 out of: 84
sorted: 42 out of: 84
sorted: 43 out of: 84
sorted: 44 out of: 84
sorted: 45 out of: 84
sorted: 46 out of: 84
sorted: 47 out of: 84
sorted: 48 out of: 84
sorted: 49 out of: 84
sorted: 50 out of: 84
sorted: 51 out of: 84
sorted: 52 out of: 84
sorted: 53 out of: 84
sorted: 54 out of: 84
sorted: 55 out of: 84
sorted: 56 out of: 84
sorted: 57 out of: 84
sorted: 58 out of: 84
sorted: 59 out of: 84
sorted: 60 out of: 84
sorted: 61 out of: 84
sorted: 62 out of: 84
sorted: 63 out of: 84
sorted: 64 out of: 84
sorted: 65 out of: 84
sorted: 66 out of: 84
sorted: 67 out of: 84
sorted: 68 out of: 84
sorted: 69 out of: 84
sorted: 70 out of: 84
sorted: 71 out of: 84
sorted: 72 out of: 84
sorted: 73 out of: 84
sorted: 74 out of: 84
sorted: 75 out of: 84
sorted: 76 out of: 84
sorted: 77 out of: 84
sorted: 78 out of: 84
sorted: 79 out of: 84
sorted: 80 out of: 84
sorted: 81 out of: 84
sorted: 82 out of: 84
sorted: 83 out of: 84
sorted: 84 out of: 84
Cluster size: 84
there were : 78 values
sorted: 1 out of: 78
sorted: 2 out of: 78
sorted: 3 out of: 78
sorted: 4 out of: 78
sorted: 5 out of: 78
sorted: 6 out of: 78
sorted: 7 out of: 78
sorted: 8 out of: 78
sorted: 9 out of: 78
sorted: 10 out of: 78
sorted: 11 out of: 78
sorted: 12 out of: 78
sorted: 13 out of: 78
sorted: 14 out of: 78
sorted: 15 out of: 78
sorted: 16 out of: 78
sorted: 17 out of: 78
sorted: 18 out of: 78
sorted: 19 out of: 78
sorted: 20 out of: 78
sorted: 21 out of: 78
sorted: 22 out of: 78
sorted: 23 out of: 78
sorted: 24 out of: 78
sorted: 25 out of: 78
sorted: 26 out of: 78
sorted: 27 out of: 78
sorted: 28 out of: 78
sorted: 29 out of: 78
sorted: 30 out of: 78
sorted: 31 out of: 78
sorted: 32 out of: 78
sorted: 33 out of: 78
sorted: 34 out of: 78
sorted: 35 out of: 78
sorted: 36 out of: 78
sorted: 37 out of: 78
sorted: 38 out of: 78
sorted: 39 out of: 78
sorted: 40 out of: 78
sorted: 41 out of: 78
sorted: 42 out of: 78
sorted: 43 out of: 78
sorted: 44 out of: 78
sorted: 45 out of: 78
sorted: 46 out of: 78
sorted: 47 out of: 78
sorted: 48 out of: 78
sorted: 49 out of: 78
sorted: 50 out of: 78
sorted: 51 out of: 78
sorted: 52 out of: 78
sorted: 53 out of: 78
sorted: 54 out of: 78
sorted: 55 out of: 78
sorted: 56 out of: 78
sorted: 57 out of: 78
sorted: 58 out of: 78
sorted: 59 out of: 78
sorted: 60 out of: 78
sorted: 61 out of: 78
sorted: 62 out of: 78
sorted: 63 out of: 78
sorted: 64 out of: 78
sorted: 65 out of: 78
sorted: 66 out of: 78
sorted: 67 out of: 78
sorted: 68 out of: 78
sorted: 69 out of: 78
sorted: 70 out of: 78
sorted: 71 out of: 78
sorted: 72 out of: 78
sorted: 73 out of: 78
sorted: 74 out of: 78
sorted: 75 out of: 78
sorted: 76 out of: 78
sorted: 77 out of: 78
sorted: 78 out of: 78
Cluster size: 78
there were : 74 values
sorted: 1 out of: 74
sorted: 2 out of: 74
sorted: 3 out of: 74
sorted: 4 out of: 74
sorted: 5 out of: 74
sorted: 6 out of: 74
sorted: 7 out of: 74
sorted: 8 out of: 74
sorted: 9 out of: 74
sorted: 10 out of: 74
sorted: 11 out of: 74
sorted: 12 out of: 74
sorted: 13 out of: 74
sorted: 14 out of: 74
sorted: 15 out of: 74
sorted: 16 out of: 74
sorted: 17 out of: 74
sorted: 18 out of: 74
sorted: 19 out of: 74
sorted: 20 out of: 74
sorted: 21 out of: 74
sorted: 22 out of: 74
sorted: 23 out of: 74
sorted: 24 out of: 74
sorted: 25 out of: 74
sorted: 26 out of: 74
sorted: 27 out of: 74
sorted: 28 out of: 74
sorted: 29 out of: 74
sorted: 30 out of: 74
sorted: 31 out of: 74
sorted: 32 out of: 74
sorted: 33 out of: 74
sorted: 34 out of: 74
sorted: 35 out of: 74
sorted: 36 out of: 74
sorted: 37 out of: 74
sorted: 38 out of: 74
sorted: 39 out of: 74
sorted: 40 out of: 74
sorted: 41 out of: 74
sorted: 42 out of: 74
sorted: 43 out of: 74
sorted: 44 out of: 74
sorted: 45 out of: 74
sorted: 46 out of: 74
sorted: 47 out of: 74
sorted: 48 out of: 74
sorted: 49 out of: 74
sorted: 50 out of: 74
sorted: 51 out of: 74
sorted: 52 out of: 74
sorted: 53 out of: 74
sorted: 54 out of: 74
sorted: 55 out of: 74
sorted: 56 out of: 74
sorted: 57 out of: 74
sorted: 58 out of: 74
sorted: 59 out of: 74
sorted: 60 out of: 74
sorted: 61 out of: 74
sorted: 62 out of: 74
sorted: 63 out of: 74
sorted: 64 out of: 74
sorted: 65 out of: 74
sorted: 66 out of: 74
sorted: 67 out of: 74
sorted: 68 out of: 74
sorted: 69 out of: 74
sorted: 70 out of: 74
sorted: 71 out of: 74
sorted: 72 out of: 74
sorted: 73 out of: 74
sorted: 74 out of: 74
Cluster size: 74
there were : 74 values
sorted: 1 out of: 74
sorted: 2 out of: 74
sorted: 3 out of: 74
sorted: 4 out of: 74
sorted: 5 out of: 74
sorted: 6 out of: 74
sorted: 7 out of: 74
sorted: 8 out of: 74
sorted: 9 out of: 74
sorted: 10 out of: 74
sorted: 11 out of: 74
sorted: 12 out of: 74
sorted: 13 out of: 74
sorted: 14 out of: 74
sorted: 15 out of: 74
sorted: 16 out of: 74
sorted: 17 out of: 74
sorted: 18 out of: 74
sorted: 19 out of: 74
sorted: 20 out of: 74
sorted: 21 out of: 74
sorted: 22 out of: 74
sorted: 23 out of: 74
sorted: 24 out of: 74
sorted: 25 out of: 74
sorted: 26 out of: 74
sorted: 27 out of: 74
sorted: 28 out of: 74
sorted: 29 out of: 74
sorted: 30 out of: 74
sorted: 31 out of: 74
sorted: 32 out of: 74
sorted: 33 out of: 74
sorted: 34 out of: 74
sorted: 35 out of: 74
sorted: 36 out of: 74
sorted: 37 out of: 74
sorted: 38 out of: 74
sorted: 39 out of: 74
sorted: 40 out of: 74
sorted: 41 out of: 74
sorted: 42 out of: 74
sorted: 43 out of: 74
sorted: 44 out of: 74
sorted: 45 out of: 74
sorted: 46 out of: 74
sorted: 47 out of: 74
sorted: 48 out of: 74
sorted: 49 out of: 74
sorted: 50 out of: 74
sorted: 51 out of: 74
sorted: 52 out of: 74
sorted: 53 out of: 74
sorted: 54 out of: 74
sorted: 55 out of: 74
sorted: 56 out of: 74
sorted: 57 out of: 74
sorted: 58 out of: 74
sorted: 59 out of: 74
sorted: 60 out of: 74
sorted: 61 out of: 74
sorted: 62 out of: 74
sorted: 63 out of: 74
sorted: 64 out of: 74
sorted: 65 out of: 74
sorted: 66 out of: 74
sorted: 67 out of: 74
sorted: 68 out of: 74
sorted: 69 out of: 74
sorted: 70 out of: 74
sorted: 71 out of: 74
sorted: 72 out of: 74
sorted: 73 out of: 74
sorted: 74 out of: 74
Cluster size: 74
there were : 65 values
sorted: 1 out of: 65
sorted: 2 out of: 65
sorted: 3 out of: 65
sorted: 4 out of: 65
sorted: 5 out of: 65
sorted: 6 out of: 65
sorted: 7 out of: 65
sorted: 8 out of: 65
sorted: 9 out of: 65
sorted: 10 out of: 65
sorted: 11 out of: 65
sorted: 12 out of: 65
sorted: 13 out of: 65
sorted: 14 out of: 65
sorted: 15 out of: 65
sorted: 16 out of: 65
sorted: 17 out of: 65
sorted: 18 out of: 65
sorted: 19 out of: 65
sorted: 20 out of: 65
sorted: 21 out of: 65
sorted: 22 out of: 65
sorted: 23 out of: 65
sorted: 24 out of: 65
sorted: 25 out of: 65
sorted: 26 out of: 65
sorted: 27 out of: 65
sorted: 28 out of: 65
sorted: 29 out of: 65
sorted: 30 out of: 65
sorted: 31 out of: 65
sorted: 32 out of: 65
sorted: 33 out of: 65
sorted: 34 out of: 65
sorted: 35 out of: 65
sorted: 36 out of: 65
sorted: 37 out of: 65
sorted: 38 out of: 65
sorted: 39 out of: 65
sorted: 40 out of: 65
sorted: 41 out of: 65
sorted: 42 out of: 65
sorted: 43 out of: 65
sorted: 44 out of: 65
sorted: 45 out of: 65
sorted: 46 out of: 65
sorted: 47 out of: 65
sorted: 48 out of: 65
sorted: 49 out of: 65
sorted: 50 out of: 65
sorted: 51 out of: 65
sorted: 52 out of: 65
sorted: 53 out of: 65
sorted: 54 out of: 65
sorted: 55 out of: 65
sorted: 56 out of: 65
sorted: 57 out of: 65
sorted: 58 out of: 65
sorted: 59 out of: 65
sorted: 60 out of: 65
sorted: 61 out of: 65
sorted: 62 out of: 65
sorted: 63 out of: 65
sorted: 64 out of: 65
sorted: 65 out of: 65
Cluster size: 65
there were : 64 values
sorted: 1 out of: 64
sorted: 2 out of: 64
sorted: 3 out of: 64
sorted: 4 out of: 64
sorted: 5 out of: 64
sorted: 6 out of: 64
sorted: 7 out of: 64
sorted: 8 out of: 64
sorted: 9 out of: 64
sorted: 10 out of: 64
sorted: 11 out of: 64
sorted: 12 out of: 64
sorted: 13 out of: 64
sorted: 14 out of: 64
sorted: 15 out of: 64
sorted: 16 out of: 64
sorted: 17 out of: 64
sorted: 18 out of: 64
sorted: 19 out of: 64
sorted: 20 out of: 64
sorted: 21 out of: 64
sorted: 22 out of: 64
sorted: 23 out of: 64
sorted: 24 out of: 64
sorted: 25 out of: 64
sorted: 26 out of: 64
sorted: 27 out of: 64
sorted: 28 out of: 64
sorted: 29 out of: 64
sorted: 30 out of: 64
sorted: 31 out of: 64
sorted: 32 out of: 64
sorted: 33 out of: 64
sorted: 34 out of: 64
sorted: 35 out of: 64
sorted: 36 out of: 64
sorted: 37 out of: 64
sorted: 38 out of: 64
sorted: 39 out of: 64
sorted: 40 out of: 64
sorted: 41 out of: 64
sorted: 42 out of: 64
sorted: 43 out of: 64
sorted: 44 out of: 64
sorted: 45 out of: 64
sorted: 46 out of: 64
sorted: 47 out of: 64
sorted: 48 out of: 64
sorted: 49 out of: 64
sorted: 50 out of: 64
sorted: 51 out of: 64
sorted: 52 out of: 64
sorted: 53 out of: 64
sorted: 54 out of: 64
sorted: 55 out of: 64
sorted: 56 out of: 64
sorted: 57 out of: 64
sorted: 58 out of: 64
sorted: 59 out of: 64
sorted: 60 out of: 64
sorted: 61 out of: 64
sorted: 62 out of: 64
sorted: 63 out of: 64
sorted: 64 out of: 64
Cluster size: 64
there were : 57 values
sorted: 1 out of: 57
sorted: 2 out of: 57
sorted: 3 out of: 57
sorted: 4 out of: 57
sorted: 5 out of: 57
sorted: 6 out of: 57
sorted: 7 out of: 57
sorted: 8 out of: 57
sorted: 9 out of: 57
sorted: 10 out of: 57
sorted: 11 out of: 57
sorted: 12 out of: 57
sorted: 13 out of: 57
sorted: 14 out of: 57
sorted: 15 out of: 57
sorted: 16 out of: 57
sorted: 17 out of: 57
sorted: 18 out of: 57
sorted: 19 out of: 57
sorted: 20 out of: 57
sorted: 21 out of: 57
sorted: 22 out of: 57
sorted: 23 out of: 57
sorted: 24 out of: 57
sorted: 25 out of: 57
sorted: 26 out of: 57
sorted: 27 out of: 57
sorted: 28 out of: 57
sorted: 29 out of: 57
sorted: 30 out of: 57
sorted: 31 out of: 57
sorted: 32 out of: 57
sorted: 33 out of: 57
sorted: 34 out of: 57
sorted: 35 out of: 57
sorted: 36 out of: 57
sorted: 37 out of: 57
sorted: 38 out of: 57
sorted: 39 out of: 57
sorted: 40 out of: 57
sorted: 41 out of: 57
sorted: 42 out of: 57
sorted: 43 out of: 57
sorted: 44 out of: 57
sorted: 45 out of: 57
sorted: 46 out of: 57
sorted: 47 out of: 57
sorted: 48 out of: 57
sorted: 49 out of: 57
sorted: 50 out of: 57
sorted: 51 out of: 57
sorted: 52 out of: 57
sorted: 53 out of: 57
sorted: 54 out of: 57
sorted: 55 out of: 57
sorted: 56 out of: 57
sorted: 57 out of: 57
Cluster size: 57
there were : 54 values
sorted: 1 out of: 54
sorted: 2 out of: 54
sorted: 3 out of: 54
sorted: 4 out of: 54
sorted: 5 out of: 54
sorted: 6 out of: 54
sorted: 7 out of: 54
sorted: 8 out of: 54
sorted: 9 out of: 54
sorted: 10 out of: 54
sorted: 11 out of: 54
sorted: 12 out of: 54
sorted: 13 out of: 54
sorted: 14 out of: 54
sorted: 15 out of: 54
sorted: 16 out of: 54
sorted: 17 out of: 54
sorted: 18 out of: 54
sorted: 19 out of: 54
sorted: 20 out of: 54
sorted: 21 out of: 54
sorted: 22 out of: 54
sorted: 23 out of: 54
sorted: 24 out of: 54
sorted: 25 out of: 54
sorted: 26 out of: 54
sorted: 27 out of: 54
sorted: 28 out of: 54
sorted: 29 out of: 54
sorted: 30 out of: 54
sorted: 31 out of: 54
sorted: 32 out of: 54
sorted: 33 out of: 54
sorted: 34 out of: 54
sorted: 35 out of: 54
sorted: 36 out of: 54
sorted: 37 out of: 54
sorted: 38 out of: 54
sorted: 39 out of: 54
sorted: 40 out of: 54
sorted: 41 out of: 54
sorted: 42 out of: 54
sorted: 43 out of: 54
sorted: 44 out of: 54
sorted: 45 out of: 54
sorted: 46 out of: 54
sorted: 47 out of: 54
sorted: 48 out of: 54
sorted: 49 out of: 54
sorted: 50 out of: 54
sorted: 51 out of: 54
sorted: 52 out of: 54
sorted: 53 out of: 54
sorted: 54 out of: 54
Cluster size: 54
there were : 48 values
sorted: 1 out of: 48
sorted: 2 out of: 48
sorted: 3 out of: 48
sorted: 4 out of: 48
sorted: 5 out of: 48
sorted: 6 out of: 48
sorted: 7 out of: 48
sorted: 8 out of: 48
sorted: 9 out of: 48
sorted: 10 out of: 48
sorted: 11 out of: 48
sorted: 12 out of: 48
sorted: 13 out of: 48
sorted: 14 out of: 48
sorted: 15 out of: 48
sorted: 16 out of: 48
sorted: 17 out of: 48
sorted: 18 out of: 48
sorted: 19 out of: 48
sorted: 20 out of: 48
sorted: 21 out of: 48
sorted: 22 out of: 48
sorted: 23 out of: 48
sorted: 24 out of: 48
sorted: 25 out of: 48
sorted: 26 out of: 48
sorted: 27 out of: 48
sorted: 28 out of: 48
sorted: 29 out of: 48
sorted: 30 out of: 48
sorted: 31 out of: 48
sorted: 32 out of: 48
sorted: 33 out of: 48
sorted: 34 out of: 48
sorted: 35 out of: 48
sorted: 36 out of: 48
sorted: 37 out of: 48
sorted: 38 out of: 48
sorted: 39 out of: 48
sorted: 40 out of: 48
sorted: 41 out of: 48
sorted: 42 out of: 48
sorted: 43 out of: 48
sorted: 44 out of: 48
sorted: 45 out of: 48
sorted: 46 out of: 48
sorted: 47 out of: 48
sorted: 48 out of: 48
Cluster size: 48
there were : 44 values
sorted: 1 out of: 44
sorted: 2 out of: 44
sorted: 3 out of: 44
sorted: 4 out of: 44
sorted: 5 out of: 44
sorted: 6 out of: 44
INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';278;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';278;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\0LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Approve application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Cancel application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Cancel application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check if home insurance quote is requested)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Check if home insurance quote is requested)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application canceled)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application canceled)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan application rejected)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan application rejected)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Prepare acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Prepare acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Reject application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Reject application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Verify repayment agreement)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Verify repayment agreement)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Appraise property)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check  application  form completeness)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check credit history)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check if home insurance quote is requested)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application received)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Prepare acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Receive updated application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Return application back to applicant)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Verify repayment agreement)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Approve application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Cancel application)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Cancel application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Check if home insurance quote is requested)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Check if home insurance quote is requested)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application approved)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application canceled)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application canceled)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan application rejected)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan application rejected)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Prepare acceptance pack)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Prepare acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Reject application)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Reject application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send acceptance pack)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send home insurance quote)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Verify repayment agreement)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Verify repayment agreement)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Appraise property)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess loan risk)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check  application  form completeness)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check credit history)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application received)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Cancel application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application canceled)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan application rejected)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan application rejected)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Reject application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Reject application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send home insurance quote)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Appraise property)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess loan risk)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check  application  form completeness)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check credit history)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application received)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application received)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application received)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Cancel application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan application rejected)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Reject application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Reject application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Appraise property)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Check  application  form completeness)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application received)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Send acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Send home insurance quote)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Cancel application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check  application  form completeness)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application canceled)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send home insurance quote)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Appraise property)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess loan risk)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check  application  form completeness)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check credit history)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application received)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check  application  form completeness)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send home insurance quote)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotCoExistence(Send acceptance pack,  Appraise property)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess loan risk)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check  application  form completeness)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check credit history)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check if home insurance quote is requested)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application received)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Prepare acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Verify repayment agreement)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Verify repayment agreement)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send acceptance pack,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotCoExistence(Send home insurance quote,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send home insurance quote,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application received)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';188;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';188;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\1LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Send home insurance quote,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send home insurance quote,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send home insurance quote,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send home insurance quote,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send home insurance quote,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send home insurance quote,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Cancel application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Cancel application)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application canceled)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application canceled)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Receive updated application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Return application back to applicant)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send home insurance quote)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Cancel application)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Cancel application)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application canceled)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application canceled)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Send home insurance quote)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send home insurance quote)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Appraise property)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess loan risk)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check credit history)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application received)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Send acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Send acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Send home insurance quote)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Cancel application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application canceled)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application canceled)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send home insurance quote)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Send acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess loan risk)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check credit history)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotSuccession(Send acceptance pack,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Cancel application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Cancel application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Cancel application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application canceled)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application canceled)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application canceled)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Cancel application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application canceled)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';181;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';181;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\2LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check if home insurance quote is requested)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Prepare acceptance pack)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Verify repayment agreement)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Check if home insurance quote is requested)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Prepare acceptance pack)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Verify repayment agreement)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Check if home insurance quote is requested)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Prepare acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Verify repayment agreement)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% AtMostOne(Check if home insurance quote is requested)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Verify repayment agreement)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% AtMostOne(Prepare acceptance pack)                                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Check if home insurance quote is requested)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Verify repayment agreement)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% AtMostOne(Verify repayment agreement)                                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';180;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';180;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\3LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% Participation(Approve application)                                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess eligibility)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Send acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% Participation(Cancel application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess eligibility)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Approve application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Cancel application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application approved)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application canceled)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Send home insurance quote)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotSuccession(Check if home insurance quote is requested,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% End(Loan  application approved)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application approved)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% End(Loan  application canceled)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application canceled)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotSuccession(Prepare acceptance pack,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% Participation(Send acceptance pack)                                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% Participation(Send home insurance quote)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check if home insurance quote is requested)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Prepare acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Verify repayment agreement)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';163;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';163;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\4LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Approve application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Approve application,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Approve application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% AtMostOne(Approve application)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Approve application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Approve application,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Approve application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Approve application,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Approve application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Approve application,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Receive updated application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Receive updated application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Reject application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Return application back to applicant)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Return application back to applicant)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Approve application)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application approved)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% AtMostOne(Loan  application approved)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';163;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';163;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\5LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% AtMostOne(Cancel application)                                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Cancel application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Cancel application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Cancel application,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application received)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Reject application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Cancel application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application canceled)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% AtMostOne(Loan  application canceled)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';96;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';96;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\6LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check credit history,  Appraise property)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		100.000% AlternatePrecedence(Loan  application received,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Loan  application received,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Appraise property,  Check credit history)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Appraise property,  Check credit history)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check  application  form completeness,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		100.000% AlternatePrecedence(Loan  application received,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		100.000% AlternatePrecedence(Loan  application received,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% Succession(Appraise property,  Check credit history)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Check credit history)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check credit history)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check credit history)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Check credit history)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check credit history)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotChainSuccession(Assess loan risk,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Reject application)                                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AtMostOne(Check  application  form completeness)                                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% Succession(Check credit history,  Appraise property)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Appraise property)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Appraise property)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Receive updated application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check if home insurance quote is requested)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Prepare acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Verify repayment agreement)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Reject application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Reject application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Reject application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';88;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';88;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\7LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Send acceptance pack,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send acceptance pack,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send acceptance pack,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Verify repayment agreement)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send acceptance pack,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Send acceptance pack)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check credit history)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';84;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';84;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\8LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Reject application,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Reject application,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Reject application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Reject application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan application rejected)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Reject application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% AtMostOne(Loan application rejected)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% AtMostOne(Reject application)                                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess loan risk)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess loan risk)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check  application  form completeness)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check  application  form completeness)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan  application received)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application received)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Reject application,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Reject application,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Reject application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Reject application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Reject application,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Reject application,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';84;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';84;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\9LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Receive updated application,  Appraise property)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Approve application] => {
		100.000% Precedence(Receive updated application,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Receive updated application,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		100.000% Precedence(Receive updated application,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		100.000% Precedence(Receive updated application,  Check  application  form completeness)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Receive updated application,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Receive updated application,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Receive updated application,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Receive updated application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Receive updated application,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		100.000% Precedence(Receive updated application,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		100.000% Precedence(Receive updated application,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% Precedence(Receive updated application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Receive updated application,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Receive updated application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Receive updated application,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% Participation(Receive updated application)                                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% Participation(Return application back to applicant)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess loan risk)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';78;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';78;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\10LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		100.000% Precedence(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% Response(Check  application  form completeness,  Receive updated application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check  application  form completeness,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Receive updated application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Return application back to applicant)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check  application  form completeness)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Return application back to applicant,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';74;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';74;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\11LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send acceptance pack)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send acceptance pack)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% AtMostOne(Send acceptance pack)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send acceptance pack,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';74;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';74;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\12LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send home insurance quote)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send home insurance quote)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% AtMostOne(Send home insurance quote)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send home insurance quote,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';65;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';65;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\13LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Assess loan risk,  Appraise property)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess loan risk,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check credit history,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% ChainPrecedence(Appraise property,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% ChainSuccession(Appraise property,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess loan risk)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Assess loan risk)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% Succession(Assess loan risk,  Appraise property)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Appraise property)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Appraise property)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainResponse(Check  application  form completeness,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% ChainSuccession(Check credit history,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% End(Loan application rejected)                                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan application rejected)                                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Receive updated application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Return application back to applicant)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Reject application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% Participation(Reject application)                                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan application rejected)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';64;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';64;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\14LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Cancel application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Cancel application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application canceled)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application canceled)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Approve application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainResponse(Check  application  form completeness,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% Participation(Check if home insurance quote is requested)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% Participation(Prepare acceptance pack)                                                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% Participation(Verify repayment agreement)                                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';57;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';57;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\15LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Check if home insurance quote is requested)       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Prepare acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';54;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';54;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\16LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Appraise property,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Receive updated application,  Assess eligibility)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess eligibility)             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess eligibility)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Appraise property] => {
		100.000% ChainSuccession(Appraise property,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% RespondedExistence(Approve application,  Assess eligibility)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess eligibility)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Send home insurance quote)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send home insurance quote)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send home insurance quote)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotChainSuccession(Assess loan risk,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% RespondedExistence(Cancel application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% RespondedExistence(Loan  application approved,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% RespondedExistence(Loan  application canceled,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AlternateSuccession(Receive updated application,  Assess eligibility)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AlternateSuccession(Return application back to applicant,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess eligibility)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% RespondedExistence(Send acceptance pack,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess eligibility)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% RespondedExistence(Send home insurance quote,  Assess eligibility)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess eligibility)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';48;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';48;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\17LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Reject application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Receive updated application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Return application back to applicant)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';44;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';44;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\18LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Assess eligibility,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Assess eligibility,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Assess eligibility,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Assess eligibility,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Assess eligibility,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Assess eligibility,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		100.000% Precedence(Assess eligibility,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess eligibility,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		100.000% Precedence(Assess eligibility,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess eligibility,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Assess eligibility,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Assess eligibility,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Assess eligibility,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Assess eligibility)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% Participation(Assess eligibility)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Assess eligibility)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Assess eligibility)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Assess eligibility)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Assess eligibility)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Assess eligibility)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Assess eligibility)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';41;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';41;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\19LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Receive updated application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Return application back to applicant)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Return application back to applicant)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotChainSuccession(Loan  application received,  Check  application  form completeness)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AtMostOne(Receive updated application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Receive updated application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AtMostOne(Return application back to applicant)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess loan risk)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check  application  form completeness)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check credit history)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';41;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';41;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\20LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotSuccession(Assess eligibility,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Prepare acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess eligibility)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Assess eligibility)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess eligibility)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotCoExistence(Send acceptance pack,  Assess eligibility)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotCoExistence(Send home insurance quote,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';40;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';40;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\21LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainSuccession(Check  application  form completeness,  Appraise property)        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Check credit history)     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan application rejected)     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Reject application)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan application rejected)       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess loan risk)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check  application  form completeness)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Loan  application received)                      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';33;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';33;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\22LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Assess eligibility)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Assess eligibility)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% AtMostOne(Assess eligibility)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Assess eligibility)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Assess eligibility)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Assess eligibility)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Assess eligibility)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Assess eligibility)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';33;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';33;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\23LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Assess eligibility] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess eligibility)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Assess eligibility)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess eligibility)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Assess eligibility)          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess eligibility)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';28;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';28;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\24LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Assess eligibility] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Reject application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Assess eligibility)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Assess eligibility)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Assess eligibility)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess eligibility)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';25;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';25;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\25LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Cancel application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';22;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';22;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\26LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Appraise property,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% Succession(Appraise property,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Assess loan risk)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotChainSuccession(Assess loan risk,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Appraise property)                                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Appraise property)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Appraise property)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess loan risk)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check credit history)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotChainSuccession(Check credit history,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Loan  application received,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';19;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';19;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\27LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Assess eligibility)                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Prepare acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotCoExistence(Assess eligibility,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Assess eligibility)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Assess eligibility)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Assess eligibility)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Assess eligibility)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';15;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';15;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\28LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Assess eligibility] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% RespondedExistence(Loan application rejected,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess eligibility)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% RespondedExistence(Reject application,  Assess eligibility)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess eligibility)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';10;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';10;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\29LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Assess eligibility] => {
		100.000% Precedence(Appraise property,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Assess eligibility)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess loan risk,  Assess eligibility)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check  application  form completeness,  Assess eligibility)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check  application  form completeness,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check credit history,  Assess eligibility)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Loan  application received,  Assess eligibility)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Assess eligibility)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		
	}

	[Assess loan risk] => {
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';6;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';6;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\30LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Prepare acceptance pack] => {
		100.000% ChainPrecedence(Appraise property,  Prepare acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		100.000% ChainPrecedence(Appraise property,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		
	}

	[Assess loan risk] => {
		100.000% ChainSuccession(Assess loan risk,  Prepare acceptance pack)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Prepare acceptance pack)       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Reject application)            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';4;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';4;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\31LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Assess eligibility] => {
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Assess eligibility)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% ChainSuccession(Assess loan risk,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Assess eligibility)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';2;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';2;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\32LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Prepare acceptance pack] => {
		100.000% ChainPrecedence(Assess loan risk,  Prepare acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		100.000% ChainPrecedence(Assess loan risk,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';1;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';1;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS13_GRADUAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\33LS13_GRADUAL_100_50_ward_euclidean_300_distance.csv...

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Assess loan risk,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		
	}

sorted: 7 out of: 44
sorted: 8 out of: 44
sorted: 9 out of: 44
sorted: 10 out of: 44
sorted: 11 out of: 44
sorted: 12 out of: 44
sorted: 13 out of: 44
sorted: 14 out of: 44
sorted: 15 out of: 44
sorted: 16 out of: 44
sorted: 17 out of: 44
sorted: 18 out of: 44
sorted: 19 out of: 44
sorted: 20 out of: 44
sorted: 21 out of: 44
sorted: 22 out of: 44
sorted: 23 out of: 44
sorted: 24 out of: 44
sorted: 25 out of: 44
sorted: 26 out of: 44
sorted: 27 out of: 44
sorted: 28 out of: 44
sorted: 29 out of: 44
sorted: 30 out of: 44
sorted: 31 out of: 44
sorted: 32 out of: 44
sorted: 33 out of: 44
sorted: 34 out of: 44
sorted: 35 out of: 44
sorted: 36 out of: 44
sorted: 37 out of: 44
sorted: 38 out of: 44
sorted: 39 out of: 44
sorted: 40 out of: 44
sorted: 41 out of: 44
sorted: 42 out of: 44
sorted: 43 out of: 44
sorted: 44 out of: 44
Cluster size: 44
there were : 41 values
sorted: 1 out of: 41
sorted: 2 out of: 41
sorted: 3 out of: 41
sorted: 4 out of: 41
sorted: 5 out of: 41
sorted: 6 out of: 41
sorted: 7 out of: 41
sorted: 8 out of: 41
sorted: 9 out of: 41
sorted: 10 out of: 41
sorted: 11 out of: 41
sorted: 12 out of: 41
sorted: 13 out of: 41
sorted: 14 out of: 41
sorted: 15 out of: 41
sorted: 16 out of: 41
sorted: 17 out of: 41
sorted: 18 out of: 41
sorted: 19 out of: 41
sorted: 20 out of: 41
sorted: 21 out of: 41
sorted: 22 out of: 41
sorted: 23 out of: 41
sorted: 24 out of: 41
sorted: 25 out of: 41
sorted: 26 out of: 41
sorted: 27 out of: 41
sorted: 28 out of: 41
sorted: 29 out of: 41
sorted: 30 out of: 41
sorted: 31 out of: 41
sorted: 32 out of: 41
sorted: 33 out of: 41
sorted: 34 out of: 41
sorted: 35 out of: 41
sorted: 36 out of: 41
sorted: 37 out of: 41
sorted: 38 out of: 41
sorted: 39 out of: 41
sorted: 40 out of: 41
sorted: 41 out of: 41
Cluster size: 41
there were : 41 values
sorted: 1 out of: 41
sorted: 2 out of: 41
sorted: 3 out of: 41
sorted: 4 out of: 41
sorted: 5 out of: 41
sorted: 6 out of: 41
sorted: 7 out of: 41
sorted: 8 out of: 41
sorted: 9 out of: 41
sorted: 10 out of: 41
sorted: 11 out of: 41
sorted: 12 out of: 41
sorted: 13 out of: 41
sorted: 14 out of: 41
sorted: 15 out of: 41
sorted: 16 out of: 41
sorted: 17 out of: 41
sorted: 18 out of: 41
sorted: 19 out of: 41
sorted: 20 out of: 41
sorted: 21 out of: 41
sorted: 22 out of: 41
sorted: 23 out of: 41
sorted: 24 out of: 41
sorted: 25 out of: 41
sorted: 26 out of: 41
sorted: 27 out of: 41
sorted: 28 out of: 41
sorted: 29 out of: 41
sorted: 30 out of: 41
sorted: 31 out of: 41
sorted: 32 out of: 41
sorted: 33 out of: 41
sorted: 34 out of: 41
sorted: 35 out of: 41
sorted: 36 out of: 41
sorted: 37 out of: 41
sorted: 38 out of: 41
sorted: 39 out of: 41
sorted: 40 out of: 41
sorted: 41 out of: 41
Cluster size: 41
there were : 40 values
sorted: 1 out of: 40
sorted: 2 out of: 40
sorted: 3 out of: 40
sorted: 4 out of: 40
sorted: 5 out of: 40
sorted: 6 out of: 40
sorted: 7 out of: 40
sorted: 8 out of: 40
sorted: 9 out of: 40
sorted: 10 out of: 40
sorted: 11 out of: 40
sorted: 12 out of: 40
sorted: 13 out of: 40
sorted: 14 out of: 40
sorted: 15 out of: 40
sorted: 16 out of: 40
sorted: 17 out of: 40
sorted: 18 out of: 40
sorted: 19 out of: 40
sorted: 20 out of: 40
sorted: 21 out of: 40
sorted: 22 out of: 40
sorted: 23 out of: 40
sorted: 24 out of: 40
sorted: 25 out of: 40
sorted: 26 out of: 40
sorted: 27 out of: 40
sorted: 28 out of: 40
sorted: 29 out of: 40
sorted: 30 out of: 40
sorted: 31 out of: 40
sorted: 32 out of: 40
sorted: 33 out of: 40
sorted: 34 out of: 40
sorted: 35 out of: 40
sorted: 36 out of: 40
sorted: 37 out of: 40
sorted: 38 out of: 40
sorted: 39 out of: 40
sorted: 40 out of: 40
Cluster size: 40
there were : 33 values
sorted: 1 out of: 33
sorted: 2 out of: 33
sorted: 3 out of: 33
sorted: 4 out of: 33
sorted: 5 out of: 33
sorted: 6 out of: 33
sorted: 7 out of: 33
sorted: 8 out of: 33
sorted: 9 out of: 33
sorted: 10 out of: 33
sorted: 11 out of: 33
sorted: 12 out of: 33
sorted: 13 out of: 33
sorted: 14 out of: 33
sorted: 15 out of: 33
sorted: 16 out of: 33
sorted: 17 out of: 33
sorted: 18 out of: 33
sorted: 19 out of: 33
sorted: 20 out of: 33
sorted: 21 out of: 33
sorted: 22 out of: 33
sorted: 23 out of: 33
sorted: 24 out of: 33
sorted: 25 out of: 33
sorted: 26 out of: 33
sorted: 27 out of: 33
sorted: 28 out of: 33
sorted: 29 out of: 33
sorted: 30 out of: 33
sorted: 31 out of: 33
sorted: 32 out of: 33
sorted: 33 out of: 33
Cluster size: 33
there were : 33 values
sorted: 1 out of: 33
sorted: 2 out of: 33
sorted: 3 out of: 33
sorted: 4 out of: 33
sorted: 5 out of: 33
sorted: 6 out of: 33
sorted: 7 out of: 33
sorted: 8 out of: 33
sorted: 9 out of: 33
sorted: 10 out of: 33
sorted: 11 out of: 33
sorted: 12 out of: 33
sorted: 13 out of: 33
sorted: 14 out of: 33
sorted: 15 out of: 33
sorted: 16 out of: 33
sorted: 17 out of: 33
sorted: 18 out of: 33
sorted: 19 out of: 33
sorted: 20 out of: 33
sorted: 21 out of: 33
sorted: 22 out of: 33
sorted: 23 out of: 33
sorted: 24 out of: 33
sorted: 25 out of: 33
sorted: 26 out of: 33
sorted: 27 out of: 33
sorted: 28 out of: 33
sorted: 29 out of: 33
sorted: 30 out of: 33
sorted: 31 out of: 33
sorted: 32 out of: 33
sorted: 33 out of: 33
Cluster size: 33
there were : 28 values
sorted: 1 out of: 28
sorted: 2 out of: 28
sorted: 3 out of: 28
sorted: 4 out of: 28
sorted: 5 out of: 28
sorted: 6 out of: 28
sorted: 7 out of: 28
sorted: 8 out of: 28
sorted: 9 out of: 28
sorted: 10 out of: 28
sorted: 11 out of: 28
sorted: 12 out of: 28
sorted: 13 out of: 28
sorted: 14 out of: 28
sorted: 15 out of: 28
sorted: 16 out of: 28
sorted: 17 out of: 28
sorted: 18 out of: 28
sorted: 19 out of: 28
sorted: 20 out of: 28
sorted: 21 out of: 28
sorted: 22 out of: 28
sorted: 23 out of: 28
sorted: 24 out of: 28
sorted: 25 out of: 28
sorted: 26 out of: 28
sorted: 27 out of: 28
sorted: 28 out of: 28
Cluster size: 28
there were : 25 values
sorted: 1 out of: 25
sorted: 2 out of: 25
sorted: 3 out of: 25
sorted: 4 out of: 25
sorted: 5 out of: 25
sorted: 6 out of: 25
sorted: 7 out of: 25
sorted: 8 out of: 25
sorted: 9 out of: 25
sorted: 10 out of: 25
sorted: 11 out of: 25
sorted: 12 out of: 25
sorted: 13 out of: 25
sorted: 14 out of: 25
sorted: 15 out of: 25
sorted: 16 out of: 25
sorted: 17 out of: 25
sorted: 18 out of: 25
sorted: 19 out of: 25
sorted: 20 out of: 25
sorted: 21 out of: 25
sorted: 22 out of: 25
sorted: 23 out of: 25
sorted: 24 out of: 25
sorted: 25 out of: 25
Cluster size: 25
there were : 22 values
sorted: 1 out of: 22
sorted: 2 out of: 22
sorted: 3 out of: 22
sorted: 4 out of: 22
sorted: 5 out of: 22
sorted: 6 out of: 22
sorted: 7 out of: 22
sorted: 8 out of: 22
sorted: 9 out of: 22
sorted: 10 out of: 22
sorted: 11 out of: 22
sorted: 12 out of: 22
sorted: 13 out of: 22
sorted: 14 out of: 22
sorted: 15 out of: 22
sorted: 16 out of: 22
sorted: 17 out of: 22
sorted: 18 out of: 22
sorted: 19 out of: 22
sorted: 20 out of: 22
sorted: 21 out of: 22
sorted: 22 out of: 22
Cluster size: 22
there were : 19 values
sorted: 1 out of: 19
sorted: 2 out of: 19
sorted: 3 out of: 19
sorted: 4 out of: 19
sorted: 5 out of: 19
sorted: 6 out of: 19
sorted: 7 out of: 19
sorted: 8 out of: 19
sorted: 9 out of: 19
sorted: 10 out of: 19
sorted: 11 out of: 19
sorted: 12 out of: 19
sorted: 13 out of: 19
sorted: 14 out of: 19
sorted: 15 out of: 19
sorted: 16 out of: 19
sorted: 17 out of: 19
sorted: 18 out of: 19
sorted: 19 out of: 19
Cluster size: 19
there were : 15 values
sorted: 1 out of: 15
sorted: 2 out of: 15
sorted: 3 out of: 15
sorted: 4 out of: 15
sorted: 5 out of: 15
sorted: 6 out of: 15
sorted: 7 out of: 15
sorted: 8 out of: 15
sorted: 9 out of: 15
sorted: 10 out of: 15
sorted: 11 out of: 15
sorted: 12 out of: 15
sorted: 13 out of: 15
sorted: 14 out of: 15
sorted: 15 out of: 15
Cluster size: 15
there were : 10 values
sorted: 1 out of: 10
sorted: 2 out of: 10
sorted: 3 out of: 10
sorted: 4 out of: 10
sorted: 5 out of: 10
sorted: 6 out of: 10
sorted: 7 out of: 10
sorted: 8 out of: 10
sorted: 9 out of: 10
sorted: 10 out of: 10
Cluster size: 10
there were : 6 values
sorted: 1 out of: 6
sorted: 2 out of: 6
sorted: 3 out of: 6
sorted: 4 out of: 6
sorted: 5 out of: 6
sorted: 6 out of: 6
Cluster size: 6
there were : 4 values
sorted: 1 out of: 4
sorted: 2 out of: 4
sorted: 3 out of: 4
sorted: 4 out of: 4
Cluster size: 4
there were : 2 values
sorted: 1 out of: 2
sorted: 2 out of: 2
Cluster size: 2
there were : 1 values
sorted: 1 out of: 1
Cluster size: 1
number of clusters: 34
x lines: 
[10, 15, 45, 60, 89]
clusters were ordered in the : 
[2, 8, 28, 3, 16, 12, 31, 7, 29, 20, 30, 17, 13, 18, 14, 10, 24, 15, 27, 11, 6, 9, 26, 23, 25, 1, 32, 5, 22, 33, 4, 21, 19, 34]
- - - start drawing drift map
- - - start processing the timeseries in clusters
without DRIFT: 88
current DRIFT (curve length): 89.57184940980684
current DRIFT (polyine length): 99.88181972364025
without DRIFT: 88
current DRIFT (curve length): 95.96935784576343
current DRIFT (polyine length): 144.33209086305638
without DRIFT: 88
current DRIFT (curve length): 134.4112922670423
current DRIFT (polyine length): 307.60729881067766
without DRIFT: 88
current DRIFT (curve length): 91.28951706356739
current DRIFT (polyine length): 116.51522716970227
without DRIFT: 88
current DRIFT (curve length): 121.11147748901712
current DRIFT (polyine length): 273.37370833180427
without DRIFT: 88
current DRIFT (curve length): 135.75147848005344
current DRIFT (polyine length): 326.07851546439855
without DRIFT: 88
current DRIFT (curve length): 94.77914064397376
current DRIFT (polyine length): 150.91846833187032
without DRIFT: 88
current DRIFT (curve length): 101.4419967423974
current DRIFT (polyine length): 170.48312882562234
without DRIFT: 88
current DRIFT (curve length): 134.1463302353601
current DRIFT (polyine length): 308.1812410784541
without DRIFT: 88
current DRIFT (curve length): 138.66737909213884
current DRIFT (polyine length): 327.2359249846061
without DRIFT: 88
current DRIFT (curve length): 145.08091528836655
current DRIFT (polyine length): 345.6287368691191
without DRIFT: 88
current DRIFT (curve length): 120.64908008378961
current DRIFT (polyine length): 257.71375492828656
without DRIFT: 88
current DRIFT (curve length): 126.55235064705633
current DRIFT (polyine length): 289.91405009583605
without DRIFT: 88
current DRIFT (curve length): 101.53879503109057
current DRIFT (polyine length): 206.47036364084045
without DRIFT: 88
current DRIFT (curve length): 107.08158901020985
current DRIFT (polyine length): 206.12045304316706
without DRIFT: 88
current DRIFT (curve length): 141.65443706056504
current DRIFT (polyine length): 337.7033796965154
without DRIFT: 88
current DRIFT (curve length): 156.15805301851753
current DRIFT (polyine length): 200.72325963656633
without DRIFT: 88
current DRIFT (curve length): 117.24744496927796
current DRIFT (polyine length): 308.69898134697604
without DRIFT: 88
current DRIFT (curve length): 404.9232293146147
current DRIFT (polyine length): 418.1003637817767
without DRIFT: 88
current DRIFT (curve length): 151.73957395220663
current DRIFT (polyine length): 364.7604352854245
without DRIFT: 88
current DRIFT (curve length): 133.3379185538823
current DRIFT (polyine length): 160.64074225654178
without DRIFT: 88
current DRIFT (curve length): 137.4449444921422
current DRIFT (polyine length): 321.1763493614573
without DRIFT: 88
current DRIFT (curve length): 403.13083899913437
current DRIFT (polyine length): 415.04142472449
without DRIFT: 88
current DRIFT (curve length): 254.75169111422656
current DRIFT (polyine length): 340.2448871442352
without DRIFT: 88
current DRIFT (curve length): 188.3987347000874
current DRIFT (polyine length): 218.75771936057188
without DRIFT: 88
current DRIFT (curve length): 133.20758006148785
current DRIFT (polyine length): 320.894222253341
without DRIFT: 88
current DRIFT (curve length): 93.65425882477781
current DRIFT (polyine length): 139.45027829766613
without DRIFT: 88
current DRIFT (curve length): 122.96593777485946
current DRIFT (polyine length): 164.26933222997152
without DRIFT: 88
current DRIFT (curve length): 244.68951859928768
current DRIFT (polyine length): 364.1771763859849
without DRIFT: 88
current DRIFT (curve length): 424.5613551690649
current DRIFT (polyine length): 440.022471200906
without DRIFT: 88
current DRIFT (curve length): 160.79372922866654
current DRIFT (polyine length): 167.97325097191052
without DRIFT: 88
current DRIFT (curve length): 319.8716068115449
current DRIFT (polyine length): 400.0029937541109
without DRIFT: 88
current DRIFT (curve length): 317.93713554164884
current DRIFT (polyine length): 356.94671767228493
without DRIFT: 88
current DRIFT (curve length): 378.2899857830544
current DRIFT (polyine length): 579.0286773453831
