there are : 2841 values left after deleting 100, and 0s
there were: 2899 vectors with zeros removed
there were: 224 vectors with hundreds removed
there were: 0 vectors with non changing values removed
there were : 203 values
sorted: 1 out of: 203
sorted: 2 out of: 203
sorted: 3 out of: 203
sorted: 4 out of: 203
sorted: 5 out of: 203
sorted: 6 out of: 203
sorted: 7 out of: 203
sorted: 8 out of: 203
sorted: 9 out of: 203
sorted: 10 out of: 203
sorted: 11 out of: 203
sorted: 12 out of: 203
sorted: 13 out of: 203
sorted: 14 out of: 203
sorted: 15 out of: 203
sorted: 16 out of: 203
sorted: 17 out of: 203
sorted: 18 out of: 203
sorted: 19 out of: 203
sorted: 20 out of: 203
sorted: 21 out of: 203
sorted: 22 out of: 203
sorted: 23 out of: 203
sorted: 24 out of: 203
sorted: 25 out of: 203
sorted: 26 out of: 203
sorted: 27 out of: 203
sorted: 28 out of: 203
sorted: 29 out of: 203
sorted: 30 out of: 203
sorted: 31 out of: 203
sorted: 32 out of: 203
sorted: 33 out of: 203
sorted: 34 out of: 203
sorted: 35 out of: 203
sorted: 36 out of: 203
sorted: 37 out of: 203
sorted: 38 out of: 203
sorted: 39 out of: 203
sorted: 40 out of: 203
sorted: 41 out of: 203
sorted: 42 out of: 203
sorted: 43 out of: 203
sorted: 44 out of: 203
sorted: 45 out of: 203
sorted: 46 out of: 203
sorted: 47 out of: 203
sorted: 48 out of: 203
sorted: 49 out of: 203
sorted: 50 out of: 203
sorted: 51 out of: 203
sorted: 52 out of: 203
sorted: 53 out of: 203
sorted: 54 out of: 203
sorted: 55 out of: 203
sorted: 56 out of: 203
sorted: 57 out of: 203
sorted: 58 out of: 203
sorted: 59 out of: 203
sorted: 60 out of: 203
sorted: 61 out of: 203
sorted: 62 out of: 203
sorted: 63 out of: 203
sorted: 64 out of: 203
sorted: 65 out of: 203
sorted: 66 out of: 203
sorted: 67 out of: 203
sorted: 68 out of: 203
sorted: 69 out of: 203
sorted: 70 out of: 203
sorted: 71 out of: 203
sorted: 72 out of: 203
sorted: 73 out of: 203
sorted: 74 out of: 203
sorted: 75 out of: 203
sorted: 76 out of: 203
sorted: 77 out of: 203
sorted: 78 out of: 203
sorted: 79 out of: 203
sorted: 80 out of: 203
sorted: 81 out of: 203
sorted: 82 out of: 203
sorted: 83 out of: 203
sorted: 84 out of: 203
sorted: 85 out of: 203
sorted: 86 out of: 203
sorted: 87 out of: 203
sorted: 88 out of: 203
sorted: 89 out of: 203
sorted: 90 out of: 203
sorted: 91 out of: 203
sorted: 92 out of: 203
sorted: 93 out of: 203
sorted: 94 out of: 203
sorted: 95 out of: 203
sorted: 96 out of: 203
sorted: 97 out of: 203
sorted: 98 out of: 203
sorted: 99 out of: 203
sorted: 100 out of: 203
sorted: 101 out of: 203
sorted: 102 out of: 203
sorted: 103 out of: 203
sorted: 104 out of: 203
sorted: 105 out of: 203
sorted: 106 out of: 203
sorted: 107 out of: 203
sorted: 108 out of: 203
sorted: 109 out of: 203
sorted: 110 out of: 203
sorted: 111 out of: 203
sorted: 112 out of: 203
sorted: 113 out of: 203
sorted: 114 out of: 203
sorted: 115 out of: 203
sorted: 116 out of: 203
sorted: 117 out of: 203
sorted: 118 out of: 203
sorted: 119 out of: 203
sorted: 120 out of: 203
sorted: 121 out of: 203
sorted: 122 out of: 203
sorted: 123 out of: 203
sorted: 124 out of: 203
sorted: 125 out of: 203
sorted: 126 out of: 203
sorted: 127 out of: 203
sorted: 128 out of: 203
sorted: 129 out of: 203
sorted: 130 out of: 203
sorted: 131 out of: 203
sorted: 132 out of: 203
sorted: 133 out of: 203
sorted: 134 out of: 203
sorted: 135 out of: 203
sorted: 136 out of: 203
sorted: 137 out of: 203
sorted: 138 out of: 203
sorted: 139 out of: 203
sorted: 140 out of: 203
sorted: 141 out of: 203
sorted: 142 out of: 203
sorted: 143 out of: 203
sorted: 144 out of: 203
sorted: 145 out of: 203
sorted: 146 out of: 203
sorted: 147 out of: 203
sorted: 148 out of: 203
sorted: 149 out of: 203
sorted: 150 out of: 203
sorted: 151 out of: 203
sorted: 152 out of: 203
sorted: 153 out of: 203
sorted: 154 out of: 203
sorted: 155 out of: 203
sorted: 156 out of: 203
sorted: 157 out of: 203
sorted: 158 out of: 203
sorted: 159 out of: 203
sorted: 160 out of: 203
sorted: 161 out of: 203
sorted: 162 out of: 203
sorted: 163 out of: 203
sorted: 164 out of: 203
sorted: 165 out of: 203
sorted: 166 out of: 203
sorted: 167 out of: 203
sorted: 168 out of: 203
sorted: 169 out of: 203
sorted: 170 out of: 203
sorted: 171 out of: 203
sorted: 172 out of: 203
sorted: 173 out of: 203
sorted: 174 out of: 203
sorted: 175 out of: 203
sorted: 176 out of: 203
sorted: 177 out of: 203
sorted: 178 out of: 203
sorted: 179 out of: 203
sorted: 180 out of: 203
sorted: 181 out of: 203
sorted: 182 out of: 203
sorted: 183 out of: 203
sorted: 184 out of: 203
sorted: 185 out of: 203
sorted: 186 out of: 203
sorted: 187 out of: 203
sorted: 188 out of: 203
sorted: 189 out of: 203
sorted: 190 out of: 203
sorted: 191 out of: 203
sorted: 192 out of: 203
sorted: 193 out of: 203
sorted: 194 out of: 203
sorted: 195 out of: 203
sorted: 196 out of: 203
sorted: 197 out of: 203
sorted: 198 out of: 203
sorted: 199 out of: 203
sorted: 200 out of: 203
sorted: 201 out of: 203
sorted: 202 out of: 203
sorted: 203 out of: 203
Cluster size: 203
there were : 187 values
sorted: 1 out of: 187
sorted: 2 out of: 187
sorted: 3 out of: 187
sorted: 4 out of: 187
sorted: 5 out of: 187
sorted: 6 out of: 187
sorted: 7 out of: 187
sorted: 8 out of: 187
sorted: 9 out of: 187
sorted: 10 out of: 187
sorted: 11 out of: 187
sorted: 12 out of: 187
sorted: 13 out of: 187
sorted: 14 out of: 187
sorted: 15 out of: 187
sorted: 16 out of: 187
sorted: 17 out of: 187
sorted: 18 out of: 187
sorted: 19 out of: 187
sorted: 20 out of: 187
sorted: 21 out of: 187
sorted: 22 out of: 187
sorted: 23 out of: 187
sorted: 24 out of: 187
sorted: 25 out of: 187
sorted: 26 out of: 187
sorted: 27 out of: 187
sorted: 28 out of: 187
sorted: 29 out of: 187
sorted: 30 out of: 187
sorted: 31 out of: 187
sorted: 32 out of: 187
sorted: 33 out of: 187
sorted: 34 out of: 187
sorted: 35 out of: 187
sorted: 36 out of: 187
sorted: 37 out of: 187
sorted: 38 out of: 187
sorted: 39 out of: 187
sorted: 40 out of: 187
sorted: 41 out of: 187
sorted: 42 out of: 187
sorted: 43 out of: 187
sorted: 44 out of: 187
sorted: 45 out of: 187
sorted: 46 out of: 187
sorted: 47 out of: 187
sorted: 48 out of: 187
sorted: 49 out of: 187
sorted: 50 out of: 187
sorted: 51 out of: 187
sorted: 52 out of: 187
sorted: 53 out of: 187
sorted: 54 out of: 187
sorted: 55 out of: 187
sorted: 56 out of: 187
sorted: 57 out of: 187
sorted: 58 out of: 187
sorted: 59 out of: 187
sorted: 60 out of: 187
sorted: 61 out of: 187
sorted: 62 out of: 187
sorted: 63 out of: 187
sorted: 64 out of: 187
sorted: 65 out of: 187
sorted: 66 out of: 187
sorted: 67 out of: 187
sorted: 68 out of: 187
sorted: 69 out of: 187
sorted: 70 out of: 187
sorted: 71 out of: 187
sorted: 72 out of: 187
sorted: 73 out of: 187
sorted: 74 out of: 187
sorted: 75 out of: 187
sorted: 76 out of: 187
sorted: 77 out of: 187
sorted: 78 out of: 187
sorted: 79 out of: 187
sorted: 80 out of: 187
sorted: 81 out of: 187
sorted: 82 out of: 187
sorted: 83 out of: 187
sorted: 84 out of: 187
sorted: 85 out of: 187
sorted: 86 out of: 187
sorted: 87 out of: 187
sorted: 88 out of: 187
sorted: 89 out of: 187
sorted: 90 out of: 187
sorted: 91 out of: 187
sorted: 92 out of: 187
sorted: 93 out of: 187
sorted: 94 out of: 187
sorted: 95 out of: 187
sorted: 96 out of: 187
sorted: 97 out of: 187
sorted: 98 out of: 187
sorted: 99 out of: 187
sorted: 100 out of: 187
sorted: 101 out of: 187
sorted: 102 out of: 187
sorted: 103 out of: 187
sorted: 104 out of: 187
sorted: 105 out of: 187
sorted: 106 out of: 187
sorted: 107 out of: 187
sorted: 108 out of: 187
sorted: 109 out of: 187
sorted: 110 out of: 187
sorted: 111 out of: 187
sorted: 112 out of: 187
sorted: 113 out of: 187
sorted: 114 out of: 187
sorted: 115 out of: 187
sorted: 116 out of: 187
sorted: 117 out of: 187
sorted: 118 out of: 187
sorted: 119 out of: 187
sorted: 120 out of: 187
sorted: 121 out of: 187
sorted: 122 out of: 187
sorted: 123 out of: 187
sorted: 124 out of: 187
sorted: 125 out of: 187
sorted: 126 out of: 187
sorted: 127 out of: 187
sorted: 128 out of: 187
sorted: 129 out of: 187
sorted: 130 out of: 187
sorted: 131 out of: 187
sorted: 132 out of: 187
sorted: 133 out of: 187
sorted: 134 out of: 187
sorted: 135 out of: 187
sorted: 136 out of: 187
sorted: 137 out of: 187
sorted: 138 out of: 187
sorted: 139 out of: 187
sorted: 140 out of: 187
sorted: 141 out of: 187
sorted: 142 out of: 187
sorted: 143 out of: 187
sorted: 144 out of: 187
sorted: 145 out of: 187
sorted: 146 out of: 187
sorted: 147 out of: 187
sorted: 148 out of: 187
sorted: 149 out of: 187
sorted: 150 out of: 187
sorted: 151 out of: 187
sorted: 152 out of: 187
sorted: 153 out of: 187
sorted: 154 out of: 187
sorted: 155 out of: 187
sorted: 156 out of: 187
sorted: 157 out of: 187
sorted: 158 out of: 187
sorted: 159 out of: 187
sorted: 160 out of: 187
sorted: 161 out of: 187
sorted: 162 out of: 187
sorted: 163 out of: 187
sorted: 164 out of: 187
sorted: 165 out of: 187
sorted: 166 out of: 187
sorted: 167 out of: 187
sorted: 168 out of: 187
sorted: 169 out of: 187
sorted: 170 out of: 187
sorted: 171 out of: 187
sorted: 172 out of: 187
sorted: 173 out of: 187
sorted: 174 out of: 187
sorted: 175 out of: 187
sorted: 176 out of: 187
sorted: 177 out of: 187
sorted: 178 out of: 187
sorted: 179 out of: 187
sorted: 180 out of: 187
sorted: 181 out of: 187
sorted: 182 out of: 187
sorted: 183 out of: 187
sorted: 184 out of: 187
sorted: 185 out of: 187
sorted: 186 out of: 187
sorted: 187 out of: 187
Cluster size: 187
there were : 165 values
sorted: 1 out of: 165
sorted: 2 out of: 165
sorted: 3 out of: 165
sorted: 4 out of: 165
sorted: 5 out of: 165
sorted: 6 out of: 165
sorted: 7 out of: 165
sorted: 8 out of: 165
sorted: 9 out of: 165
sorted: 10 out of: 165
sorted: 11 out of: 165
sorted: 12 out of: 165
sorted: 13 out of: 165
sorted: 14 out of: 165
sorted: 15 out of: 165
sorted: 16 out of: 165
sorted: 17 out of: 165
sorted: 18 out of: 165
sorted: 19 out of: 165
sorted: 20 out of: 165
sorted: 21 out of: 165
sorted: 22 out of: 165
sorted: 23 out of: 165
sorted: 24 out of: 165
sorted: 25 out of: 165
sorted: 26 out of: 165
sorted: 27 out of: 165
sorted: 28 out of: 165
sorted: 29 out of: 165
sorted: 30 out of: 165
sorted: 31 out of: 165
sorted: 32 out of: 165
sorted: 33 out of: 165
sorted: 34 out of: 165
sorted: 35 out of: 165
sorted: 36 out of: 165
sorted: 37 out of: 165
sorted: 38 out of: 165
sorted: 39 out of: 165
sorted: 40 out of: 165
sorted: 41 out of: 165
sorted: 42 out of: 165
sorted: 43 out of: 165
sorted: 44 out of: 165
sorted: 45 out of: 165
sorted: 46 out of: 165
sorted: 47 out of: 165
sorted: 48 out of: 165
sorted: 49 out of: 165
sorted: 50 out of: 165
sorted: 51 out of: 165
sorted: 52 out of: 165
sorted: 53 out of: 165
sorted: 54 out of: 165
sorted: 55 out of: 165
sorted: 56 out of: 165
sorted: 57 out of: 165
sorted: 58 out of: 165
sorted: 59 out of: 165
sorted: 60 out of: 165
sorted: 61 out of: 165
sorted: 62 out of: 165
sorted: 63 out of: 165
sorted: 64 out of: 165
sorted: 65 out of: 165
sorted: 66 out of: 165
sorted: 67 out of: 165
sorted: 68 out of: 165
sorted: 69 out of: 165
sorted: 70 out of: 165
sorted: 71 out of: 165
sorted: 72 out of: 165
sorted: 73 out of: 165
sorted: 74 out of: 165
sorted: 75 out of: 165
sorted: 76 out of: 165
sorted: 77 out of: 165
sorted: 78 out of: 165
sorted: 79 out of: 165
sorted: 80 out of: 165
sorted: 81 out of: 165
sorted: 82 out of: 165
sorted: 83 out of: 165
sorted: 84 out of: 165
sorted: 85 out of: 165
sorted: 86 out of: 165
sorted: 87 out of: 165
sorted: 88 out of: 165
sorted: 89 out of: 165
sorted: 90 out of: 165
sorted: 91 out of: 165
sorted: 92 out of: 165
sorted: 93 out of: 165
sorted: 94 out of: 165
sorted: 95 out of: 165
sorted: 96 out of: 165
sorted: 97 out of: 165
sorted: 98 out of: 165
sorted: 99 out of: 165
sorted: 100 out of: 165
sorted: 101 out of: 165
sorted: 102 out of: 165
sorted: 103 out of: 165
sorted: 104 out of: 165
sorted: 105 out of: 165
sorted: 106 out of: 165
sorted: 107 out of: 165
sorted: 108 out of: 165
sorted: 109 out of: 165
sorted: 110 out of: 165
sorted: 111 out of: 165
sorted: 112 out of: 165
sorted: 113 out of: 165
sorted: 114 out of: 165
sorted: 115 out of: 165
sorted: 116 out of: 165
sorted: 117 out of: 165
sorted: 118 out of: 165
sorted: 119 out of: 165
sorted: 120 out of: 165
sorted: 121 out of: 165
sorted: 122 out of: 165
sorted: 123 out of: 165
sorted: 124 out of: 165
sorted: 125 out of: 165
sorted: 126 out of: 165
sorted: 127 out of: 165
sorted: 128 out of: 165
sorted: 129 out of: 165
sorted: 130 out of: 165
sorted: 131 out of: 165
sorted: 132 out of: 165
sorted: 133 out of: 165
sorted: 134 out of: 165
sorted: 135 out of: 165
sorted: 136 out of: 165
sorted: 137 out of: 165
sorted: 138 out of: 165
sorted: 139 out of: 165
sorted: 140 out of: 165
sorted: 141 out of: 165
sorted: 142 out of: 165
sorted: 143 out of: 165
sorted: 144 out of: 165
sorted: 145 out of: 165
sorted: 146 out of: 165
sorted: 147 out of: 165
sorted: 148 out of: 165
sorted: 149 out of: 165
sorted: 150 out of: 165
sorted: 151 out of: 165
sorted: 152 out of: 165
sorted: 153 out of: 165
sorted: 154 out of: 165
sorted: 155 out of: 165
sorted: 156 out of: 165
sorted: 157 out of: 165
sorted: 158 out of: 165
sorted: 159 out of: 165
sorted: 160 out of: 165
sorted: 161 out of: 165
sorted: 162 out of: 165
sorted: 163 out of: 165
sorted: 164 out of: 165
sorted: 165 out of: 165
Cluster size: 165
there were : 165 values
sorted: 1 out of: 165
sorted: 2 out of: 165
sorted: 3 out of: 165
sorted: 4 out of: 165
sorted: 5 out of: 165
sorted: 6 out of: 165
sorted: 7 out of: 165
sorted: 8 out of: 165
sorted: 9 out of: 165
sorted: 10 out of: 165
sorted: 11 out of: 165
sorted: 12 out of: 165
sorted: 13 out of: 165
sorted: 14 out of: 165
sorted: 15 out of: 165
sorted: 16 out of: 165
sorted: 17 out of: 165
sorted: 18 out of: 165
sorted: 19 out of: 165
sorted: 20 out of: 165
sorted: 21 out of: 165
sorted: 22 out of: 165
sorted: 23 out of: 165
sorted: 24 out of: 165
sorted: 25 out of: 165
sorted: 26 out of: 165
sorted: 27 out of: 165
sorted: 28 out of: 165
sorted: 29 out of: 165
sorted: 30 out of: 165
sorted: 31 out of: 165
sorted: 32 out of: 165
sorted: 33 out of: 165
sorted: 34 out of: 165
sorted: 35 out of: 165
sorted: 36 out of: 165
sorted: 37 out of: 165
sorted: 38 out of: 165
sorted: 39 out of: 165
sorted: 40 out of: 165
sorted: 41 out of: 165
sorted: 42 out of: 165
sorted: 43 out of: 165
sorted: 44 out of: 165
sorted: 45 out of: 165
sorted: 46 out of: 165
sorted: 47 out of: 165
sorted: 48 out of: 165
sorted: 49 out of: 165
sorted: 50 out of: 165
sorted: 51 out of: 165
sorted: 52 out of: 165
sorted: 53 out of: 165
sorted: 54 out of: 165
sorted: 55 out of: 165
sorted: 56 out of: 165
sorted: 57 out of: 165
sorted: 58 out of: 165
sorted: 59 out of: 165
sorted: 60 out of: 165
sorted: 61 out of: 165
sorted: 62 out of: 165
sorted: 63 out of: 165
sorted: 64 out of: 165
sorted: 65 out of: 165
sorted: 66 out of: 165
sorted: 67 out of: 165
sorted: 68 out of: 165
sorted: 69 out of: 165
sorted: 70 out of: 165
sorted: 71 out of: 165
sorted: 72 out of: 165
sorted: 73 out of: 165
sorted: 74 out of: 165
sorted: 75 out of: 165
sorted: 76 out of: 165
sorted: 77 out of: 165
sorted: 78 out of: 165
sorted: 79 out of: 165
sorted: 80 out of: 165
sorted: 81 out of: 165
sorted: 82 out of: 165
sorted: 83 out of: 165
sorted: 84 out of: 165
sorted: 85 out of: 165
sorted: 86 out of: 165
sorted: 87 out of: 165
sorted: 88 out of: 165
sorted: 89 out of: 165
sorted: 90 out of: 165
sorted: 91 out of: 165
sorted: 92 out of: 165
sorted: 93 out of: 165
sorted: 94 out of: 165
sorted: 95 out of: 165
sorted: 96 out of: 165
sorted: 97 out of: 165
sorted: 98 out of: 165
sorted: 99 out of: 165
sorted: 100 out of: 165
sorted: 101 out of: 165
sorted: 102 out of: 165
sorted: 103 out of: 165
sorted: 104 out of: 165
sorted: 105 out of: 165
sorted: 106 out of: 165
sorted: 107 out of: 165
sorted: 108 out of: 165
sorted: 109 out of: 165
sorted: 110 out of: 165
sorted: 111 out of: 165
sorted: 112 out of: 165
sorted: 113 out of: 165
sorted: 114 out of: 165
sorted: 115 out of: 165
sorted: 116 out of: 165
sorted: 117 out of: 165
sorted: 118 out of: 165
sorted: 119 out of: 165
sorted: 120 out of: 165
sorted: 121 out of: 165
sorted: 122 out of: 165
sorted: 123 out of: 165
sorted: 124 out of: 165
sorted: 125 out of: 165
sorted: 126 out of: 165
sorted: 127 out of: 165
sorted: 128 out of: 165
sorted: 129 out of: 165
sorted: 130 out of: 165
sorted: 131 out of: 165
sorted: 132 out of: 165
sorted: 133 out of: 165
sorted: 134 out of: 165
sorted: 135 out of: 165
sorted: 136 out of: 165
sorted: 137 out of: 165
sorted: 138 out of: 165
sorted: 139 out of: 165
sorted: 140 out of: 165
sorted: 141 out of: 165
sorted: 142 out of: 165
sorted: 143 out of: 165
sorted: 144 out of: 165
sorted: 145 out of: 165
sorted: 146 out of: 165
sorted: 147 out of: 165
sorted: 148 out of: 165
sorted: 149 out of: 165
sorted: 150 out of: 165
sorted: 151 out of: 165
sorted: 152 out of: 165
sorted: 153 out of: 165
sorted: 154 out of: 165
sorted: 155 out of: 165
sorted: 156 out of: 165
sorted: 157 out of: 165
sorted: 158 out of: 165
sorted: 159 out of: 165
sorted: 160 out of: 165
sorted: 161 out of: 165
sorted: 162 out of: 165
sorted: 163 out of: 165
sorted: 164 out of: 165
sorted: 165 out of: 165
Cluster size: 165
there were : 133 values
sorted: 1 out of: 133
sorted: 2 out of: 133
sorted: 3 out of: 133
sorted: 4 out of: 133
sorted: 5 out of: 133
sorted: 6 out of: 133
sorted: 7 out of: 133
sorted: 8 out of: 133
sorted: 9 out of: 133
sorted: 10 out of: 133
sorted: 11 out of: 133
sorted: 12 out of: 133
sorted: 13 out of: 133
sorted: 14 out of: 133
sorted: 15 out of: 133
sorted: 16 out of: 133
sorted: 17 out of: 133
sorted: 18 out of: 133
sorted: 19 out of: 133
sorted: 20 out of: 133
sorted: 21 out of: 133
sorted: 22 out of: 133
sorted: 23 out of: 133
sorted: 24 out of: 133
sorted: 25 out of: 133
sorted: 26 out of: 133
sorted: 27 out of: 133
sorted: 28 out of: 133
sorted: 29 out of: 133
sorted: 30 out of: 133
sorted: 31 out of: 133
sorted: 32 out of: 133
sorted: 33 out of: 133
sorted: 34 out of: 133
sorted: 35 out of: 133
sorted: 36 out of: 133
sorted: 37 out of: 133
sorted: 38 out of: 133
sorted: 39 out of: 133
sorted: 40 out of: 133
sorted: 41 out of: 133
sorted: 42 out of: 133
sorted: 43 out of: 133
sorted: 44 out of: 133
sorted: 45 out of: 133
sorted: 46 out of: 133
sorted: 47 out of: 133
sorted: 48 out of: 133
sorted: 49 out of: 133
sorted: 50 out of: 133
sorted: 51 out of: 133
sorted: 52 out of: 133
sorted: 53 out of: 133
sorted: 54 out of: 133
sorted: 55 out of: 133
sorted: 56 out of: 133
sorted: 57 out of: 133
sorted: 58 out of: 133
sorted: 59 out of: 133
sorted: 60 out of: 133
sorted: 61 out of: 133
sorted: 62 out of: 133
sorted: 63 out of: 133
sorted: 64 out of: 133
sorted: 65 out of: 133
sorted: 66 out of: 133
sorted: 67 out of: 133
sorted: 68 out of: 133
sorted: 69 out of: 133
sorted: 70 out of: 133
sorted: 71 out of: 133
sorted: 72 out of: 133
sorted: 73 out of: 133
sorted: 74 out of: 133
sorted: 75 out of: 133
sorted: 76 out of: 133
sorted: 77 out of: 133
sorted: 78 out of: 133
sorted: 79 out of: 133
sorted: 80 out of: 133
sorted: 81 out of: 133
sorted: 82 out of: 133
sorted: 83 out of: 133
sorted: 84 out of: 133
sorted: 85 out of: 133
sorted: 86 out of: 133
sorted: 87 out of: 133
sorted: 88 out of: 133
sorted: 89 out of: 133
sorted: 90 out of: 133
sorted: 91 out of: 133
sorted: 92 out of: 133
sorted: 93 out of: 133
sorted: 94 out of: 133
sorted: 95 out of: 133
sorted: 96 out of: 133
sorted: 97 out of: 133
sorted: 98 out of: 133
sorted: 99 out of: 133
sorted: 100 out of: 133
sorted: 101 out of: 133
sorted: 102 out of: 133
sorted: 103 out of: 133
sorted: 104 out of: 133
sorted: 105 out of: 133
sorted: 106 out of: 133
sorted: 107 out of: 133
sorted: 108 out of: 133
sorted: 109 out of: 133
sorted: 110 out of: 133
sorted: 111 out of: 133
sorted: 112 out of: 133
sorted: 113 out of: 133
sorted: 114 out of: 133
sorted: 115 out of: 133
sorted: 116 out of: 133
sorted: 117 out of: 133
sorted: 118 out of: 133
sorted: 119 out of: 133
sorted: 120 out of: 133
sorted: 121 out of: 133
sorted: 122 out of: 133
sorted: 123 out of: 133
sorted: 124 out of: 133
sorted: 125 out of: 133
sorted: 126 out of: 133
sorted: 127 out of: 133
sorted: 128 out of: 133
sorted: 129 out of: 133
sorted: 130 out of: 133
sorted: 131 out of: 133
sorted: 132 out of: 133
sorted: 133 out of: 133
Cluster size: 133
there were : 99 values
sorted: 1 out of: 99
sorted: 2 out of: 99
sorted: 3 out of: 99
sorted: 4 out of: 99
sorted: 5 out of: 99
sorted: 6 out of: 99
sorted: 7 out of: 99
sorted: 8 out of: 99
sorted: 9 out of: 99
sorted: 10 out of: 99
sorted: 11 out of: 99
sorted: 12 out of: 99
sorted: 13 out of: 99
sorted: 14 out of: 99
sorted: 15 out of: 99
sorted: 16 out of: 99
sorted: 17 out of: 99
sorted: 18 out of: 99
sorted: 19 out of: 99
sorted: 20 out of: 99
sorted: 21 out of: 99
sorted: 22 out of: 99
sorted: 23 out of: 99
sorted: 24 out of: 99
sorted: 25 out of: 99
sorted: 26 out of: 99
sorted: 27 out of: 99
sorted: 28 out of: 99
sorted: 29 out of: 99
sorted: 30 out of: 99
sorted: 31 out of: 99
sorted: 32 out of: 99
sorted: 33 out of: 99
sorted: 34 out of: 99
sorted: 35 out of: 99
sorted: 36 out of: 99
sorted: 37 out of: 99
sorted: 38 out of: 99
sorted: 39 out of: 99
sorted: 40 out of: 99
sorted: 41 out of: 99
sorted: 42 out of: 99
sorted: 43 out of: 99
sorted: 44 out of: 99
sorted: 45 out of: 99
sorted: 46 out of: 99
sorted: 47 out of: 99
sorted: 48 out of: 99
sorted: 49 out of: 99
sorted: 50 out of: 99
sorted: 51 out of: 99
sorted: 52 out of: 99
sorted: 53 out of: 99
sorted: 54 out of: 99
sorted: 55 out of: 99
sorted: 56 out of: 99
sorted: 57 out of: 99
sorted: 58 out of: 99
sorted: 59 out of: 99
sorted: 60 out of: 99
sorted: 61 out of: 99
sorted: 62 out of: 99
sorted: 63 out of: 99
sorted: 64 out of: 99
sorted: 65 out of: 99
sorted: 66 out of: 99
sorted: 67 out of: 99
sorted: 68 out of: 99
sorted: 69 out of: 99
sorted: 70 out of: 99
sorted: 71 out of: 99
sorted: 72 out of: 99
sorted: 73 out of: 99
sorted: 74 out of: 99
sorted: 75 out of: 99
sorted: 76 out of: 99
sorted: 77 out of: 99
sorted: 78 out of: 99
sorted: 79 out of: 99
sorted: 80 out of: 99
sorted: 81 out of: 99
sorted: 82 out of: 99
sorted: 83 out of: 99
sorted: 84 out of: 99
sorted: 85 out of: 99
sorted: 86 out of: 99
sorted: 87 out of: 99
sorted: 88 out of: 99
sorted: 89 out of: 99
sorted: 90 out of: 99
sorted: 91 out of: 99
sorted: 92 out of: 99
sorted: 93 out of: 99
sorted: 94 out of: 99
sorted: 95 out of: 99
sorted: 96 out of: 99
sorted: 97 out of: 99
sorted: 98 out of: 99
sorted: 99 out of: 99
Cluster size: 99
there were : 90 values
sorted: 1 out of: 90
sorted: 2 out of: 90
sorted: 3 out of: 90
sorted: 4 out of: 90
sorted: 5 out of: 90
sorted: 6 out of: 90
sorted: 7 out of: 90
sorted: 8 out of: 90
sorted: 9 out of: 90
sorted: 10 out of: 90
sorted: 11 out of: 90
sorted: 12 out of: 90
sorted: 13 out of: 90
sorted: 14 out of: 90
sorted: 15 out of: 90
sorted: 16 out of: 90
sorted: 17 out of: 90
sorted: 18 out of: 90
sorted: 19 out of: 90
sorted: 20 out of: 90
sorted: 21 out of: 90
sorted: 22 out of: 90
sorted: 23 out of: 90
sorted: 24 out of: 90
sorted: 25 out of: 90
sorted: 26 out of: 90
sorted: 27 out of: 90
sorted: 28 out of: 90
sorted: 29 out of: 90
sorted: 30 out of: 90
sorted: 31 out of: 90
sorted: 32 out of: 90
sorted: 33 out of: 90
sorted: 34 out of: 90
sorted: 35 out of: 90
sorted: 36 out of: 90
sorted: 37 out of: 90
sorted: 38 out of: 90
sorted: 39 out of: 90
sorted: 40 out of: 90
sorted: 41 out of: 90
sorted: 42 out of: 90
sorted: 43 out of: 90
sorted: 44 out of: 90
sorted: 45 out of: 90
sorted: 46 out of: 90
sorted: 47 out of: 90
sorted: 48 out of: 90
sorted: 49 out of: 90
sorted: 50 out of: 90
sorted: 51 out of: 90
sorted: 52 out of: 90
sorted: 53 out of: 90
sorted: 54 out of: 90
sorted: 55 out of: 90
sorted: 56 out of: 90
sorted: 57 out of: 90
sorted: 58 out of: 90
sorted: 59 out of: 90
sorted: 60 out of: 90
sorted: 61 out of: 90
sorted: 62 out of: 90
sorted: 63 out of: 90
sorted: 64 out of: 90
sorted: 65 out of: 90
sorted: 66 out of: 90
sorted: 67 out of: 90
sorted: 68 out of: 90
sorted: 69 out of: 90
sorted: 70 out of: 90
sorted: 71 out of: 90
sorted: 72 out of: 90
sorted: 73 out of: 90
sorted: 74 out of: 90
sorted: 75 out of: 90
sorted: 76 out of: 90
sorted: 77 out of: 90
sorted: 78 out of: 90
sorted: 79 out of: 90
sorted: 80 out of: 90
sorted: 81 out of: 90
sorted: 82 out of: 90
sorted: 83 out of: 90
sorted: 84 out of: 90
sorted: 85 out of: 90
sorted: 86 out of: 90
sorted: 87 out of: 90
sorted: 88 out of: 90
sorted: 89 out of: 90
sorted: 90 out of: 90
Cluster size: 90
there were : 78 values
sorted: 1 out of: 78
sorted: 2 out of: 78
sorted: 3 out of: 78
sorted: 4 out of: 78
sorted: 5 out of: 78
sorted: 6 out of: 78
sorted: 7 out of: 78
sorted: 8 out of: 78
sorted: 9 out of: 78
sorted: 10 out of: 78
sorted: 11 out of: 78
sorted: 12 out of: 78
sorted: 13 out of: 78
sorted: 14 out of: 78
sorted: 15 out of: 78
sorted: 16 out of: 78
sorted: 17 out of: 78
sorted: 18 out of: 78
sorted: 19 out of: 78
sorted: 20 out of: 78
sorted: 21 out of: 78
sorted: 22 out of: 78
sorted: 23 out of: 78
sorted: 24 out of: 78
sorted: 25 out of: 78
sorted: 26 out of: 78
sorted: 27 out of: 78
sorted: 28 out of: 78
sorted: 29 out of: 78
sorted: 30 out of: 78
sorted: 31 out of: 78
sorted: 32 out of: 78
sorted: 33 out of: 78
sorted: 34 out of: 78
sorted: 35 out of: 78
sorted: 36 out of: 78
sorted: 37 out of: 78
sorted: 38 out of: 78
sorted: 39 out of: 78
sorted: 40 out of: 78
sorted: 41 out of: 78
sorted: 42 out of: 78
sorted: 43 out of: 78
sorted: 44 out of: 78
sorted: 45 out of: 78
sorted: 46 out of: 78
sorted: 47 out of: 78
sorted: 48 out of: 78
sorted: 49 out of: 78
sorted: 50 out of: 78
sorted: 51 out of: 78
sorted: 52 out of: 78
sorted: 53 out of: 78
sorted: 54 out of: 78
sorted: 55 out of: 78
sorted: 56 out of: 78
sorted: 57 out of: 78
sorted: 58 out of: 78
sorted: 59 out of: 78
sorted: 60 out of: 78
sorted: 61 out of: 78
sorted: 62 out of: 78
sorted: 63 out of: 78
sorted: 64 out of: 78
sorted: 65 out of: 78
sorted: 66 out of: 78
sorted: 67 out of: 78
sorted: 68 out of: 78
sorted: 69 out of: 78
sorted: 70 out of: 78
sorted: 71 out of: 78
sorted: 72 out of: 78
sorted: 73 out of: 78
sorted: 74 out of: 78
sorted: 75 out of: 78
sorted: 76 out of: 78
sorted: 77 out of: 78
sorted: 78 out of: 78
Cluster size: 78
there were : 75 values
sorted: 1 out of: 75
sorted: 2 out of: 75
sorted: 3 out of: 75
sorted: 4 out of: 75
sorted: 5 out of: 75
sorted: 6 out of: 75
sorted: 7 out of: 75
sorted: 8 out of: 75
sorted: 9 out of: 75
sorted: 10 out of: 75
sorted: 11 out of: 75
sorted: 12 out of: 75
sorted: 13 out of: 75
sorted: 14 out of: 75
sorted: 15 out of: 75
sorted: 16 out of: 75
sorted: 17 out of: 75
sorted: 18 out of: 75
sorted: 19 out of: 75
sorted: 20 out of: 75
sorted: 21 out of: 75
sorted: 22 out of: 75
sorted: 23 out of: 75
sorted: 24 out of: 75
sorted: 25 out of: 75
sorted: 26 out of: 75
sorted: 27 out of: 75
sorted: 28 out of: 75
sorted: 29 out of: 75
sorted: 30 out of: 75
sorted: 31 out of: 75
sorted: 32 out of: 75
sorted: 33 out of: 75
sorted: 34 out of: 75
sorted: 35 out of: 75
sorted: 36 out of: 75
sorted: 37 out of: 75
sorted: 38 out of: 75
sorted: 39 out of: 75
sorted: 40 out of: 75
sorted: 41 out of: 75
sorted: 42 out of: 75
sorted: 43 out of: 75
sorted: 44 out of: 75
sorted: 45 out of: 75
sorted: 46 out of: 75
sorted: 47 out of: 75
sorted: 48 out of: 75
sorted: 49 out of: 75
sorted: 50 out of: 75
sorted: 51 out of: 75
sorted: 52 out of: 75
sorted: 53 out of: 75
sorted: 54 out of: 75
sorted: 55 out of: 75
sorted: 56 out of: 75
sorted: 57 out of: 75
sorted: 58 out of: 75
sorted: 59 out of: 75
sorted: 60 out of: 75
sorted: 61 out of: 75
sorted: 62 out of: 75
sorted: 63 out of: 75
sorted: 64 out of: 75
sorted: 65 out of: 75
sorted: 66 out of: 75
sorted: 67 out of: 75
sorted: 68 out of: 75
sorted: 69 out of: 75
sorted: 70 out of: 75
sorted: 71 out of: 75
sorted: 72 out of: 75
sorted: 73 out of: 75
sorted: 74 out of: 75
sorted: 75 out of: 75
Cluster size: 75
there were : 75 values
sorted: 1 out of: 75
sorted: 2 out of: 75
sorted: 3 out of: 75
sorted: 4 out of: 75
sorted: 5 out of: 75
sorted: 6 out of: 75
sorted: 7 out of: 75
sorted: 8 out of: 75
sorted: 9 out of: 75
sorted: 10 out of: 75
sorted: 11 out of: 75
sorted: 12 out of: 75
sorted: 13 out of: 75
sorted: 14 out of: 75
sorted: 15 out of: 75
sorted: 16 out of: 75
sorted: 17 out of: 75
sorted: 18 out of: 75
sorted: 19 out of: 75
sorted: 20 out of: 75
sorted: 21 out of: 75
sorted: 22 out of: 75
sorted: 23 out of: 75
sorted: 24 out of: 75
sorted: 25 out of: 75
sorted: 26 out of: 75
sorted: 27 out of: 75
sorted: 28 out of: 75
sorted: 29 out of: 75
sorted: 30 out of: 75
sorted: 31 out of: 75
sorted: 32 out of: 75
sorted: 33 out of: 75
sorted: 34 out of: 75
sorted: 35 out of: 75
sorted: 36 out of: 75
sorted: 37 out of: 75
sorted: 38 out of: 75
sorted: 39 out of: 75
sorted: 40 out of: 75
sorted: 41 out of: 75
sorted: 42 out of: 75
sorted: 43 out of: 75
sorted: 44 out of: 75
sorted: 45 out of: 75
sorted: 46 out of: 75
sorted: 47 out of: 75
sorted: 48 out of: 75
sorted: 49 out of: 75
sorted: 50 out of: 75
sorted: 51 out of: 75
sorted: 52 out of: 75
sorted: 53 out of: 75
sorted: 54 out of: 75
sorted: 55 out of: 75
sorted: 56 out of: 75
sorted: 57 out of: 75
sorted: 58 out of: 75
sorted: 59 out of: 75
sorted: 60 out of: 75
sorted: 61 out of: 75
sorted: 62 out of: 75
sorted: 63 out of: 75
sorted: 64 out of: 75
sorted: 65 out of: 75
sorted: 66 out of: 75
sorted: 67 out of: 75
sorted: 68 out of: 75
sorted: 69 out of: 75
sorted: 70 out of: 75
sorted: 71 out of: 75
sorted: 72 out of: 75
sorted: 73 out of: 75
sorted: 74 out of: 75
sorted: 75 out of: 75
Cluster size: 75
there were : 70 values
sorted: 1 out of: 70
sorted: 2 out of: 70
sorted: 3 out of: 70
sorted: 4 out of: 70
sorted: 5 out of: 70
sorted: 6 out of: 70
sorted: 7 out of: 70
sorted: 8 out of: 70
sorted: 9 out of: 70
sorted: 10 out of: 70
sorted: 11 out of: 70
sorted: 12 out of: 70
sorted: 13 out of: 70
sorted: 14 out of: 70
sorted: 15 out of: 70
sorted: 16 out of: 70
sorted: 17 out of: 70
sorted: 18 out of: 70
sorted: 19 out of: 70
sorted: 20 out of: 70
sorted: 21 out of: 70
sorted: 22 out of: 70
sorted: 23 out of: 70
sorted: 24 out of: 70
sorted: 25 out of: 70
sorted: 26 out of: 70
sorted: 27 out of: 70
sorted: 28 out of: 70
sorted: 29 out of: 70
sorted: 30 out of: 70
sorted: 31 out of: 70
sorted: 32 out of: 70
sorted: 33 out of: 70
sorted: 34 out of: 70
sorted: 35 out of: 70
sorted: 36 out of: 70
sorted: 37 out of: 70
sorted: 38 out of: 70
sorted: 39 out of: 70
sorted: 40 out of: 70
sorted: 41 out of: 70
sorted: 42 out of: 70
sorted: 43 out of: 70
sorted: 44 out of: 70
sorted: 45 out of: 70
sorted: 46 out of: 70
sorted: 47 out of: 70
sorted: 48 out of: 70
sorted: 49 out of: 70
sorted: 50 out of: 70
sorted: 51 out of: 70
sorted: 52 out of: 70
sorted: 53 out of: 70
sorted: 54 out of: 70
sorted: 55 out of: 70
sorted: 56 out of: 70
sorted: 57 out of: 70
sorted: 58 out of: 70
sorted: 59 out of: 70
sorted: 60 out of: 70
sorted: 61 out of: 70
sorted: 62 out of: 70
sorted: 63 out of: 70
sorted: 64 out of: 70
sorted: 65 out of: 70
sorted: 66 out of: 70
sorted: 67 out of: 70
sorted: 68 out of: 70
sorted: 69 out of: 70
sorted: 70 out of: 70
Cluster size: 70
there were : 70 values
sorted: 1 out of: 70
sorted: 2 out of: 70
sorted: 3 out of: 70
sorted: 4 out of: 70
sorted: 5 out of: 70
sorted: 6 out of: 70
sorted: 7 out of: 70
sorted: 8 out of: 70
sorted: 9 out of: 70
sorted: 10 out of: 70
sorted: 11 out of: 70
sorted: 12 out of: 70
sorted: 13 out of: 70
sorted: 14 out of: 70
sorted: 15 out of: 70
sorted: 16 out of: 70
sorted: 17 out of: 70
sorted: 18 out of: 70
sorted: 19 out of: 70
sorted: 20 out of: 70
sorted: 21 out of: 70
sorted: 22 out of: 70
sorted: 23 out of: 70
sorted: 24 out of: 70
sorted: 25 out of: 70
sorted: 26 out of: 70
sorted: 27 out of: 70
sorted: 28 out of: 70
sorted: 29 out of: 70
sorted: 30 out of: 70
sorted: 31 out of: 70
sorted: 32 out of: 70
sorted: 33 out of: 70
sorted: 34 out of: 70
sorted: 35 out of: 70
sorted: 36 out of: 70
sorted: 37 out of: 70
sorted: 38 out of: 70
sorted: 39 out of: 70
sorted: 40 out of: 70
sorted: 41 out of: 70
sorted: 42 out of: 70
sorted: 43 out of: 70
sorted: 44 out of: 70
sorted: 45 out of: 70
sorted: 46 out of: 70
sorted: 47 out of: 70
sorted: 48 out of: 70
sorted: 49 out of: 70
sorted: 50 out of: 70
sorted: 51 out of: 70
sorted: 52 out of: 70
sorted: 53 out of: 70
sorted: 54 out of: 70
sorted: 55 out of: 70
sorted: 56 out of: 70
sorted: 57 out of: 70
sorted: 58 out of: 70
sorted: 59 out of: 70
sorted: 60 out of: 70
sorted: 61 out of: 70
sorted: 62 out of: 70
sorted: 63 out of: 70
sorted: 64 out of: 70
sorted: 65 out of: 70
sorted: 66 out of: 70
sorted: 67 out of: 70
sorted: 68 out of: 70
sorted: 69 out of: 70
sorted: 70 out of: 70
Cluster size: 70
there were : 68 values
sorted: 1 out of: 68
sorted: 2 out of: 68
sorted: 3 out of: 68
sorted: 4 out of: 68
sorted: 5 out of: 68
sorted: 6 out of: 68
sorted: 7 out of: 68
sorted: 8 out of: 68
sorted: 9 out of: 68
sorted: 10 out of: 68
sorted: 11 out of: 68
sorted: 12 out of: 68
sorted: 13 out of: 68
sorted: 14 out of: 68
sorted: 15 out of: 68
sorted: 16 out of: 68
sorted: 17 out of: 68
sorted: 18 out of: 68
sorted: 19 out of: 68
sorted: 20 out of: 68
sorted: 21 out of: 68
sorted: 22 out of: 68
sorted: 23 out of: 68
sorted: 24 out of: 68
sorted: 25 out of: 68
sorted: 26 out of: 68
sorted: 27 out of: 68
sorted: 28 out of: 68
sorted: 29 out of: 68
sorted: 30 out of: 68
sorted: 31 out of: 68
sorted: 32 out of: 68
sorted: 33 out of: 68
sorted: 34 out of: 68
sorted: 35 out of: 68
sorted: 36 out of: 68
sorted: 37 out of: 68
sorted: 38 out of: 68
sorted: 39 out of: 68
sorted: 40 out of: 68
sorted: 41 out of: 68
sorted: 42 out of: 68
sorted: 43 out of: 68
sorted: 44 out of: 68
sorted: 45 out of: 68
sorted: 46 out of: 68
sorted: 47 out of: 68
sorted: 48 out of: 68
sorted: 49 out of: 68
sorted: 50 out of: 68
sorted: 51 out of: 68
sorted: 52 out of: 68
sorted: 53 out of: 68
sorted: 54 out of: 68
sorted: 55 out of: 68
sorted: 56 out of: 68
sorted: 57 out of: 68
sorted: 58 out of: 68
sorted: 59 out of: 68
sorted: 60 out of: 68
sorted: 61 out of: 68
sorted: 62 out of: 68
sorted: 63 out of: 68
sorted: 64 out of: 68
sorted: 65 out of: 68
sorted: 66 out of: 68
sorted: 67 out of: 68
sorted: 68 out of: 68
Cluster size: 68
there were : 60 values
sorted: 1 out of: 60
sorted: 2 out of: 60
sorted: 3 out of: 60
sorted: 4 out of: 60
sorted: 5 out of: 60
sorted: 6 out of: 60
sorted: 7 out of: 60
sorted: 8 out of: 60
sorted: 9 out of: 60
sorted: 10 out of: 60
sorted: 11 out of: 60
sorted: 12 out of: 60
sorted: 13 out of: 60
sorted: 14 out of: 60
sorted: 15 out of: 60
sorted: 16 out of: 60
sorted: 17 out of: 60
sorted: 18 out of: 60
sorted: 19 out of: 60
sorted: 20 out of: 60
sorted: 21 out of: 60
sorted: 22 out of: 60
sorted: 23 out of: 60
sorted: 24 out of: 60
sorted: 25 out of: 60
sorted: 26 out of: 60
sorted: 27 out of: 60
sorted: 28 out of: 60
sorted: 29 out of: 60
sorted: 30 out of: 60
sorted: 31 out of: 60
sorted: 32 out of: 60
sorted: 33 out of: 60
sorted: 34 out of: 60
sorted: 35 out of: 60
sorted: 36 out of: 60
sorted: 37 out of: 60
sorted: 38 out of: 60
sorted: 39 out of: 60
sorted: 40 out of: 60
sorted: 41 out of: 60
sorted: 42 out of: 60
sorted: 43 out of: 60
sorted: 44 out of: 60
sorted: 45 out of: 60
sorted: 46 out of: 60
sorted: 47 out of: 60
sorted: 48 out of: 60
sorted: 49 out of: 60
sorted: 50 out of: 60
sorted: 51 out of: 60
sorted: 52 out of: 60
sorted: 53 out of: 60
sorted: 54 out of: 60
sorted: 55 out of: 60
sorted: 56 out of: 60
sorted: 57 out of: 60
sorted: 58 out of: 60
sorted: 59 out of: 60
sorted: 60 out of: 60
Cluster size: 60
there were : 59 values
sorted: 1 out of: 59
sorted: 2 out of: 59
sorted: 3 out of: 59
sorted: 4 out of: 59
sorted: 5 out of: 59
sorted: 6 out of: 59
sorted: 7 out of: 59
sorted: 8 out of: 59
sorted: 9 out of: 59
sorted: 10 out of: 59
sorted: 11 out of: 59
sorted: 12 out of: 59
sorted: 13 out of: 59
sorted: 14 out of: 59
sorted: 15 out of: 59
sorted: 16 out of: 59
sorted: 17 out of: 59
sorted: 18 out of: 59
sorted: 19 out of: 59
sorted: 20 out of: 59
sorted: 21 out of: 59
sorted: 22 out of: 59
sorted: 23 out of: 59
sorted: 24 out of: 59
sorted: 25 out of: 59
sorted: 26 out of: 59
sorted: 27 out of: 59
sorted: 28 out of: 59
sorted: 29 out of: 59
sorted: 30 out of: 59
sorted: 31 out of: 59
sorted: 32 out of: 59
sorted: 33 out of: 59
sorted: 34 out of: 59
sorted: 35 out of: 59
sorted: 36 out of: 59
sorted: 37 out of: 59
sorted: 38 out of: 59
sorted: 39 out of: 59
sorted: 40 out of: 59
sorted: 41 out of: 59
sorted: 42 out of: 59
sorted: 43 out of: 59
sorted: 44 out of: 59
sorted: 45 out of: 59
sorted: 46 out of: 59
sorted: 47 out of: 59
sorted: 48 out of: 59
sorted: 49 out of: 59
sorted: 50 out of: 59
sorted: 51 out of: 59
sorted: 52 out of: 59
sorted: 53 out of: 59
sorted: 54 out of: 59
sorted: 55 out of: 59
sorted: 56 out of: 59
sorted: 57 out of: 59
sorted: 58 out of: 59
sorted: 59 out of: 59
Cluster size: 59
there were : 58 values
sorted: 1 out of: 58
sorted: 2 out of: 58
sorted: 3 out of: 58
sorted: 4 out of: 58
sorted: 5 out of: 58
sorted: 6 out of: 58
sorted: 7 out of: 58
sorted: 8 out of: 58
sorted: 9 out of: 58
sorted: 10 out of: 58
sorted: 11 out of: 58
sorted: 12 out of: 58
sorted: 13 out of: 58
sorted: 14 out of: 58
sorted: 15 out of: 58
sorted: 16 out of: 58
sorted: 17 out of: 58
sorted: 18 out of: 58
sorted: 19 out of: 58
sorted: 20 out of: 58
sorted: 21 out of: 58
sorted: 22 out of: 58
sorted: 23 out of: 58
sorted: 24 out of: 58
sorted: 25 out of: 58
sorted: 26 out of: 58
sorted: 27 out of: 58
sorted: 28 out of: 58
sorted: 29 out of: 58
sorted: 30 out of: 58
sorted: 31 out of: 58
sorted: 32 out of: 58
sorted: 33 out of: 58
sorted: 34 out of: 58
sorted: 35 out of: 58
sorted: 36 out of: 58
sorted: 37 out of: 58
sorted: 38 out of: 58
sorted: 39 out of: 58
sorted: 40 out of: 58
sorted: 41 out of: 58
sorted: 42 out of: 58
sorted: 43 out of: 58
sorted: 44 out of: 58
sorted: 45 out of: 58
sorted: 46 out of: 58
sorted: 47 out of: 58
sorted: 48 out of: 58
sorted: 49 out of: 58
sorted: 50 out of: 58
sorted: 51 out of: 58
sorted: 52 out of: 58
sorted: 53 out of: 58
sorted: 54 out of: 58
sorted: 55 out of: 58
sorted: 56 out of: 58
sorted: 57 out of: 58
sorted: 58 out of: 58
Cluster size: 58
there were : 54 values
sorted: 1 out of: 54
sorted: 2 out of: 54
sorted: 3 out of: 54
sorted: 4 out of: 54
sorted: 5 out of: 54
sorted: 6 out of: 54
sorted: 7 out of: 54
sorted: 8 out of: 54
sorted: 9 out of: 54
sorted: 10 out of: 54
sorted: 11 out of: 54
sorted: 12 out of: 54
sorted: 13 out of: 54
sorted: 14 out of: 54
sorted: 15 out of: 54
sorted: 16 out of: 54
sorted: 17 out of: 54
sorted: 18 out of: 54
sorted: 19 out of: 54
sorted: 20 out of: 54
sorted: 21 out of: 54
sorted: 22 out of: 54
sorted: 23 out of: 54
sorted: 24 out of: 54
sorted: 25 out of: 54
sorted: 26 out of: 54
sorted: 27 out of: 54
sorted: 28 out of: 54
sorted: 29 out of: 54
sorted: 30 out of: 54
sorted: 31 out of: 54
sorted: 32 out of: 54
sorted: 33 out of: 54
sorted: 34 out of: 54
sorted: 35 out of: 54
sorted: 36 out of: 54
sorted: 37 out of: 54
sorted: 38 out of: 54
sorted: 39 out of: 54
sorted: 40 out of: 54
sorted: 41 out of: 54
sorted: 42 out of: 54
sorted: 43 out of: 54
sorted: 44 out of: 54
sorted: 45 out of: 54
sorted: 46 out of: 54
sorted: 47 out of: 54
sorted: 48 out of: 54
sorted: 49 out of: 54
sorted: 50 out of: 54
sorted: 51 out of: 54
sorted: 52 out of: 54
sorted: 53 out of: 54
sorted: 54 out of: 54
Cluster size: 54
there were : 53 values
sorted: 1 out of: 53
sorted: 2 out of: 53
sorted: 3 out of: 53
sorted: 4 out of: 53
sorted: 5 out of: 53
sorted: 6 out of: 53
sorted: 7 out of: 53
sorted: 8 out of: 53
sorted: 9 out of: 53
sorted: 10 out of: 53
sorted: 11 out of: 53
sorted: 12 out of: 53
sorted: 13 out of: 53
sorted: 14 out of: 53
sorted: 15 out of: 53
sorted: 16 out of: 53
sorted: 17 out of: 53
sorted: 18 out of: 53
sorted: 19 out of: 53
sorted: 20 out of: 53
sorted: 21 out of: 53
sorted: 22 out of: 53
sorted: 23 out of: 53
sorted: 24 out of: 53
sorted: 25 out of: 53
sorted: 26 out of: 53
sorted: 27 out of: 53
sorted: 28 out of: 53
sorted: 29 out of: 53
sorted: 30 out of: 53
sorted: 31 out of: 53
sorted: 32 out of: 53
sorted: 33 out of: 53
sorted: 34 out of: 53
sorted: 35 out of: 53
sorted: 36 out of: 53
sorted: 37 out of: 53
sorted: 38 out of: 53
sorted: 39 out of: 53
sorted: 40 out of: 53
sorted: 41 out of: 53
sorted: 42 out of: 53
sorted: 43 out of: 53
sorted: 44 out of: 53
sorted: 45 out of: 53
sorted: 46 out of: 53
sorted: 47 out of: 53
sorted: 48 out of: 53
sorted: 49 out of: 53
sorted: 50 out of: 53
sorted: 51 out of: 53
sorted: 52 out of: 53
sorted: 53 out of: 53
Cluster size: 53
there were : 48 values
sorted: 1 out of: 48
sorted: 2 out of: 48
sorted: 3 out of: 48
sorted: 4 out of: 48
sorted: 5 out of: 48
sorted: 6 out of: 48
sorted: 7 out of: 48
sorted: 8 out of: 48
sorted: 9 out of: 48
sorted: 10 out of: 48
sorted: 11 out of: 48
sorted: 12 out of: 48
sorted: 13 out of: 48
sorted: 14 out of: 48
sorted: 15 out of: 48
sorted: 16 out of: 48
sorted: 17 out of: 48
sorted: 18 out of: 48
sorted: 19 out of: 48
sorted: 20 out of: 48
sorted: 21 out of: 48
sorted: 22 out of: 48
sorted: 23 out of: 48
sorted: 24 out of: 48
sorted: 25 out of: 48
sorted: 26 out of: 48
sorted: 27 out of: 48
sorted: 28 out of: 48
sorted: 29 out of: 48
sorted: 30 out of: 48
sorted: 31 out of: 48
sorted: 32 out of: 48
sorted: 33 out of: 48
sorted: 34 out of: 48
sorted: 35 out of: 48
sorted: 36 out of: 48
sorted: 37 out of: 48
sorted: 38 out of: 48
sorted: 39 out of: 48
sorted: 40 out of: 48
sorted: 41 out of: 48
sorted: 42 out of: 48
sorted: 43 out of: 48
sorted: 44 out of: 48
sorted: 45 out of: 48
sorted: 46 out of: 48
sorted: 47 out of: 48
sorted: 48 out of: 48
Cluster size: 48
there were : 47 values
sorted: 1 out of: 47
sorted: 2 out of: 47
sorted: 3 out of: 47
sorted: 4 out of: 47
sorted: 5 out of: 47
sorted: 6 out of: 47
sorted: 7 out of: 47
sorted: 8 out of: 47
sorted: 9 out of: 47
sorted: 10 out of: 47
sorted: 11 out of: 47
sorted: 12 out of: 47
sorted: 13 out of: 47
sorted: 14 out of: 47
sorted: 15 out of: 47
sorted: 16 out of: 47
sorted: 17 out of: 47
sorted: 18 out of: 47
sorted: 19 out of: 47
sorted: 20 out of: 47
sorted: 21 out of: 47
sorted: 22 out of: 47
sorted: 23 out of: 47
sorted: 24 out of: 47
sorted: 25 out of: 47
sorted: 26 out of: 47
sorted: 27 out of: 47
sorted: 28 out of: 47
sorted: 29 out of: 47
sorted: 30 out of: 47
sorted: 31 out of: 47
sorted: 32 out of: 47
sorted: 33 out of: 47
sorted: 34 out of: 47
sorted: 35 out of: 47
sorted: 36 out of: 47
sorted: 37 out of: 47
sorted: 38 out of: 47
sorted: 39 out of: 47
sorted: 40 out of: 47
sorted: 41 out of: 47
sorted: 42 out of: 47
sorted: 43 out of: 47
sorted: 44 out of: 47
sorted: 45 out of: 47
sorted: 46 out of: 47
sorted: 47 out of: 47
Cluster size: 47
there were : 43 values
sorted: 1 out of: 43
sorted: 2 out of: 43
sorted: 3 out of: 43
sorted: 4 out of: 43
sorted: 5 out of: 43
sorted: 6 out of: 43
sorted: 7 out of: 43
sorted: 8 out of: 43
sorted: 9 out of: 43
sorted: 10 out of: 43
sorted: 11 out of: 43
sorted: 12 out of: 43
sorted: 13 out of: 43
sorted: 14 out of: 43
sorted: 15 out of: 43
sorted: 16 out of: 43
sorted: 17 out of: 43
sorted: 18 out of: 43
sorted: 19 out of: 43
sorted: 20 out of: 43
sorted: 21 out of: 43
sorted: 22 out of: 43
sorted: 23 out of: 43
sorted: 24 out of: 43
sorted: 25 out of: 43
sorted: 26 out of: 43
sorted: 27 out of: 43
sorted: 28 out of: 43
sorted: 29 out of: 43
sorted: 30 out of: 43
sorted: 31 out of: 43
sorted: 32 out of: 43
sorted: 33 out of: 43
sorted: 34 out of: 43
sorted: 35 out of: 43
sorted: 36 out of: 43
sorted: 37 out of: 43
sorted: 38 out of: 43
sorted: 39 out of: 43
sorted: 40 out of: 43
sorted: 41 out of: 43
sorted: 42 out of: 43
sorted: 43 out of: 43
Cluster size: 43
there were : 43 values
sorted: 1 out of: 43
sorted: 2 out of: 43
sorted: 3 out of: 43
sorted: 4 out of: 43
sorted: 5 out of: 43
sorted: 6 out of: 43
sorted: 7 out of: 43
sorted: 8 out of: 43
sorted: 9 out of: 43
sorted: 10 out of: 43
sorted: 11 out of: 43
sorted: 12 out of: 43
sorted: 13 out of: 43
sorted: 14 out of: 43
sorted: 15 out of: 43
sorted: 16 out of: 43
sorted: 17 out of: 43
sorted: 18 out of: 43
sorted: 19 out of: 43
sorted: 20 out of: 43
sorted: 21 out of: 43
sorted: 22 out of: 43
sorted: 23 out of: 43
sorted: 24 out of: 43
sorted: 25 out of: 43
sorted: 26 out of: 43
sorted: 27 out of: 43
sorted: 28 out of: 43
sorted: 29 out of: 43
sorted: 30 out of: 43
sorted: 31 out of: 43
sorted: 32 out of: 43
sorted: 33 out of: 43
sorted: 34 out of: 43
sorted: 35 out of: 43
sorted: 36 out of: 43
sorted: 37 out of: 43
sorted: 38 out of: 43
sorted: 39 out of: 43
sorted: 40 out of: 43
sorted: 41 out of: 43
sorted: 42 out of: 43
sorted: 43 out of: 43
Cluster size: 43
there were : 42 values
sorted: 1 out of: 42
sorted: 2 out of: 42
sorted: 3 out of: 42
sorted: 4 out of: 42
sorted: 5 out of: 42
sorted: 6 out of: 42
sorted: 7 out of: 42
sorted: 8 out of: 42
sorted: 9 out of: 42
sorted: 10 out of: 42
sorted: 11 out of: 42
sorted: 12 out of: 42
sorted: 13 out of: 42
sorted: 14 out of: 42
sorted: 15 out of: 42
sorted: 16 out of: 42
sorted: 17 out of: 42
sorted: 18 out of: 42
sorted: 19 out of: 42
sorted: 20 out of: 42
sorted: 21 out of: 42
sorted: 22 out of: 42
sorted: 23 out of: 42
sorted: 24 out of: 42
sorted: 25 out of: 42
sorted: 26 out of: 42
sorted: 27 out of: 42
sorted: 28 out of: 42
sorted: 29 out of: 42
sorted: 30 out of: 42
sorted: 31 out of: 42
sorted: 32 out of: 42
sorted: 33 out of: 42
sorted: 34 out of: 42
sorted: 35 out of: 42
sorted: 36 out of: 42
sorted: 37 out of: 42
sorted: 38 out of: 42
sorted: 39 out of: 42
sorted: 40 out of: 42
sorted: 41 out of: 42
sorted: 42 out of: 42
Cluster size: 42
there were : 37 values
sorted: 1 out of: 37
sorted: 2 out of: 37
sorted: 3 out of: 37
sorted: 4 out of: 37
sorted: 5 out of: 37
sorted: 6 out of: 37
sorted: 7 out of: 37
sorted: 8 out of: 37
sorted: 9 out of: 37
sorted: 10 out of: 37
sorted: 11 out of: 37
sorted: 12 out of: 37
sorted: 13 out of: 37
sorted: 14 out of: 37
sorted: 15 out of: 37
sorted: 16 out of: 37
sorted: 17 out of: 37
sorted: 18 out of: 37
sorted: 19 out of: 37
sorted: 20 out of: 37
sorted: 21 out of: 37
sorted: 22 out of: 37
sorted: 23 out of: 37
sorted: 24 out of: 37
sorted: 25 out of: 37
sorted: 26 out of: 37
sorted: 27 out of: 37
sorted: 28 out of: 37
sorted: 29 out of: 37
sorted: 30 out of: 37
sorted: 31 out of: 37
sorted: 32 out of: 37
sorted: 33 out of: 37
sorted: 34 out of: 37
sorted: 35 out of: 37
sorted: 36 out of: 37
sorted: 37 out of: 37
Cluster size: 37
there were : 36 values
sorted: 1 out of: 36
sorted: 2 out of: 36
sorted: 3 out of: 36
sorted: 4 out of: 36
sorted: 5 out of: 36
sorted: 6 out of: 36
sorted: 7 out of: 36
sorted: 8 out of: 36
sorted: 9 out of: 36
sorted: 10 out of: 36
sorted: 11 out of: 36
sorted: 12 out of: 36
sorted: 13 out of: 36
sorted: 14 out of: 36
sorted: 15 out of: 36
sorted: 16 out of: 36
sorted: 17 out of: 36
sorted: 18 out of: 36
sorted: 19 out of: 36
sorted: 20 out of: 36
sorted: 21 out of: 36
sorted: 22 out of: 36
sorted: 23 out of: 36
sorted: 24 out of: 36
sorted: 25 out of: 36
sorted: 26 out of: 36
sorted: 27 out of: 36
sorted: 28 out of: 36
sorted: 29 out of: 36
sorted: 30 out of: 36
sorted: 31 out of: 36
sorted: 32 out of: 36
sorted: 33 out of: 36
sorted: 34 out of: 36
sorted: 35 out of: 36
sorted: 36 out of: 36
Cluster size: 36
there were : 36 values
sorted: 1 out of: 36
sorted: 2 out of: 36
sorted: 3 out of: 36
sorted: 4 out of: 36
sorted: 5 out of: 36
sorted: 6 out of: 36
sorted: 7 out of: 36
sorted: 8 out of: 36
sorted: 9 out of: 36
sorted: 10 out of: 36
sorted: 11 out of: 36
sorted: 12 out of: 36
sorted: 13 out of: 36
sorted: 14 out of: 36
sorted: 15 out of: 36
sorted: 16 out of: 36
sorted: 17 out of: 36
sorted: 18 out of: 36
sorted: 19 out of: 36
sorted: 20 out of: 36
sorted: 21 out of: 36
sorted: 22 out of: 36
sorted: 23 out of: 36
sorted: 24 out of: 36
sorted: 25 out of: 36
sorted: 26 out of: 36
sorted: 27 out of: 36
sorted: 28 out of: 36
sorted: 29 out of: 36
sorted: 30 out of: 36
sorted: 31 out of: 36
sorted: 32 out of: 36
sorted: 33 out of: 36
sorted: 34 out of: 36
sorted: 35 out of: 36
sorted: 36 out of: 36
Cluster size: 36
there were : 34 values
sorted: 1 out of: 34
sorted: 2 out of: 34
sorted: 3 out of: 34
sorted: 4 out of: 34
sorted: 5 out of: 34
sorted: 6 out of: 34
sorted: 7 out of: 34
sorted: 8 out of: 34
sorted: 9 out of: 34
sorted: 10 out of: 34
sorted: 11 out of: 34
sorted: 12 out of: 34
sorted: 13 out of: 34
sorted: 14 out of: 34
sorted: 15 out of: 34
sorted: 16 out of: 34
sorted: 17 out of: 34
sorted: 18 out of: 34
sorted: 19 out of: 34
sorted: 20 out of: 34
sorted: 21 out of: 34
sorted: 22 out of: 34
sorted: 23 out of: 34
sorted: 24 out of: 34
sorted: 25 out of: 34
sorted: 26 out of: 34
sorted: 27 out of: 34
sorted: 28 out of: 34
sorted: 29 out of: 34
sorted: 30 out of: 34
sorted: 31 out of: 34
sorted: 32 out of: 34
sorted: 33 out of: 34
sorted: 34 out of: 34
Cluster size: 34
there were : 30 values
sorted: 1 out of: 30
sorted: 2 out of: 30
sorted: 3 out of: 30
sorted: 4 out of: 30
sorted: 5 out of: 30
sorted: 6 out of: 30
sorted: 7 out of: 30
sorted: 8 out of: 30
sorted: 9 out of: 30
sorted: 10 out of: 30
sorted: 11 out of: 30
sorted: 12 out of: 30
sorted: 13 out of: 30
sorted: 14 out of: 30
sorted: 15 out of: 30
sorted: 16 out of: 30
sorted: 17 out of: 30
sorted: 18 out of: 30
sorted: 19 out of: 30
sorted: 20 out of: 30
sorted: 21 out of: 30
sorted: 22 out of: 30
sorted: 23 out of: 30
sorted: 24 out of: 30
sorted: 25 out of: 30
sorted: 26 out of: 30
sorted: 27 out of: 30
sorted: 28 out of: 30
sorted: 29 out of: 30
sorted: 30 out of: 30
Cluster size: 30
there were : 30 values
sorted: 1 out of: 30
sorted: 2 out of: 30
sorted: 3 out of: 30
sorted: 4 out of: 30
sorted: 5 out of: 30
sorted: 6 out of: 30
sorted: 7 out of: 30
sorted: 8 out of: 30
sorted: 9 out of: 30
sorted: 10 out of: 30
sorted: 11 out of: 30
sorted: 12 out of: 30
sorted: 13 out of: 30
sorted: 14 out of: 30
sorted: 15 out of: 30
sorted: 16 out of: 30
sorted: 17 out of: 30
sorted: 18 out of: 30
sorted: 19 out of: 30
sorted: 20 out of: 30
sorted: 21 out of: 30
sorted: 22 out of: 30
sorted: 23 out of: 30
sorted: 24 out of: 30
sorted: 25 out of: 30
sorted: 26 out of: 30
sorted: 27 out of: 30
sorted: 28 out of: 30
sorted: 29 out of: 30
sorted: 30 out of: 30
Cluster size: 30
there were : 28 values
sorted: 1 out of: 28
sorted: 2 out of: 28
sorted: 3 out of: 28
sorted: 4 out of: 28
sorted: 5 out of: 28
sorted: 6 out of: 28
sorted: 7 out of: 28
sorted: 8 out of: 28
sorted: 9 out of: 28
sorted: 10 out of: 28
sorted: 11 out of: 28
sorted: 12 out of: 28
sorted: 13 out of: 28
sorted: 14 out of: 28
sorted: 15 out of: 28
sorted: 16 out of: 28
sorted: 17 out of: 28
sorted: 18 out of: 28
sorted: 19 out of: 28
sorted: 20 out of: 28
sorted: 21 out of: 28
sorted: 22 out of: 28
sorted: 23 out of: 28
sorted: 24 out of: 28
sorted: 25 out of: 28
sorted: 26 out of: 28
sorted: 27 out of: 28
sorted: 28 out of: 28
Cluster size: 28
there were : 27 values
sorted: 1 out of: 27
sorted: 2 out of: 27
sorted: 3 out of: 27
sorted: 4 out of: 27
sorted: 5 out of: 27
sorted: 6 out of: 27
sorted: 7 out of: 27
sorted: 8 out of: 27
sorted: 9 out of: 27
sorted: 10 out of: 27
sorted: 11 out of: 27
sorted: 12 out of: 27
sorted: 13 out of: 27
sorted: 14 out of: 27
sorted: 15 out of: 27
sorted: 16 out of: 27
sorted: 17 out of: 27
sorted: 18 out of: 27
sorted: 19 out of: 27
sorted: 20 out of: 27
sorted: 21 out of: 27
sorted: 22 out of: 27
sorted: 23 out of: 27
sorted: 24 out of: 27
sorted: 25 out of: 27
sorted: 26 out of: 27
sorted: 27 out of: 27
Cluster size: 27
there were : 25 values
sorted: 1 out of: 25
sorted: 2 out of: 25
sorted: 3 out of: 25
sorted: 4 out of: 25
sorted: 5 out of: 25
sorted: 6 out of: 25
sorted: 7 out of: 25
sorted: 8 out of: 25
sorted: 9 out of: 25
sorted: 10 out of: 25
sorted: 11 out of: 25
sorted: 12 out of: 25
sorted: 13 out of: 25
sorted: 14 out of: 25
sorted: 15 out of: 25
sorted: 16 out of: 25
sorted: 17 out of: 25
sorted: 18 out of: 25
sorted: 19 out of: 25
sorted: 20 out of: 25
sorted: 21 out of: 25
sorted: 22 out of: 25
sorted: 23 out of: 25
sorted: 24 out of: 25
sorted: 25 out of: 25
Cluster size: 25
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 24 values
sorted: 1 out of: 24
sorted: 2 out of: 24
sorted: 3 out of: 24
sorted: 4 out of: 24
sorted: 5 out of: 24
sorted: 6 out of: 24
sorted: 7 out of: 24
sorted: 8 out of: 24
sorted: 9 out of: 24
sorted: 10 out of: 24
sorted: 11 out of: 24
sorted: 12 out of: 24
sorted: 13 out of: 24
sorted: 14 out of: 24
sorted: 15 out of: 24
sorted: 16 out of: 24
sorted: 17 out of: 24
sorted: 18 out of: 24
sorted: 19 out of: 24
sorted: 20 out of: 24
sorted: 21 out of: 24
sorted: 22 out of: 24
sorted: 23 out of: 24
sorted: 24 out of: 24
Cluster size: 24
there were : 23 values
sorted: 1 out of: 23
sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';203;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';203;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\0LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check if home insurance quote is requested)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Prepare acceptance pack)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Verify repayment agreement)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Check if home insurance quote is requested)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Prepare acceptance pack)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Prepare acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Verify repayment agreement)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Check if home insurance quote is requested)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Prepare acceptance pack)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Verify repayment agreement)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Check if home insurance quote is requested)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Prepare acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Verify repayment agreement)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% AtMostOne(Check if home insurance quote is requested)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Verify repayment agreement)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% AtMostOne(Prepare acceptance pack)                                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Check if home insurance quote is requested)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Verify repayment agreement)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% AtMostOne(Verify repayment agreement)                                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess eligibility)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';187;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';187;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\1LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan application rejected)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Reject application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess eligibility)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotSuccession(Assess eligibility,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan application rejected)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan application rejected)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Reject application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Reject application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess eligibility)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Receive updated application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Cancel application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan application rejected)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Reject application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Reject application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Appraise property)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess loan risk)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application received)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Reject application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess eligibility)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess loan risk)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check credit history)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application received)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess eligibility)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotCoExistence(Send acceptance pack,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess eligibility)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application received)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotCoExistence(Send home insurance quote,  Appraise property)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess eligibility)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess loan risk)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check  application  form completeness)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check credit history)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application received)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';165;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';165;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\2LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Approve application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Approve application,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Approve application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% AtMostOne(Approve application)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Approve application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Approve application,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Approve application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Approve application,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Approve application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Approve application,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Receive updated application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Receive updated application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Return application back to applicant)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Return application back to applicant)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Approve application)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application approved)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% AtMostOne(Loan  application approved)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';165;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';165;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\3LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% AtMostOne(Cancel application)                                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Cancel application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Cancel application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Cancel application,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application received)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Cancel application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application canceled)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% AtMostOne(Loan  application canceled)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';133;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';133;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\4LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% Participation(Approve application)                                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% Participation(Cancel application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Cancel application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application canceled)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotSuccession(Check if home insurance quote is requested,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% End(Loan  application approved)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application approved)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% End(Loan  application canceled)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application canceled)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotSuccession(Prepare acceptance pack,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AlternateSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AlternateSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Reject application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% Participation(Send acceptance pack)                                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% Participation(Send home insurance quote)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check if home insurance quote is requested)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Prepare acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Verify repayment agreement)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';99;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';99;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\5LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity 2] => {
		100.000% Precedence(Receive updated application,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Added Activity 2)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Reject application,  Added Activity 2)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Reject application,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Added Activity 2)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Added Activity 2)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Added Activity 2] => {
		100.000% Participation(Added Activity 2)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Send home insurance quote)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Added Activity 2)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Added Activity 2)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Added Activity 2)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Added Activity 2)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotSuccession(Assess eligibility,  Added Activity 2)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Added Activity 2)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Added Activity 2)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Added Activity 2)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Added Activity 2)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Added Activity 2)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Added Activity 2)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Added Activity 2)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Added Activity 2)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Added Activity 2)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Added Activity 2)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Added Activity 2)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Added Activity 2)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Added Activity 2)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Added Activity 2)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Added Activity 2)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Added Activity 2)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Added Activity 2)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Added Activity 2)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Added Activity 2)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Added Activity 2)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Reject application,  Added Activity 2)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Reject application,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Reject application,  Added Activity 2)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Reject application,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Added Activity 2)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Added Activity 2)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Added Activity 2)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Added Activity 2)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Added Activity 2)     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Added Activity 2)      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Added Activity 2)       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Added Activity 2)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Added Activity 2)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Added Activity 2)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Added Activity 2)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Added Activity 2)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Added Activity 2)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Added Activity 2)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';90;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';90;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\6LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		100.000% Precedence(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% Response(Check  application  form completeness,  Receive updated application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check  application  form completeness,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Receive updated application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Return application back to applicant)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check  application  form completeness)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Return application back to applicant,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';78;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';78;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\7LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Added Activity 2] => {
		100.000% Precedence(Added Activity,  Added Activity 2)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Added Activity 2)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Added Activity,  Added Activity 2)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Added Activity 2,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity 2,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Added Activity 2,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Added Activity] => {
		100.000% CoExistence(Added Activity,  Added Activity 2)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity,  Added Activity 2)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Added Activity 2)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Added Activity,  Added Activity 2)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Added Activity 2)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Added Activity 2)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Added Activity 2)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Added Activity 2)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity 2] => {
		100.000% AtMostOne(Added Activity 2)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Added Activity)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity 2,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity 2,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Added Activity 2,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity 2,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity 2,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity 2,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity 2,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Added Activity 2)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Added Activity 2)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Added Activity 2)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Added Activity 2)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Added Activity 2)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Added Activity 2)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Added Activity 2)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Added Activity 2)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Added Activity 2)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Added Activity 2)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Added Activity 2)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Added Activity 2)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Added Activity 2)     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';75;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';75;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\8LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send acceptance pack)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send acceptance pack)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% AtMostOne(Send acceptance pack)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send acceptance pack,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';75;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';75;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\9LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send home insurance quote)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send home insurance quote)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% AtMostOne(Send home insurance quote)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send home insurance quote,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';70;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';70;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\10LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Check if home insurance quote is requested)       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Prepare acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';70;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';70;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\11LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Appraise property] => {
		100.000% NotCoExistence(Appraise property,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send home insurance quote)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotCoExistence(Assess eligibility,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotCoExistence(Assess loan risk,  Receive updated application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotCoExistence(Check credit history,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Send home insurance quote)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Appraise property)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Appraise property)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess eligibility)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess loan risk)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess loan risk)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check credit history)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application received)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Appraise property)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Appraise property)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess eligibility)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess eligibility)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess loan risk)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess loan risk)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check credit history)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check credit history)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application received)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotSuccession(Send acceptance pack,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Approve application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application approved)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';68;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';68;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\12LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check credit history)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';60;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';60;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\13LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Approve application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application approved)           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check  application  form completeness)          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check credit history)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Approve application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application approved)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';59;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';59;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\14LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Send home insurance quote,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send home insurance quote,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send home insurance quote,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Verify repayment agreement)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send home insurance quote,  Verify repayment agreement)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Send home insurance quote)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send home insurance quote)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check  application  form completeness)          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check credit history)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';58;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';58;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\15LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Cancel application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Cancel application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application canceled)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application canceled)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Approve application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainResponse(Check  application  form completeness,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% Participation(Check if home insurance quote is requested)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% Participation(Prepare acceptance pack)                                                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% Participation(Verify repayment agreement)                                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';54;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';54;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\16LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Loan  application received,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Approve application] => {
		100.000% Precedence(Loan  application received,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		100.000% Precedence(Loan  application received,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Loan  application received,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		100.000% Precedence(Loan  application received,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		100.000% Precedence(Loan  application received,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Loan  application received,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Loan  application received,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Loan  application received,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Loan  application received,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Loan  application received,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		100.000% Precedence(Loan  application received,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		100.000% Precedence(Loan  application received,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		100.000% Precedence(Loan  application received,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% Precedence(Loan  application received,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Loan  application received,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Loan  application received,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Loan  application received,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Loan  application received)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Loan  application received)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% Init(Loan  application received)                                                                conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application received)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';53;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';53;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\17LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Added Activity,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity] => {
		100.000% AtMostOne(Added Activity)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Added Activity)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Added Activity)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';48;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';48;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\18LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Send acceptance pack,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send acceptance pack,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send acceptance pack,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send acceptance pack,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send acceptance pack,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Verify repayment agreement)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send acceptance pack,  Verify repayment agreement)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send acceptance pack)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send acceptance pack)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Appraise property)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess eligibility)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check credit history)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';47;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';47;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\19LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Reject application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% RespondedExistence(Loan application rejected,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% AtMostOne(Reject application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Reject application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Reject application,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';43;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';43;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\20LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Receive updated application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Return application back to applicant)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';43;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';43;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\21LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Cancel application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application canceled)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';42;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';42;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\22LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan application rejected)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% AtMostOne(Loan application rejected)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';37;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';37;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\23LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Receive updated application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		100.000% Precedence(Receive updated application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Receive updated application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		100.000% Precedence(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Receive updated application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Receive updated application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Receive updated application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		100.000% Precedence(Receive updated application,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% Precedence(Receive updated application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% Participation(Receive updated application)                                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Return application back to applicant)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% Participation(Return application back to applicant)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';36;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';36;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\24LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application received)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application received)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application received)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application received)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application received)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AtMostOne(Loan  application received)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Appraise property)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Assess eligibility)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Assess loan risk)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Check  application  form completeness)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Loan  application received,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Check credit history)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';36;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';36;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\25LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';34;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';34;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\26LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Receive updated application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Return application back to applicant)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Appraise property)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess eligibility)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess loan risk)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check credit history)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';30;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';30;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\27LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Approve application] => {
		100.000% RespondedExistence(Approve application,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% RespondedExistence(Loan  application approved,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% RespondedExistence(Send acceptance pack,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';30;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';30;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\28LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Receive updated application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Return application back to applicant)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan application rejected)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';28;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';28;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\29LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		100.000% Precedence(Receive updated application,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Receive updated application,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Receive updated application,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		100.000% Precedence(Receive updated application,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Receive updated application,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Receive updated application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Receive updated application,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		
	}

	[Return application back to applicant] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';27;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';27;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\30LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Approve application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Approve application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Approve application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application approved)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application approved)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Send home insurance quote)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Send home insurance quote)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Send home insurance quote)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Added Activity)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';25;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';25;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\31LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% ChainResponse(Assess eligibility,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Added Activity)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Added Activity)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\32LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Added Activity] => {
		100.000% CoExistence(Added Activity,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Added Activity)       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\33LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Cancel application] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Reject application] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Reject application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send acceptance pack)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send acceptance pack)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Cancel application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Cancel application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application canceled)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application canceled)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Send acceptance pack)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send acceptance pack)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Reject application)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Reject application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}


sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 23 values
sorted: 1 out of: 23
sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23
sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 23 values
sorted: 1 out of: 23
sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23
sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 23 values
sorted: 1 out of: 23
sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23
sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 21 values
sorted: 1 out of: 21
sorted: 2 out of: 21
sorted: 3 out of: 21
sorted: 4 out of: 21
sorted: 5 out of: 21
sorted: 6 out of: 21
sorted: 7 out of: 21
sorted: 8 out of: 21
sorted: 9 out of: 21
sorted: 10 out of: 21
sorted: 11 out of: 21
sorted: 12 out of: 21
sorted: 13 out of: 21
sorted: 14 out of: 21
sorted: 15 out of: 21
sorted: 16 out of: 21
sorted: 17 out of: 21
sorted: 18 out of: 21
sorted: 19 out of: 21
sorted: 20 out of: 21
sorted: 21 out of: 21
Cluster size: 21
there were : 20 values
sorted: 1 out of: 20
sorted: 2 out of: 20
sorted: 3 out of: 20
sorted: 4 out of: 20
sorted: 5 out of: 20
sorted: 6 out of: 20
sorted: 7 out of: 20
sorted: 8 out of: 20
sorted: 9 out of: 20
sorted: 10 out of: 20
sorted: 11 out of: 20
sorted: 12 out of: 20
sorted: 13 out of: 20
sorted: 14 out of: 20
sorted: 15 out of: 20
sorted: 16 out of: 20
sorted: 17 out of: 20
sorted: 18 out of: 20
sorted: 19 out of: 20
sorted: 20 out of: 20
Cluster size: 20
there were : 19 values
sorted: 1 out of: 19
sorted: 2 out of: 19
sorted: 3 out of: 19
sorted: 4 out of: 19
sorted: 5 out of: 19
sorted: 6 out of: 19
sorted: 7 out of: 19
sorted: 8 out of: 19
sorted: 9 out of: 19
sorted: 10 out of: 19
sorted: 11 out of: 19
sorted: 12 out of: 19
sorted: 13 out of: 19
sorted: 14 out of: 19
sorted: 15 out of: 19
sorted: 16 out of: 19
sorted: 17 out of: 19
sorted: 18 out of: 19
sorted: 19 out of: 19
Cluster size: 19
there were : 19 values
sorted: 1 out of: 19
sorted: 2 out of: 19
sorted: 3 out of: 19
sorted: 4 out of: 19
sorted: 5 out of: 19
sorted: 6 out of: 19
sorted: 7 out of: 19
sorted: 8 out of: 19
sorted: 9 out of: 19
sorted: 10 out of: 19
sorted: 11 out of: 19
sorted: 12 out of: 19
sorted: 13 out of: 19
sorted: 14 out of: 19
sorted: 15 out of: 19
sorted: 16 out of: 19
sorted: 17 out of: 19
sorted: 18 out of: 19
sorted: 19 out of: 19
Cluster size: 19
there were : 18 values
sorted: 1 out of: 18
sorted: 2 out of: 18
sorted: 3 out of: 18
sorted: 4 out of: 18
sorted: 5 out of: 18
sorted: 6 out of: 18
sorted: 7 out of: 18
sorted: 8 out of: 18
sorted: 9 out of: 18
sorted: 10 out of: 18
sorted: 11 out of: 18
sorted: 12 out of: 18
sorted: 13 out of: 18
sorted: 14 out of: 18
sorted: 15 out of: 18
sorted: 16 out of: 18
sorted: 17 out of: 18
sorted: 18 out of: 18
Cluster size: 18
there were : 18 values
sorted: 1 out of: 18
sorted: 2 out of: 18
sorted: 3 out of: 18
sorted: 4 out of: 18
sorted: 5 out of: 18
sorted: 6 out of: 18
sorted: 7 out of: 18
sorted: 8 out of: 18
sorted: 9 out of: 18
sorted: 10 out of: 18
sorted: 11 out of: 18
sorted: 12 out of: 18
sorted: 13 out of: 18
sorted: 14 out of: 18
sorted: 15 out of: 18
sorted: 16 out of: 18
sorted: 17 out of: 18
sorted: 18 out of: 18
Cluster size: 18
there were : 18 values
sorted: 1 out of: 18
sorted: 2 out of: 18
sorted: 3 out of: 18
sorted: 4 out of: 18
sorted: 5 out of: 18
sorted: 6 out of: 18
sorted: 7 out of: 18
sorted: 8 out of: 18
sorted: 9 out of: 18
sorted: 10 out of: 18
sorted: 11 out of: 18
sorted: 12 out of: 18
sorted: 13 out of: 18
sorted: 14 out of: 18
sorted: 15 out of: 18
sorted: 16 out of: 18
sorted: 17 out of: 18
sorted: 18 out of: 18
Cluster size: 18
there were : 18 values
sorted: 1 out of: 18
sorted: 2 out of: 18
sorted: 3 out of: 18
sorted: 4 out of: 18
sorted: 5 out of: 18
sorted: 6 out of: 18
sorted: 7 out of: 18
sorted: 8 out of: 18
sorted: 9 out of: 18
sorted: 10 out of: 18
sorted: 11 out of: 18
sorted: 12 out of: 18
sorted: 13 out of: 18
sorted: 14 out of: 18
sorted: 15 out of: 18
sorted: 16 out of: 18
sorted: 17 out of: 18
sorted: 18 out of: 18
Cluster size: 18
there were : 18 values
sorted: 1 out of: 18
sorted: 2 out of: 18
sorted: 3 out of: 18
sorted: 4 out of: 18
sorted: 5 out of: 18
sorted: 6 out of: 18
sorted: 7 out of: 18
sorted: 8 out of: 18
sorted: 9 out of: 18
sorted: 10 out of: 18
sorted: 11 out of: 18
sorted: 12 out of: 18
sorted: 13 out of: 18
sorted: 14 out of: 18
sorted: 15 out of: 18
sorted: 16 out of: 18
sorted: 17 out of: 18
sorted: 18 out of: 18
Cluster size: 18
there were : 18 values
sorted: 1 out of: 18
sorted: 2 out of: 18
sorted: 3 out of: 18
sorted: 4 out of: 18
sorted: 5 out of: 18
sorted: 6 out of: 18
sorted: 7 out of: 18
sorted: 8 out of: 18
sorted: 9 out of: 18
sorted: 10 out of: 18
sorted: 11 out of: 18
sorted: 12 out of: 18
sorted: 13 out of: 18
sorted: 14 out of: 18
sorted: 15 out of: 18
sorted: 16 out of: 18
sorted: 17 out of: 18
sorted: 18 out of: 18
Cluster size: 18
there were : 17 values
sorted: 1 out of: 17
sorted: 2 out of: 17
sorted: 3 out of: 17
sorted: 4 out of: 17
sorted: 5 out of: 17
sorted: 6 out of: 17
sorted: 7 out of: 17
sorted: 8 out of: 17
sorted: 9 out of: 17
sorted: 10 out of: 17
sorted: 11 out of: 17
sorted: 12 out of: 17
sorted: 13 out of: 17
sorted: 14 out of: 17
sorted: 15 out of: 17
sorted: 16 out of: 17
sorted: 17 out of: 17
Cluster size: 17
there were : 16 values
sorted: 1 out of: 16
sorted: 2 out of: 16
sorted: 3 out of: 16
sorted: 4 out of: 16
sorted: 5 out of: 16
sorted: 6 out of: 16
sorted: 7 out of: 16
sorted: 8 out of: 16
sorted: 9 out of: 16
sorted: 10 out of: 16
sorted: 11 out of: 16
sorted: 12 out of: 16
sorted: 13 out of: 16
sorted: 14 out of: 16
sorted: 15 out of: 16
sorted: 16 out of: 16
Cluster size: 16
there were : 15 values
sorted: 1 out of: 15
sorted: 2 out of: 15
sorted: 3 out of: 15
sorted: 4 out of: 15
sorted: 5 out of: 15
sorted: 6 out of: 15
sorted: 7 out of: 15
sorted: 8 out of: 15
sorted: 9 out of: 15
sorted: 10 out of: 15
sorted: 11 out of: 15
sorted: 12 out of: 15
sorted: 13 out of: 15
sorted: 14 out of: 15
sorted: 15 out of: 15
Cluster size: 15
there were : 15 values
sorted: 1 out of: 15
sorted: 2 out of: 15
sorted: 3 out of: 15
sorted: 4 out of: 15
sorted: 5 out of: 15
sorted: 6 out of: 15
sorted: 7 out of: 15
sorted: 8 out of: 15
sorted: 9 out of: 15
sorted: 10 out of: 15
sorted: 11 out of: 15
sorted: 12 out of: 15
sorted: 13 out of: 15
sorted: 14 out of: 15
sorted: 15 out of: 15
Cluster size: 15
INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\34LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan application rejected)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan application rejected)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan application rejected)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Loan application rejected)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';24;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';24;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\35LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\36LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity 2] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Added Activity 2] => {
		100.000% CoExistence(Added Activity 2,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity 2,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Added Activity 2)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Added Activity 2)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Added Activity 2)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Added Activity 2)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Added Activity 2)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Added Activity 2)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Added Activity 2)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Added Activity 2)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Added Activity 2)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Added Activity 2)       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\37LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan application rejected)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan application rejected)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\38LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Reject application] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Reject application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Reject application)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Reject application)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\39LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Send acceptance pack)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send acceptance pack)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotCoExistence(Send acceptance pack,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send acceptance pack,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';21;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';21;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\40LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Reject application)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';20;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';20;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\41LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Receive updated application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Added Activity] => {
		100.000% Participation(Added Activity)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotChainSuccession(Assess eligibility,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';19;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';19;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\42LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Added Activity] => {
		100.000% NotCoExistence(Added Activity,  Appraise property)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Assess loan risk)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check credit history)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application received)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotSuccession(Assess eligibility,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AlternateSuccession(Receive updated application,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AlternateSuccession(Return application back to applicant,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';19;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';19;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\43LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AlternateSuccession(Receive updated application,  Appraise property)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess loan risk)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AlternateSuccession(Return application back to applicant,  Appraise property)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Appraise property)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess eligibility)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess eligibility)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess loan risk)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess loan risk)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check credit history)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check credit history)            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';18;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';18;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\44LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Cancel application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application canceled)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Send acceptance pack)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Added Activity)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Added Activity)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Added Activity)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Added Activity)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';18;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';18;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\45LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity 2] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Added Activity 2] => {
		100.000% NotChainSuccession(Added Activity 2,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity 2,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity 2,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity 2,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Added Activity 2)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Added Activity 2)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Added Activity 2)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Added Activity 2)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Added Activity 2)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Added Activity 2)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';18;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';18;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\46LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% ChainPrecedence(Check credit history,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% ChainPrecedence(Appraise property,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% ChainSuccession(Appraise property,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainResponse(Check  application  form completeness,  Check credit history)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan application rejected)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% ChainSuccession(Check credit history,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Assess loan risk)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% End(Loan application rejected)                                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan application rejected)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Loan application rejected)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan application rejected)          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';18;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';18;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\47LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Approve application] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Reject application] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Approve application)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application approved)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Send home insurance quote)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Reject application)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';18;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';18;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\48LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Cancel application] => {
		100.000% Precedence(Send home insurance quote,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send home insurance quote,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Send home insurance quote)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send home insurance quote,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';18;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';18;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\49LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Check if home insurance quote is requested] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Receive updated application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';17;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';17;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\50LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Reject application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Reject application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Reject application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% Succession(Reject application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Reject application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Reject application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Reject application,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Reject application,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Reject application,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan application rejected)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan application rejected)        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';16;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';16;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\51LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[Appraise property] => {
		100.000% NotCoExistence(Appraise property,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotCoExistence(Assess eligibility,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotCoExistence(Assess loan risk,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% Init(Check  application  form completeness)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application received)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotCoExistence(Check credit history,  Loan  application received)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Appraise property)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Assess eligibility)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Assess loan risk)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Check  application  form completeness)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Check credit history)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';15;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';15;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\52LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Check  application  form completeness] => {
		100.000% ChainSuccession(Check  application  form completeness,  Appraise property)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Check credit history)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Return application back to applicant)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotChainSuccession(Loan  application received,  Check  application  form completeness)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AtMostOne(Receive updated application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Receive updated application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AtMostOne(Return application back to applicant)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';15;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';15;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\53LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% Participation(Reject application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';14;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';14;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\54LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Assess loan risk,  Appraise property)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Appraise property)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess loan risk,  Appraise property)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Appraise property,  Assess eligibility)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		
	}

	[Appraise property] => {
		100.000% ChainSuccession(Appraise property,  Assess eligibility)      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess eligibility)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Assess loan risk)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% Succession(Assess loan risk,  Appraise property)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Appraise property)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Appraise property)        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Appraise property)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Appraise property)      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Appraise property)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';12;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';12;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\55LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity 2] => {
		100.000% Precedence(Appraise property,  Added Activity 2)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess eligibility,  Added Activity 2)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Added Activity 2)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess loan risk,  Added Activity 2)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Added Activity 2)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check  application  form completeness,  Added Activity 2)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check  application  form completeness,  Added Activity 2)    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check credit history,  Added Activity 2)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Added Activity 2)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Loan  application received,  Added Activity 2)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Added Activity 2)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		
	}

	[Assess eligibility] => {
		
	}

	[Assess loan risk] => {
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';12;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';12;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\56LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Assess loan risk,  Assess eligibility)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Appraise property,  Assess loan risk)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Assess loan risk)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Assess eligibility)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Assess loan risk)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Assess loan risk)     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Assess loan risk)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Assess loan risk)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotChainSuccession(Assess loan risk,  Appraise property)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Appraise property)           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Assess eligibility)        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Assess eligibility)          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';11;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';11;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\57LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Appraise property)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Appraise property,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Check credit history)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Appraise property,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% Succession(Appraise property,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check credit history)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Check credit history)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Appraise property)                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';10;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';10;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\58LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Appraise property,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess eligibility,  Added Activity)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess loan risk,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check  application  form completeness,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check credit history,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		
	}

	[Assess eligibility] => {
		
	}

	[Assess loan risk] => {
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';9;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';9;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\59LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Check credit history,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Appraise property)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Check credit history)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		100.000% Succession(Check credit history,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Appraise property)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Appraise property)                      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';9;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';9;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\60LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		100.000% AlternatePrecedence(Loan  application received,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Loan  application received,  Check  application  form completeness)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		
	}

	[ Receive updated application] => {
		100.000% AlternatePrecedence(Loan  application received,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% AlternatePrecedence(Loan  application received,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AtMostOne(Check  application  form completeness)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Appraise property)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess eligibility)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess loan risk)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check credit history)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';9;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';9;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\61LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Loan application rejected] => {
		100.000% Precedence(Reject application,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Reject application,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Reject application,  Loan application rejected)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Reject application] => {
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Reject application)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Loan application rejected)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Reject application,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Reject application,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Reject application,  Loan application rejected)        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Reject application,  Loan application rejected)          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';8;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';8;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\62LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Reject application] => {
		
	}

	[Added Activity] => {
		100.000% Succession(Added Activity,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Added Activity,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Added Activity)          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';8;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';8;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\63LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Cancel application] => {
		100.000% Precedence(Receive updated application,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Receive updated application,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		
	}

	[Return application back to applicant] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';8;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';8;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\64LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Appraise property)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Appraise property)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess eligibility)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess loan risk)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check credit history)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check credit history)           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Loan  application received,  Check  application  form completeness)        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';7;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';7;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\65LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess loan risk] => {
		100.000% ChainPrecedence(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotChainSuccession(Check credit history,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';6;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';6;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\66LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Reject application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Reject application)           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotChainSuccession(Assess eligibility,  Reject application)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Added Activity)           conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';3;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';3;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\67LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Loan application rejected] => {
		100.000% ChainPrecedence(Added Activity,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity] => {
		100.000% ChainSuccession(Added Activity,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Loan application rejected)      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';3;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';3;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\68LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Reject application] => {
		100.000% Precedence(Added Activity,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Added Activity,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Added Activity] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';2;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';2;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\69LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Loan  application received,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';2;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';2;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\70LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Reject application] => {
		
	}

	[Assess eligibility] => {
		100.000% ChainSuccession(Assess eligibility,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';1;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';1;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\71LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% ChainPrecedence(Assess eligibility,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';1;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';1;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS14_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\72LS14_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Reject application] => {
		100.000% ChainPrecedence(Assess eligibility,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		
	}

there were : 14 values
sorted: 1 out of: 14
sorted: 2 out of: 14
sorted: 3 out of: 14
sorted: 4 out of: 14
sorted: 5 out of: 14
sorted: 6 out of: 14
sorted: 7 out of: 14
sorted: 8 out of: 14
sorted: 9 out of: 14
sorted: 10 out of: 14
sorted: 11 out of: 14
sorted: 12 out of: 14
sorted: 13 out of: 14
sorted: 14 out of: 14
Cluster size: 14
there were : 12 values
sorted: 1 out of: 12
sorted: 2 out of: 12
sorted: 3 out of: 12
sorted: 4 out of: 12
sorted: 5 out of: 12
sorted: 6 out of: 12
sorted: 7 out of: 12
sorted: 8 out of: 12
sorted: 9 out of: 12
sorted: 10 out of: 12
sorted: 11 out of: 12
sorted: 12 out of: 12
Cluster size: 12
there were : 12 values
sorted: 1 out of: 12
sorted: 2 out of: 12
sorted: 3 out of: 12
sorted: 4 out of: 12
sorted: 5 out of: 12
sorted: 6 out of: 12
sorted: 7 out of: 12
sorted: 8 out of: 12
sorted: 9 out of: 12
sorted: 10 out of: 12
sorted: 11 out of: 12
sorted: 12 out of: 12
Cluster size: 12
there were : 11 values
sorted: 1 out of: 11
sorted: 2 out of: 11
sorted: 3 out of: 11
sorted: 4 out of: 11
sorted: 5 out of: 11
sorted: 6 out of: 11
sorted: 7 out of: 11
sorted: 8 out of: 11
sorted: 9 out of: 11
sorted: 10 out of: 11
sorted: 11 out of: 11
Cluster size: 11
there were : 10 values
sorted: 1 out of: 10
sorted: 2 out of: 10
sorted: 3 out of: 10
sorted: 4 out of: 10
sorted: 5 out of: 10
sorted: 6 out of: 10
sorted: 7 out of: 10
sorted: 8 out of: 10
sorted: 9 out of: 10
sorted: 10 out of: 10
Cluster size: 10
there were : 9 values
sorted: 1 out of: 9
sorted: 2 out of: 9
sorted: 3 out of: 9
sorted: 4 out of: 9
sorted: 5 out of: 9
sorted: 6 out of: 9
sorted: 7 out of: 9
sorted: 8 out of: 9
sorted: 9 out of: 9
Cluster size: 9
there were : 9 values
sorted: 1 out of: 9
sorted: 2 out of: 9
sorted: 3 out of: 9
sorted: 4 out of: 9
sorted: 5 out of: 9
sorted: 6 out of: 9
sorted: 7 out of: 9
sorted: 8 out of: 9
sorted: 9 out of: 9
Cluster size: 9
there were : 9 values
sorted: 1 out of: 9
sorted: 2 out of: 9
sorted: 3 out of: 9
sorted: 4 out of: 9
sorted: 5 out of: 9
sorted: 6 out of: 9
sorted: 7 out of: 9
sorted: 8 out of: 9
sorted: 9 out of: 9
Cluster size: 9
there were : 8 values
sorted: 1 out of: 8
sorted: 2 out of: 8
sorted: 3 out of: 8
sorted: 4 out of: 8
sorted: 5 out of: 8
sorted: 6 out of: 8
sorted: 7 out of: 8
sorted: 8 out of: 8
Cluster size: 8
there were : 8 values
sorted: 1 out of: 8
sorted: 2 out of: 8
sorted: 3 out of: 8
sorted: 4 out of: 8
sorted: 5 out of: 8
sorted: 6 out of: 8
sorted: 7 out of: 8
sorted: 8 out of: 8
Cluster size: 8
there were : 8 values
sorted: 1 out of: 8
sorted: 2 out of: 8
sorted: 3 out of: 8
sorted: 4 out of: 8
sorted: 5 out of: 8
sorted: 6 out of: 8
sorted: 7 out of: 8
sorted: 8 out of: 8
Cluster size: 8
there were : 7 values
sorted: 1 out of: 7
sorted: 2 out of: 7
sorted: 3 out of: 7
sorted: 4 out of: 7
sorted: 5 out of: 7
sorted: 6 out of: 7
sorted: 7 out of: 7
Cluster size: 7
there were : 6 values
sorted: 1 out of: 6
sorted: 2 out of: 6
sorted: 3 out of: 6
sorted: 4 out of: 6
sorted: 5 out of: 6
sorted: 6 out of: 6
Cluster size: 6
there were : 3 values
sorted: 1 out of: 3
sorted: 2 out of: 3
sorted: 3 out of: 3
Cluster size: 3
there were : 3 values
sorted: 1 out of: 3
sorted: 2 out of: 3
sorted: 3 out of: 3
Cluster size: 3
there were : 2 values
sorted: 1 out of: 2
sorted: 2 out of: 2
Cluster size: 2
there were : 2 values
sorted: 1 out of: 2
sorted: 2 out of: 2
Cluster size: 2
there were : 1 values
sorted: 1 out of: 1
Cluster size: 1
there were : 1 values
sorted: 1 out of: 1
Cluster size: 1
number of clusters: 73
x lines: 
[40, 80, 160, 187]
clusters were ordered in the : 
[60, 56, 19, 21, 40, 35, 61, 37, 27, 20, 6, 46, 47, 43, 49, 28, 73, 1, 44, 4, 53, 54, 62, 24, 72, 22, 8, 45, 33, 26, 12, 2, 15, 30, 65, 5, 39, 7, 51, 55, 31, 10, 14, 23, 11, 38, 34, 32, 48, 64, 42, 41, 9, 52, 29, 36, 58, 63, 69, 66, 67, 3, 17, 25, 57, 59, 18, 13, 16, 70, 50, 71, 68]
- - - start drawing drift map
- - - start processing the timeseries in clusters
without DRIFT: 186
current DRIFT (curve length): 521.5741014920237
current DRIFT (polyine length): 2063.2048056003077
without DRIFT: 186
current DRIFT (curve length): 191.7577640286117
current DRIFT (polyine length): 253.36025690517783
without DRIFT: 186
current DRIFT (curve length): 486.93750509065853
current DRIFT (polyine length): 1676.9352628338472
without DRIFT: 186
current DRIFT (curve length): 496.19726894842347
current DRIFT (polyine length): 1718.1832620523764
without DRIFT: 186
current DRIFT (curve length): 213.51782068828538
current DRIFT (polyine length): 459.8711704513015
without DRIFT: 186
current DRIFT (curve length): 226.07213447492646
current DRIFT (polyine length): 255.94499246244098
without DRIFT: 186
current DRIFT (curve length): 596.2450430275769
current DRIFT (polyine length): 2125.293086615308
without DRIFT: 186
current DRIFT (curve length): 297.32923756818394
current DRIFT (polyine length): 613.2570422379843
without DRIFT: 186
current DRIFT (curve length): 480.3706374668077
current DRIFT (polyine length): 1662.9553293125389
without DRIFT: 186
current DRIFT (curve length): 511.1251689875502
current DRIFT (polyine length): 1798.4828155652717
without DRIFT: 186
current DRIFT (curve length): 564.8197863093047
current DRIFT (polyine length): 2257.6259864386993
without DRIFT: 186
current DRIFT (curve length): 225.54678849729876
current DRIFT (polyine length): 489.6208292941153
without DRIFT: 186
current DRIFT (curve length): 352.7457459604305
current DRIFT (polyine length): 1104.7391110011306
without DRIFT: 186
current DRIFT (curve length): 359.298835534046
current DRIFT (polyine length): 1134.8744944448047
without DRIFT: 186
current DRIFT (curve length): 376.3375319348327
current DRIFT (polyine length): 1210.5116710327534
without DRIFT: 186
current DRIFT (curve length): 351.1369724060319
current DRIFT (polyine length): 1152.4653979918887
without DRIFT: 186
current DRIFT (curve length): 790.3703630453889
current DRIFT (polyine length): 1777.2932966283206
without DRIFT: 186
current DRIFT (curve length): 539.164651951377
current DRIFT (polyine length): 1847.434928997939
without DRIFT: 186
current DRIFT (curve length): 378.1753665665558
current DRIFT (polyine length): 1194.8469904110443
without DRIFT: 186
current DRIFT (curve length): 545.1688330003809
current DRIFT (polyine length): 1762.3592350923716
without DRIFT: 186
current DRIFT (curve length): 402.27854903755883
current DRIFT (polyine length): 1310.6915946646673
without DRIFT: 186
current DRIFT (curve length): 412.56224476525756
current DRIFT (polyine length): 1371.123296069255
without DRIFT: 186
current DRIFT (curve length): 515.476403354217
current DRIFT (polyine length): 2042.6946448723966
without DRIFT: 186
current DRIFT (curve length): 560.6774673699015
current DRIFT (polyine length): 1986.268808744206
without DRIFT: 186
current DRIFT (curve length): 537.14443387598
current DRIFT (polyine length): 1154.7910168753895
without DRIFT: 186
current DRIFT (curve length): 511.50702619185523
current DRIFT (polyine length): 1816.629138222214
without DRIFT: 186
current DRIFT (curve length): 679.3536579270972
current DRIFT (polyine length): 2462.563498432222
without DRIFT: 186
current DRIFT (curve length): 362.618629317784
current DRIFT (polyine length): 1062.6441236653566
without DRIFT: 186
current DRIFT (curve length): 391.08577175575493
current DRIFT (polyine length): 1371.8874931242428
without DRIFT: 186
current DRIFT (curve length): 731.8910327019278
current DRIFT (polyine length): 2440.272888369636
without DRIFT: 186
current DRIFT (curve length): 326.0447031627993
current DRIFT (polyine length): 851.9680437743684
without DRIFT: 186
current DRIFT (curve length): 406.65606344482853
current DRIFT (polyine length): 1256.5692582563104
without DRIFT: 186
current DRIFT (curve length): 540.4455611448893
current DRIFT (polyine length): 1981.696203987784
without DRIFT: 186
current DRIFT (curve length): 371.6018745261455
current DRIFT (polyine length): 1190.455759456413
without DRIFT: 186
current DRIFT (curve length): 371.7816771381566
current DRIFT (polyine length): 1415.60682564404
without DRIFT: 186
current DRIFT (curve length): 469.24085083833086
current DRIFT (polyine length): 1455.4397882799806
without DRIFT: 186
current DRIFT (curve length): 274.1087802895195
current DRIFT (polyine length): 642.7976053707742
without DRIFT: 186
current DRIFT (curve length): 559.1907837793894
current DRIFT (polyine length): 2254.40587077395
without DRIFT: 186
current DRIFT (curve length): 487.6063031339307
current DRIFT (polyine length): 1546.7129810679794
without DRIFT: 186
current DRIFT (curve length): 411.96627829942264
current DRIFT (polyine length): 1283.299788478381
without DRIFT: 186
current DRIFT (curve length): 224.35922480971797
current DRIFT (polyine length): 478.343035193088
without DRIFT: 186
current DRIFT (curve length): 392.19440888540635
current DRIFT (polyine length): 1251.0823748856312
without DRIFT: 186
current DRIFT (curve length): 224.44937145741685
current DRIFT (polyine length): 328.61586028938984
without DRIFT: 186
current DRIFT (curve length): 476.72342838876085
current DRIFT (polyine length): 1611.306458614437
without DRIFT: 186
current DRIFT (curve length): 394.34507911866075
current DRIFT (polyine length): 1215.8183661252244
without DRIFT: 186
current DRIFT (curve length): 291.6416367021944
current DRIFT (polyine length): 561.3596688305659
without DRIFT: 186
current DRIFT (curve length): 335.3547708452731
current DRIFT (polyine length): 893.4587474320035
without DRIFT: 186
current DRIFT (curve length): 370.38286015206467
current DRIFT (polyine length): 1196.713257121037
without DRIFT: 186
current DRIFT (curve length): 508.8669499303061
current DRIFT (polyine length): 1721.4289745159258
without DRIFT: 186
current DRIFT (curve length): 508.883335701593
current DRIFT (polyine length): 2007.639482110317
without DRIFT: 186
current DRIFT (curve length): 259.105681847134
current DRIFT (polyine length): 523.244399606732
without DRIFT: 186
current DRIFT (curve length): 338.28597103367565
current DRIFT (polyine length): 636.6549295527983
without DRIFT: 186
current DRIFT (curve length): 448.46342967853076
current DRIFT (polyine length): 1493.7450672711525
without DRIFT: 186
current DRIFT (curve length): 414.950140456163
current DRIFT (polyine length): 1243.7676752811976
without DRIFT: 186
current DRIFT (curve length): 566.2856931414317
current DRIFT (polyine length): 1713.9385560083936
without DRIFT: 186
current DRIFT (curve length): 376.67588960998035
current DRIFT (polyine length): 400.2803331084847
without DRIFT: 186
current DRIFT (curve length): 566.2856931414311
current DRIFT (polyine length): 1713.9385560083924
without DRIFT: 186
current DRIFT (curve length): 643.1593533442355
current DRIFT (polyine length): 2086.534843807962
without DRIFT: 186
current DRIFT (curve length): 368.06683297688016
current DRIFT (polyine length): 372.00267377767625
without DRIFT: 186
current DRIFT (curve length): 643.1593533442361
current DRIFT (polyine length): 2086.5348438079623
without DRIFT: 186
current DRIFT (curve length): 609.4508167633358
current DRIFT (polyine length): 1941.446253807818
without DRIFT: 186
current DRIFT (curve length): 509.7382093077606
current DRIFT (polyine length): 1513.9783784177253
without DRIFT: 186
current DRIFT (curve length): 493.5602294009284
current DRIFT (polyine length): 1202.1729709293186
without DRIFT: 186
current DRIFT (curve length): 765.5712696474891
current DRIFT (polyine length): 2850.014622986134
without DRIFT: 186
current DRIFT (curve length): 390.72727998193074
current DRIFT (polyine length): 1126.9502075850178
without DRIFT: 186
current DRIFT (curve length): 462.242520658263
current DRIFT (polyine length): 1310.88989049505
without DRIFT: 186
current DRIFT (curve length): 533.4751908938784
current DRIFT (polyine length): 1459.1974137012753
without DRIFT: 186
current DRIFT (curve length): 443.30068561100427
current DRIFT (polyine length): 986.3194802694794
without DRIFT: 186
current DRIFT (curve length): 585.7195797231257
current DRIFT (polyine length): 1628.6186971954257
without DRIFT: 186
current DRIFT (curve length): 849.2878481350857
current DRIFT (polyine length): 1644.405026781048
without DRIFT: 186
current DRIFT (curve length): 399.25837254633524
current DRIFT (polyine length): 935.648426384909
without DRIFT: 186
current DRIFT (curve length): 619.7844622910661
current DRIFT (polyine length): 1226.2103625227094
without DRIFT: 186
current DRIFT (curve length): 808.0193624182623
current DRIFT (polyine length): 1722.884782530298
