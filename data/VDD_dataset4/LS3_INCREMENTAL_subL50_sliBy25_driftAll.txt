there are : 2496 values left after deleting 100, and 0s
there were: 2590 vectors with zeros removed
there were: 314 vectors with hundreds removed
there were: 0 vectors with non changing values removed
there were : 243 values
sorted: 1 out of: 243
sorted: 2 out of: 243
sorted: 3 out of: 243
sorted: 4 out of: 243
sorted: 5 out of: 243
sorted: 6 out of: 243
sorted: 7 out of: 243
sorted: 8 out of: 243
sorted: 9 out of: 243
sorted: 10 out of: 243
sorted: 11 out of: 243
sorted: 12 out of: 243
sorted: 13 out of: 243
sorted: 14 out of: 243
sorted: 15 out of: 243
sorted: 16 out of: 243
sorted: 17 out of: 243
sorted: 18 out of: 243
sorted: 19 out of: 243
sorted: 20 out of: 243
sorted: 21 out of: 243
sorted: 22 out of: 243
sorted: 23 out of: 243
sorted: 24 out of: 243
sorted: 25 out of: 243
sorted: 26 out of: 243
sorted: 27 out of: 243
sorted: 28 out of: 243
sorted: 29 out of: 243
sorted: 30 out of: 243
sorted: 31 out of: 243
sorted: 32 out of: 243
sorted: 33 out of: 243
sorted: 34 out of: 243
sorted: 35 out of: 243
sorted: 36 out of: 243
sorted: 37 out of: 243
sorted: 38 out of: 243
sorted: 39 out of: 243
sorted: 40 out of: 243
sorted: 41 out of: 243
sorted: 42 out of: 243
sorted: 43 out of: 243
sorted: 44 out of: 243
sorted: 45 out of: 243
sorted: 46 out of: 243
sorted: 47 out of: 243
sorted: 48 out of: 243
sorted: 49 out of: 243
sorted: 50 out of: 243
sorted: 51 out of: 243
sorted: 52 out of: 243
sorted: 53 out of: 243
sorted: 54 out of: 243
sorted: 55 out of: 243
sorted: 56 out of: 243
sorted: 57 out of: 243
sorted: 58 out of: 243
sorted: 59 out of: 243
sorted: 60 out of: 243
sorted: 61 out of: 243
sorted: 62 out of: 243
sorted: 63 out of: 243
sorted: 64 out of: 243
sorted: 65 out of: 243
sorted: 66 out of: 243
sorted: 67 out of: 243
sorted: 68 out of: 243
sorted: 69 out of: 243
sorted: 70 out of: 243
sorted: 71 out of: 243
sorted: 72 out of: 243
sorted: 73 out of: 243
sorted: 74 out of: 243
sorted: 75 out of: 243
sorted: 76 out of: 243
sorted: 77 out of: 243
sorted: 78 out of: 243
sorted: 79 out of: 243
sorted: 80 out of: 243
sorted: 81 out of: 243
sorted: 82 out of: 243
sorted: 83 out of: 243
sorted: 84 out of: 243
sorted: 85 out of: 243
sorted: 86 out of: 243
sorted: 87 out of: 243
sorted: 88 out of: 243
sorted: 89 out of: 243
sorted: 90 out of: 243
sorted: 91 out of: 243
sorted: 92 out of: 243
sorted: 93 out of: 243
sorted: 94 out of: 243
sorted: 95 out of: 243
sorted: 96 out of: 243
sorted: 97 out of: 243
sorted: 98 out of: 243
sorted: 99 out of: 243
sorted: 100 out of: 243
sorted: 101 out of: 243
sorted: 102 out of: 243
sorted: 103 out of: 243
sorted: 104 out of: 243
sorted: 105 out of: 243
sorted: 106 out of: 243
sorted: 107 out of: 243
sorted: 108 out of: 243
sorted: 109 out of: 243
sorted: 110 out of: 243
sorted: 111 out of: 243
sorted: 112 out of: 243
sorted: 113 out of: 243
sorted: 114 out of: 243
sorted: 115 out of: 243
sorted: 116 out of: 243
sorted: 117 out of: 243
sorted: 118 out of: 243
sorted: 119 out of: 243
sorted: 120 out of: 243
sorted: 121 out of: 243
sorted: 122 out of: 243
sorted: 123 out of: 243
sorted: 124 out of: 243
sorted: 125 out of: 243
sorted: 126 out of: 243
sorted: 127 out of: 243
sorted: 128 out of: 243
sorted: 129 out of: 243
sorted: 130 out of: 243
sorted: 131 out of: 243
sorted: 132 out of: 243
sorted: 133 out of: 243
sorted: 134 out of: 243
sorted: 135 out of: 243
sorted: 136 out of: 243
sorted: 137 out of: 243
sorted: 138 out of: 243
sorted: 139 out of: 243
sorted: 140 out of: 243
sorted: 141 out of: 243
sorted: 142 out of: 243
sorted: 143 out of: 243
sorted: 144 out of: 243
sorted: 145 out of: 243
sorted: 146 out of: 243
sorted: 147 out of: 243
sorted: 148 out of: 243
sorted: 149 out of: 243
sorted: 150 out of: 243
sorted: 151 out of: 243
sorted: 152 out of: 243
sorted: 153 out of: 243
sorted: 154 out of: 243
sorted: 155 out of: 243
sorted: 156 out of: 243
sorted: 157 out of: 243
sorted: 158 out of: 243
sorted: 159 out of: 243
sorted: 160 out of: 243
sorted: 161 out of: 243
sorted: 162 out of: 243
sorted: 163 out of: 243
sorted: 164 out of: 243
sorted: 165 out of: 243
sorted: 166 out of: 243
sorted: 167 out of: 243
sorted: 168 out of: 243
sorted: 169 out of: 243
sorted: 170 out of: 243
sorted: 171 out of: 243
sorted: 172 out of: 243
sorted: 173 out of: 243
sorted: 174 out of: 243
sorted: 175 out of: 243
sorted: 176 out of: 243
sorted: 177 out of: 243
sorted: 178 out of: 243
sorted: 179 out of: 243
sorted: 180 out of: 243
sorted: 181 out of: 243
sorted: 182 out of: 243
sorted: 183 out of: 243
sorted: 184 out of: 243
sorted: 185 out of: 243
sorted: 186 out of: 243
sorted: 187 out of: 243
sorted: 188 out of: 243
sorted: 189 out of: 243
sorted: 190 out of: 243
sorted: 191 out of: 243
sorted: 192 out of: 243
sorted: 193 out of: 243
sorted: 194 out of: 243
sorted: 195 out of: 243
sorted: 196 out of: 243
sorted: 197 out of: 243
sorted: 198 out of: 243
sorted: 199 out of: 243
sorted: 200 out of: 243
sorted: 201 out of: 243
sorted: 202 out of: 243
sorted: 203 out of: 243
sorted: 204 out of: 243
sorted: 205 out of: 243
sorted: 206 out of: 243
sorted: 207 out of: 243
sorted: 208 out of: 243
sorted: 209 out of: 243
sorted: 210 out of: 243
sorted: 211 out of: 243
sorted: 212 out of: 243
sorted: 213 out of: 243
sorted: 214 out of: 243
sorted: 215 out of: 243
sorted: 216 out of: 243
sorted: 217 out of: 243
sorted: 218 out of: 243
sorted: 219 out of: 243
sorted: 220 out of: 243
sorted: 221 out of: 243
sorted: 222 out of: 243
sorted: 223 out of: 243
sorted: 224 out of: 243
sorted: 225 out of: 243
sorted: 226 out of: 243
sorted: 227 out of: 243
sorted: 228 out of: 243
sorted: 229 out of: 243
sorted: 230 out of: 243
sorted: 231 out of: 243
sorted: 232 out of: 243
sorted: 233 out of: 243
sorted: 234 out of: 243
sorted: 235 out of: 243
sorted: 236 out of: 243
sorted: 237 out of: 243
sorted: 238 out of: 243
sorted: 239 out of: 243
sorted: 240 out of: 243
sorted: 241 out of: 243
sorted: 242 out of: 243
sorted: 243 out of: 243
Cluster size: 243
there were : 203 values
sorted: 1 out of: 203
sorted: 2 out of: 203
sorted: 3 out of: 203
sorted: 4 out of: 203
sorted: 5 out of: 203
sorted: 6 out of: 203
sorted: 7 out of: 203
sorted: 8 out of: 203
sorted: 9 out of: 203
sorted: 10 out of: 203
sorted: 11 out of: 203
sorted: 12 out of: 203
sorted: 13 out of: 203
sorted: 14 out of: 203
sorted: 15 out of: 203
sorted: 16 out of: 203
sorted: 17 out of: 203
sorted: 18 out of: 203
sorted: 19 out of: 203
sorted: 20 out of: 203
sorted: 21 out of: 203
sorted: 22 out of: 203
sorted: 23 out of: 203
sorted: 24 out of: 203
sorted: 25 out of: 203
sorted: 26 out of: 203
sorted: 27 out of: 203
sorted: 28 out of: 203
sorted: 29 out of: 203
sorted: 30 out of: 203
sorted: 31 out of: 203
sorted: 32 out of: 203
sorted: 33 out of: 203
sorted: 34 out of: 203
sorted: 35 out of: 203
sorted: 36 out of: 203
sorted: 37 out of: 203
sorted: 38 out of: 203
sorted: 39 out of: 203
sorted: 40 out of: 203
sorted: 41 out of: 203
sorted: 42 out of: 203
sorted: 43 out of: 203
sorted: 44 out of: 203
sorted: 45 out of: 203
sorted: 46 out of: 203
sorted: 47 out of: 203
sorted: 48 out of: 203
sorted: 49 out of: 203
sorted: 50 out of: 203
sorted: 51 out of: 203
sorted: 52 out of: 203
sorted: 53 out of: 203
sorted: 54 out of: 203
sorted: 55 out of: 203
sorted: 56 out of: 203
sorted: 57 out of: 203
sorted: 58 out of: 203
sorted: 59 out of: 203
sorted: 60 out of: 203
sorted: 61 out of: 203
sorted: 62 out of: 203
sorted: 63 out of: 203
sorted: 64 out of: 203
sorted: 65 out of: 203
sorted: 66 out of: 203
sorted: 67 out of: 203
sorted: 68 out of: 203
sorted: 69 out of: 203
sorted: 70 out of: 203
sorted: 71 out of: 203
sorted: 72 out of: 203
sorted: 73 out of: 203
sorted: 74 out of: 203
sorted: 75 out of: 203
sorted: 76 out of: 203
sorted: 77 out of: 203
sorted: 78 out of: 203
sorted: 79 out of: 203
sorted: 80 out of: 203
sorted: 81 out of: 203
sorted: 82 out of: 203
sorted: 83 out of: 203
sorted: 84 out of: 203
sorted: 85 out of: 203
sorted: 86 out of: 203
sorted: 87 out of: 203
sorted: 88 out of: 203
sorted: 89 out of: 203
sorted: 90 out of: 203
sorted: 91 out of: 203
sorted: 92 out of: 203
sorted: 93 out of: 203
sorted: 94 out of: 203
sorted: 95 out of: 203
sorted: 96 out of: 203
sorted: 97 out of: 203
sorted: 98 out of: 203
sorted: 99 out of: 203
sorted: 100 out of: 203
sorted: 101 out of: 203
sorted: 102 out of: 203
sorted: 103 out of: 203
sorted: 104 out of: 203
sorted: 105 out of: 203
sorted: 106 out of: 203
sorted: 107 out of: 203
sorted: 108 out of: 203
sorted: 109 out of: 203
sorted: 110 out of: 203
sorted: 111 out of: 203
sorted: 112 out of: 203
sorted: 113 out of: 203
sorted: 114 out of: 203
sorted: 115 out of: 203
sorted: 116 out of: 203
sorted: 117 out of: 203
sorted: 118 out of: 203
sorted: 119 out of: 203
sorted: 120 out of: 203
sorted: 121 out of: 203
sorted: 122 out of: 203
sorted: 123 out of: 203
sorted: 124 out of: 203
sorted: 125 out of: 203
sorted: 126 out of: 203
sorted: 127 out of: 203
sorted: 128 out of: 203
sorted: 129 out of: 203
sorted: 130 out of: 203
sorted: 131 out of: 203
sorted: 132 out of: 203
sorted: 133 out of: 203
sorted: 134 out of: 203
sorted: 135 out of: 203
sorted: 136 out of: 203
sorted: 137 out of: 203
sorted: 138 out of: 203
sorted: 139 out of: 203
sorted: 140 out of: 203
sorted: 141 out of: 203
sorted: 142 out of: 203
sorted: 143 out of: 203
sorted: 144 out of: 203
sorted: 145 out of: 203
sorted: 146 out of: 203
sorted: 147 out of: 203
sorted: 148 out of: 203
sorted: 149 out of: 203
sorted: 150 out of: 203
sorted: 151 out of: 203
sorted: 152 out of: 203
sorted: 153 out of: 203
sorted: 154 out of: 203
sorted: 155 out of: 203
sorted: 156 out of: 203
sorted: 157 out of: 203
sorted: 158 out of: 203
sorted: 159 out of: 203
sorted: 160 out of: 203
sorted: 161 out of: 203
sorted: 162 out of: 203
sorted: 163 out of: 203
sorted: 164 out of: 203
sorted: 165 out of: 203
sorted: 166 out of: 203
sorted: 167 out of: 203
sorted: 168 out of: 203
sorted: 169 out of: 203
sorted: 170 out of: 203
sorted: 171 out of: 203
sorted: 172 out of: 203
sorted: 173 out of: 203
sorted: 174 out of: 203
sorted: 175 out of: 203
sorted: 176 out of: 203
sorted: 177 out of: 203
sorted: 178 out of: 203
sorted: 179 out of: 203
sorted: 180 out of: 203
sorted: 181 out of: 203
sorted: 182 out of: 203
sorted: 183 out of: 203
sorted: 184 out of: 203
sorted: 185 out of: 203
sorted: 186 out of: 203
sorted: 187 out of: 203
sorted: 188 out of: 203
sorted: 189 out of: 203
sorted: 190 out of: 203
sorted: 191 out of: 203
sorted: 192 out of: 203
sorted: 193 out of: 203
sorted: 194 out of: 203
sorted: 195 out of: 203
sorted: 196 out of: 203
sorted: 197 out of: 203
sorted: 198 out of: 203
sorted: 199 out of: 203
sorted: 200 out of: 203
sorted: 201 out of: 203
sorted: 202 out of: 203
sorted: 203 out of: 203
Cluster size: 203
there were : 184 values
sorted: 1 out of: 184
sorted: 2 out of: 184
sorted: 3 out of: 184
sorted: 4 out of: 184
sorted: 5 out of: 184
sorted: 6 out of: 184
sorted: 7 out of: 184
sorted: 8 out of: 184
sorted: 9 out of: 184
sorted: 10 out of: 184
sorted: 11 out of: 184
sorted: 12 out of: 184
sorted: 13 out of: 184
sorted: 14 out of: 184
sorted: 15 out of: 184
sorted: 16 out of: 184
sorted: 17 out of: 184
sorted: 18 out of: 184
sorted: 19 out of: 184
sorted: 20 out of: 184
sorted: 21 out of: 184
sorted: 22 out of: 184
sorted: 23 out of: 184
sorted: 24 out of: 184
sorted: 25 out of: 184
sorted: 26 out of: 184
sorted: 27 out of: 184
sorted: 28 out of: 184
sorted: 29 out of: 184
sorted: 30 out of: 184
sorted: 31 out of: 184
sorted: 32 out of: 184
sorted: 33 out of: 184
sorted: 34 out of: 184
sorted: 35 out of: 184
sorted: 36 out of: 184
sorted: 37 out of: 184
sorted: 38 out of: 184
sorted: 39 out of: 184
sorted: 40 out of: 184
sorted: 41 out of: 184
sorted: 42 out of: 184
sorted: 43 out of: 184
sorted: 44 out of: 184
sorted: 45 out of: 184
sorted: 46 out of: 184
sorted: 47 out of: 184
sorted: 48 out of: 184
sorted: 49 out of: 184
sorted: 50 out of: 184
sorted: 51 out of: 184
sorted: 52 out of: 184
sorted: 53 out of: 184
sorted: 54 out of: 184
sorted: 55 out of: 184
sorted: 56 out of: 184
sorted: 57 out of: 184
sorted: 58 out of: 184
sorted: 59 out of: 184
sorted: 60 out of: 184
sorted: 61 out of: 184
sorted: 62 out of: 184
sorted: 63 out of: 184
sorted: 64 out of: 184
sorted: 65 out of: 184
sorted: 66 out of: 184
sorted: 67 out of: 184
sorted: 68 out of: 184
sorted: 69 out of: 184
sorted: 70 out of: 184
sorted: 71 out of: 184
sorted: 72 out of: 184
sorted: 73 out of: 184
sorted: 74 out of: 184
sorted: 75 out of: 184
sorted: 76 out of: 184
sorted: 77 out of: 184
sorted: 78 out of: 184
sorted: 79 out of: 184
sorted: 80 out of: 184
sorted: 81 out of: 184
sorted: 82 out of: 184
sorted: 83 out of: 184
sorted: 84 out of: 184
sorted: 85 out of: 184
sorted: 86 out of: 184
sorted: 87 out of: 184
sorted: 88 out of: 184
sorted: 89 out of: 184
sorted: 90 out of: 184
sorted: 91 out of: 184
sorted: 92 out of: 184
sorted: 93 out of: 184
sorted: 94 out of: 184
sorted: 95 out of: 184
sorted: 96 out of: 184
sorted: 97 out of: 184
sorted: 98 out of: 184
sorted: 99 out of: 184
sorted: 100 out of: 184
sorted: 101 out of: 184
sorted: 102 out of: 184
sorted: 103 out of: 184
sorted: 104 out of: 184
sorted: 105 out of: 184
sorted: 106 out of: 184
sorted: 107 out of: 184
sorted: 108 out of: 184
sorted: 109 out of: 184
sorted: 110 out of: 184
sorted: 111 out of: 184
sorted: 112 out of: 184
sorted: 113 out of: 184
sorted: 114 out of: 184
sorted: 115 out of: 184
sorted: 116 out of: 184
sorted: 117 out of: 184
sorted: 118 out of: 184
sorted: 119 out of: 184
sorted: 120 out of: 184
sorted: 121 out of: 184
sorted: 122 out of: 184
sorted: 123 out of: 184
sorted: 124 out of: 184
sorted: 125 out of: 184
sorted: 126 out of: 184
sorted: 127 out of: 184
sorted: 128 out of: 184
sorted: 129 out of: 184
sorted: 130 out of: 184
sorted: 131 out of: 184
sorted: 132 out of: 184
sorted: 133 out of: 184
sorted: 134 out of: 184
sorted: 135 out of: 184
sorted: 136 out of: 184
sorted: 137 out of: 184
sorted: 138 out of: 184
sorted: 139 out of: 184
sorted: 140 out of: 184
sorted: 141 out of: 184
sorted: 142 out of: 184
sorted: 143 out of: 184
sorted: 144 out of: 184
sorted: 145 out of: 184
sorted: 146 out of: 184
sorted: 147 out of: 184
sorted: 148 out of: 184
sorted: 149 out of: 184
sorted: 150 out of: 184
sorted: 151 out of: 184
sorted: 152 out of: 184
sorted: 153 out of: 184
sorted: 154 out of: 184
sorted: 155 out of: 184
sorted: 156 out of: 184
sorted: 157 out of: 184
sorted: 158 out of: 184
sorted: 159 out of: 184
sorted: 160 out of: 184
sorted: 161 out of: 184
sorted: 162 out of: 184
sorted: 163 out of: 184
sorted: 164 out of: 184
sorted: 165 out of: 184
sorted: 166 out of: 184
sorted: 167 out of: 184
sorted: 168 out of: 184
sorted: 169 out of: 184
sorted: 170 out of: 184
sorted: 171 out of: 184
sorted: 172 out of: 184
sorted: 173 out of: 184
sorted: 174 out of: 184
sorted: 175 out of: 184
sorted: 176 out of: 184
sorted: 177 out of: 184
sorted: 178 out of: 184
sorted: 179 out of: 184
sorted: 180 out of: 184
sorted: 181 out of: 184
sorted: 182 out of: 184
sorted: 183 out of: 184
sorted: 184 out of: 184
Cluster size: 184
there were : 177 values
sorted: 1 out of: 177
sorted: 2 out of: 177
sorted: 3 out of: 177
sorted: 4 out of: 177
sorted: 5 out of: 177
sorted: 6 out of: 177
sorted: 7 out of: 177
sorted: 8 out of: 177
sorted: 9 out of: 177
sorted: 10 out of: 177
sorted: 11 out of: 177
sorted: 12 out of: 177
sorted: 13 out of: 177
sorted: 14 out of: 177
sorted: 15 out of: 177
sorted: 16 out of: 177
sorted: 17 out of: 177
sorted: 18 out of: 177
sorted: 19 out of: 177
sorted: 20 out of: 177
sorted: 21 out of: 177
sorted: 22 out of: 177
sorted: 23 out of: 177
sorted: 24 out of: 177
sorted: 25 out of: 177
sorted: 26 out of: 177
sorted: 27 out of: 177
sorted: 28 out of: 177
sorted: 29 out of: 177
sorted: 30 out of: 177
sorted: 31 out of: 177
sorted: 32 out of: 177
sorted: 33 out of: 177
sorted: 34 out of: 177
sorted: 35 out of: 177
sorted: 36 out of: 177
sorted: 37 out of: 177
sorted: 38 out of: 177
sorted: 39 out of: 177
sorted: 40 out of: 177
sorted: 41 out of: 177
sorted: 42 out of: 177
sorted: 43 out of: 177
sorted: 44 out of: 177
sorted: 45 out of: 177
sorted: 46 out of: 177
sorted: 47 out of: 177
sorted: 48 out of: 177
sorted: 49 out of: 177
sorted: 50 out of: 177
sorted: 51 out of: 177
sorted: 52 out of: 177
sorted: 53 out of: 177
sorted: 54 out of: 177
sorted: 55 out of: 177
sorted: 56 out of: 177
sorted: 57 out of: 177
sorted: 58 out of: 177
sorted: 59 out of: 177
sorted: 60 out of: 177
sorted: 61 out of: 177
sorted: 62 out of: 177
sorted: 63 out of: 177
sorted: 64 out of: 177
sorted: 65 out of: 177
sorted: 66 out of: 177
sorted: 67 out of: 177
sorted: 68 out of: 177
sorted: 69 out of: 177
sorted: 70 out of: 177
sorted: 71 out of: 177
sorted: 72 out of: 177
sorted: 73 out of: 177
sorted: 74 out of: 177
sorted: 75 out of: 177
sorted: 76 out of: 177
sorted: 77 out of: 177
sorted: 78 out of: 177
sorted: 79 out of: 177
sorted: 80 out of: 177
sorted: 81 out of: 177
sorted: 82 out of: 177
sorted: 83 out of: 177
sorted: 84 out of: 177
sorted: 85 out of: 177
sorted: 86 out of: 177
sorted: 87 out of: 177
sorted: 88 out of: 177
sorted: 89 out of: 177
sorted: 90 out of: 177
sorted: 91 out of: 177
sorted: 92 out of: 177
sorted: 93 out of: 177
sorted: 94 out of: 177
sorted: 95 out of: 177
sorted: 96 out of: 177
sorted: 97 out of: 177
sorted: 98 out of: 177
sorted: 99 out of: 177
sorted: 100 out of: 177
sorted: 101 out of: 177
sorted: 102 out of: 177
sorted: 103 out of: 177
sorted: 104 out of: 177
sorted: 105 out of: 177
sorted: 106 out of: 177
sorted: 107 out of: 177
sorted: 108 out of: 177
sorted: 109 out of: 177
sorted: 110 out of: 177
sorted: 111 out of: 177
sorted: 112 out of: 177
sorted: 113 out of: 177
sorted: 114 out of: 177
sorted: 115 out of: 177
sorted: 116 out of: 177
sorted: 117 out of: 177
sorted: 118 out of: 177
sorted: 119 out of: 177
sorted: 120 out of: 177
sorted: 121 out of: 177
sorted: 122 out of: 177
sorted: 123 out of: 177
sorted: 124 out of: 177
sorted: 125 out of: 177
sorted: 126 out of: 177
sorted: 127 out of: 177
sorted: 128 out of: 177
sorted: 129 out of: 177
sorted: 130 out of: 177
sorted: 131 out of: 177
sorted: 132 out of: 177
sorted: 133 out of: 177
sorted: 134 out of: 177
sorted: 135 out of: 177
sorted: 136 out of: 177
sorted: 137 out of: 177
sorted: 138 out of: 177
sorted: 139 out of: 177
sorted: 140 out of: 177
sorted: 141 out of: 177
sorted: 142 out of: 177
sorted: 143 out of: 177
sorted: 144 out of: 177
sorted: 145 out of: 177
sorted: 146 out of: 177
sorted: 147 out of: 177
sorted: 148 out of: 177
sorted: 149 out of: 177
sorted: 150 out of: 177
sorted: 151 out of: 177
sorted: 152 out of: 177
sorted: 153 out of: 177
sorted: 154 out of: 177
sorted: 155 out of: 177
sorted: 156 out of: 177
sorted: 157 out of: 177
sorted: 158 out of: 177
sorted: 159 out of: 177
sorted: 160 out of: 177
sorted: 161 out of: 177
sorted: 162 out of: 177
sorted: 163 out of: 177
sorted: 164 out of: 177
sorted: 165 out of: 177
sorted: 166 out of: 177
sorted: 167 out of: 177
sorted: 168 out of: 177
sorted: 169 out of: 177
sorted: 170 out of: 177
sorted: 171 out of: 177
sorted: 172 out of: 177
sorted: 173 out of: 177
sorted: 174 out of: 177
sorted: 175 out of: 177
sorted: 176 out of: 177
sorted: 177 out of: 177
Cluster size: 177
there were : 165 values
sorted: 1 out of: 165
sorted: 2 out of: 165
sorted: 3 out of: 165
sorted: 4 out of: 165
sorted: 5 out of: 165
sorted: 6 out of: 165
sorted: 7 out of: 165
sorted: 8 out of: 165
sorted: 9 out of: 165
sorted: 10 out of: 165
sorted: 11 out of: 165
sorted: 12 out of: 165
sorted: 13 out of: 165
sorted: 14 out of: 165
sorted: 15 out of: 165
sorted: 16 out of: 165
sorted: 17 out of: 165
sorted: 18 out of: 165
sorted: 19 out of: 165
sorted: 20 out of: 165
sorted: 21 out of: 165
sorted: 22 out of: 165
sorted: 23 out of: 165
sorted: 24 out of: 165
sorted: 25 out of: 165
sorted: 26 out of: 165
sorted: 27 out of: 165
sorted: 28 out of: 165
sorted: 29 out of: 165
sorted: 30 out of: 165
sorted: 31 out of: 165
sorted: 32 out of: 165
sorted: 33 out of: 165
sorted: 34 out of: 165
sorted: 35 out of: 165
sorted: 36 out of: 165
sorted: 37 out of: 165
sorted: 38 out of: 165
sorted: 39 out of: 165
sorted: 40 out of: 165
sorted: 41 out of: 165
sorted: 42 out of: 165
sorted: 43 out of: 165
sorted: 44 out of: 165
sorted: 45 out of: 165
sorted: 46 out of: 165
sorted: 47 out of: 165
sorted: 48 out of: 165
sorted: 49 out of: 165
sorted: 50 out of: 165
sorted: 51 out of: 165
sorted: 52 out of: 165
sorted: 53 out of: 165
sorted: 54 out of: 165
sorted: 55 out of: 165
sorted: 56 out of: 165
sorted: 57 out of: 165
sorted: 58 out of: 165
sorted: 59 out of: 165
sorted: 60 out of: 165
sorted: 61 out of: 165
sorted: 62 out of: 165
sorted: 63 out of: 165
sorted: 64 out of: 165
sorted: 65 out of: 165
sorted: 66 out of: 165
sorted: 67 out of: 165
sorted: 68 out of: 165
sorted: 69 out of: 165
sorted: 70 out of: 165
sorted: 71 out of: 165
sorted: 72 out of: 165
sorted: 73 out of: 165
sorted: 74 out of: 165
sorted: 75 out of: 165
sorted: 76 out of: 165
sorted: 77 out of: 165
sorted: 78 out of: 165
sorted: 79 out of: 165
sorted: 80 out of: 165
sorted: 81 out of: 165
sorted: 82 out of: 165
sorted: 83 out of: 165
sorted: 84 out of: 165
sorted: 85 out of: 165
sorted: 86 out of: 165
sorted: 87 out of: 165
sorted: 88 out of: 165
sorted: 89 out of: 165
sorted: 90 out of: 165
sorted: 91 out of: 165
sorted: 92 out of: 165
sorted: 93 out of: 165
sorted: 94 out of: 165
sorted: 95 out of: 165
sorted: 96 out of: 165
sorted: 97 out of: 165
sorted: 98 out of: 165
sorted: 99 out of: 165
sorted: 100 out of: 165
sorted: 101 out of: 165
sorted: 102 out of: 165
sorted: 103 out of: 165
sorted: 104 out of: 165
sorted: 105 out of: 165
sorted: 106 out of: 165
sorted: 107 out of: 165
sorted: 108 out of: 165
sorted: 109 out of: 165
sorted: 110 out of: 165
sorted: 111 out of: 165
sorted: 112 out of: 165
sorted: 113 out of: 165
sorted: 114 out of: 165
sorted: 115 out of: 165
sorted: 116 out of: 165
sorted: 117 out of: 165
sorted: 118 out of: 165
sorted: 119 out of: 165
sorted: 120 out of: 165
sorted: 121 out of: 165
sorted: 122 out of: 165
sorted: 123 out of: 165
sorted: 124 out of: 165
sorted: 125 out of: 165
sorted: 126 out of: 165
sorted: 127 out of: 165
sorted: 128 out of: 165
sorted: 129 out of: 165
sorted: 130 out of: 165
sorted: 131 out of: 165
sorted: 132 out of: 165
sorted: 133 out of: 165
sorted: 134 out of: 165
sorted: 135 out of: 165
sorted: 136 out of: 165
sorted: 137 out of: 165
sorted: 138 out of: 165
sorted: 139 out of: 165
sorted: 140 out of: 165
sorted: 141 out of: 165
sorted: 142 out of: 165
sorted: 143 out of: 165
sorted: 144 out of: 165
sorted: 145 out of: 165
sorted: 146 out of: 165
sorted: 147 out of: 165
sorted: 148 out of: 165
sorted: 149 out of: 165
sorted: 150 out of: 165
sorted: 151 out of: 165
sorted: 152 out of: 165
sorted: 153 out of: 165
sorted: 154 out of: 165
sorted: 155 out of: 165
sorted: 156 out of: 165
sorted: 157 out of: 165
sorted: 158 out of: 165
sorted: 159 out of: 165
sorted: 160 out of: 165
sorted: 161 out of: 165
sorted: 162 out of: 165
sorted: 163 out of: 165
sorted: 164 out of: 165
sorted: 165 out of: 165
Cluster size: 165
there were : 153 values
sorted: 1 out of: 153
sorted: 2 out of: 153
sorted: 3 out of: 153
sorted: 4 out of: 153
sorted: 5 out of: 153
sorted: 6 out of: 153
sorted: 7 out of: 153
sorted: 8 out of: 153
sorted: 9 out of: 153
sorted: 10 out of: 153
sorted: 11 out of: 153
sorted: 12 out of: 153
sorted: 13 out of: 153
sorted: 14 out of: 153
sorted: 15 out of: 153
sorted: 16 out of: 153
sorted: 17 out of: 153
sorted: 18 out of: 153
sorted: 19 out of: 153
sorted: 20 out of: 153
sorted: 21 out of: 153
sorted: 22 out of: 153
sorted: 23 out of: 153
sorted: 24 out of: 153
sorted: 25 out of: 153
sorted: 26 out of: 153
sorted: 27 out of: 153
sorted: 28 out of: 153
sorted: 29 out of: 153
sorted: 30 out of: 153
sorted: 31 out of: 153
sorted: 32 out of: 153
sorted: 33 out of: 153
sorted: 34 out of: 153
sorted: 35 out of: 153
sorted: 36 out of: 153
sorted: 37 out of: 153
sorted: 38 out of: 153
sorted: 39 out of: 153
sorted: 40 out of: 153
sorted: 41 out of: 153
sorted: 42 out of: 153
sorted: 43 out of: 153
sorted: 44 out of: 153
sorted: 45 out of: 153
sorted: 46 out of: 153
sorted: 47 out of: 153
sorted: 48 out of: 153
sorted: 49 out of: 153
sorted: 50 out of: 153
sorted: 51 out of: 153
sorted: 52 out of: 153
sorted: 53 out of: 153
sorted: 54 out of: 153
sorted: 55 out of: 153
sorted: 56 out of: 153
sorted: 57 out of: 153
sorted: 58 out of: 153
sorted: 59 out of: 153
sorted: 60 out of: 153
sorted: 61 out of: 153
sorted: 62 out of: 153
sorted: 63 out of: 153
sorted: 64 out of: 153
sorted: 65 out of: 153
sorted: 66 out of: 153
sorted: 67 out of: 153
sorted: 68 out of: 153
sorted: 69 out of: 153
sorted: 70 out of: 153
sorted: 71 out of: 153
sorted: 72 out of: 153
sorted: 73 out of: 153
sorted: 74 out of: 153
sorted: 75 out of: 153
sorted: 76 out of: 153
sorted: 77 out of: 153
sorted: 78 out of: 153
sorted: 79 out of: 153
sorted: 80 out of: 153
sorted: 81 out of: 153
sorted: 82 out of: 153
sorted: 83 out of: 153
sorted: 84 out of: 153
sorted: 85 out of: 153
sorted: 86 out of: 153
sorted: 87 out of: 153
sorted: 88 out of: 153
sorted: 89 out of: 153
sorted: 90 out of: 153
sorted: 91 out of: 153
sorted: 92 out of: 153
sorted: 93 out of: 153
sorted: 94 out of: 153
sorted: 95 out of: 153
sorted: 96 out of: 153
sorted: 97 out of: 153
sorted: 98 out of: 153
sorted: 99 out of: 153
sorted: 100 out of: 153
sorted: 101 out of: 153
sorted: 102 out of: 153
sorted: 103 out of: 153
sorted: 104 out of: 153
sorted: 105 out of: 153
sorted: 106 out of: 153
sorted: 107 out of: 153
sorted: 108 out of: 153
sorted: 109 out of: 153
sorted: 110 out of: 153
sorted: 111 out of: 153
sorted: 112 out of: 153
sorted: 113 out of: 153
sorted: 114 out of: 153
sorted: 115 out of: 153
sorted: 116 out of: 153
sorted: 117 out of: 153
sorted: 118 out of: 153
sorted: 119 out of: 153
sorted: 120 out of: 153
sorted: 121 out of: 153
sorted: 122 out of: 153
sorted: 123 out of: 153
sorted: 124 out of: 153
sorted: 125 out of: 153
sorted: 126 out of: 153
sorted: 127 out of: 153
sorted: 128 out of: 153
sorted: 129 out of: 153
sorted: 130 out of: 153
sorted: 131 out of: 153
sorted: 132 out of: 153
sorted: 133 out of: 153
sorted: 134 out of: 153
sorted: 135 out of: 153
sorted: 136 out of: 153
sorted: 137 out of: 153
sorted: 138 out of: 153
sorted: 139 out of: 153
sorted: 140 out of: 153
sorted: 141 out of: 153
sorted: 142 out of: 153
sorted: 143 out of: 153
sorted: 144 out of: 153
sorted: 145 out of: 153
sorted: 146 out of: 153
sorted: 147 out of: 153
sorted: 148 out of: 153
sorted: 149 out of: 153
sorted: 150 out of: 153
sorted: 151 out of: 153
sorted: 152 out of: 153
sorted: 153 out of: 153
Cluster size: 153
there were : 134 values
sorted: 1 out of: 134
sorted: 2 out of: 134
sorted: 3 out of: 134
sorted: 4 out of: 134
sorted: 5 out of: 134
sorted: 6 out of: 134
sorted: 7 out of: 134
sorted: 8 out of: 134
sorted: 9 out of: 134
sorted: 10 out of: 134
sorted: 11 out of: 134
sorted: 12 out of: 134
sorted: 13 out of: 134
sorted: 14 out of: 134
sorted: 15 out of: 134
sorted: 16 out of: 134
sorted: 17 out of: 134
sorted: 18 out of: 134
sorted: 19 out of: 134
sorted: 20 out of: 134
sorted: 21 out of: 134
sorted: 22 out of: 134
sorted: 23 out of: 134
sorted: 24 out of: 134
sorted: 25 out of: 134
sorted: 26 out of: 134
sorted: 27 out of: 134
sorted: 28 out of: 134
sorted: 29 out of: 134
sorted: 30 out of: 134
sorted: 31 out of: 134
sorted: 32 out of: 134
sorted: 33 out of: 134
sorted: 34 out of: 134
sorted: 35 out of: 134
sorted: 36 out of: 134
sorted: 37 out of: 134
sorted: 38 out of: 134
sorted: 39 out of: 134
sorted: 40 out of: 134
sorted: 41 out of: 134
sorted: 42 out of: 134
sorted: 43 out of: 134
sorted: 44 out of: 134
sorted: 45 out of: 134
sorted: 46 out of: 134
sorted: 47 out of: 134
sorted: 48 out of: 134
sorted: 49 out of: 134
sorted: 50 out of: 134
sorted: 51 out of: 134
sorted: 52 out of: 134
sorted: 53 out of: 134
sorted: 54 out of: 134
sorted: 55 out of: 134
sorted: 56 out of: 134
sorted: 57 out of: 134
sorted: 58 out of: 134
sorted: 59 out of: 134
sorted: 60 out of: 134
sorted: 61 out of: 134
sorted: 62 out of: 134
sorted: 63 out of: 134
sorted: 64 out of: 134
sorted: 65 out of: 134
sorted: 66 out of: 134
sorted: 67 out of: 134
sorted: 68 out of: 134
sorted: 69 out of: 134
sorted: 70 out of: 134
sorted: 71 out of: 134
sorted: 72 out of: 134
sorted: 73 out of: 134
sorted: 74 out of: 134
sorted: 75 out of: 134
sorted: 76 out of: 134
sorted: 77 out of: 134
sorted: 78 out of: 134
sorted: 79 out of: 134
sorted: 80 out of: 134
sorted: 81 out of: 134
sorted: 82 out of: 134
sorted: 83 out of: 134
sorted: 84 out of: 134
sorted: 85 out of: 134
sorted: 86 out of: 134
sorted: 87 out of: 134
sorted: 88 out of: 134
sorted: 89 out of: 134
sorted: 90 out of: 134
sorted: 91 out of: 134
sorted: 92 out of: 134
sorted: 93 out of: 134
sorted: 94 out of: 134
sorted: 95 out of: 134
sorted: 96 out of: 134
sorted: 97 out of: 134
sorted: 98 out of: 134
sorted: 99 out of: 134
sorted: 100 out of: 134
sorted: 101 out of: 134
sorted: 102 out of: 134
sorted: 103 out of: 134
sorted: 104 out of: 134
sorted: 105 out of: 134
sorted: 106 out of: 134
sorted: 107 out of: 134
sorted: 108 out of: 134
sorted: 109 out of: 134
sorted: 110 out of: 134
sorted: 111 out of: 134
sorted: 112 out of: 134
sorted: 113 out of: 134
sorted: 114 out of: 134
sorted: 115 out of: 134
sorted: 116 out of: 134
sorted: 117 out of: 134
sorted: 118 out of: 134
sorted: 119 out of: 134
sorted: 120 out of: 134
sorted: 121 out of: 134
sorted: 122 out of: 134
sorted: 123 out of: 134
sorted: 124 out of: 134
sorted: 125 out of: 134
sorted: 126 out of: 134
sorted: 127 out of: 134
sorted: 128 out of: 134
sorted: 129 out of: 134
sorted: 130 out of: 134
sorted: 131 out of: 134
sorted: 132 out of: 134
sorted: 133 out of: 134
sorted: 134 out of: 134
Cluster size: 134
there were : 128 values
sorted: 1 out of: 128
sorted: 2 out of: 128
sorted: 3 out of: 128
sorted: 4 out of: 128
sorted: 5 out of: 128
sorted: 6 out of: 128
sorted: 7 out of: 128
sorted: 8 out of: 128
sorted: 9 out of: 128
sorted: 10 out of: 128
sorted: 11 out of: 128
sorted: 12 out of: 128
sorted: 13 out of: 128
sorted: 14 out of: 128
sorted: 15 out of: 128
sorted: 16 out of: 128
sorted: 17 out of: 128
sorted: 18 out of: 128
sorted: 19 out of: 128
sorted: 20 out of: 128
sorted: 21 out of: 128
sorted: 22 out of: 128
sorted: 23 out of: 128
sorted: 24 out of: 128
sorted: 25 out of: 128
sorted: 26 out of: 128
sorted: 27 out of: 128
sorted: 28 out of: 128
sorted: 29 out of: 128
sorted: 30 out of: 128
sorted: 31 out of: 128
sorted: 32 out of: 128
sorted: 33 out of: 128
sorted: 34 out of: 128
sorted: 35 out of: 128
sorted: 36 out of: 128
sorted: 37 out of: 128
sorted: 38 out of: 128
sorted: 39 out of: 128
sorted: 40 out of: 128
sorted: 41 out of: 128
sorted: 42 out of: 128
sorted: 43 out of: 128
sorted: 44 out of: 128
sorted: 45 out of: 128
sorted: 46 out of: 128
sorted: 47 out of: 128
sorted: 48 out of: 128
sorted: 49 out of: 128
sorted: 50 out of: 128
sorted: 51 out of: 128
sorted: 52 out of: 128
sorted: 53 out of: 128
sorted: 54 out of: 128
sorted: 55 out of: 128
sorted: 56 out of: 128
sorted: 57 out of: 128
sorted: 58 out of: 128
sorted: 59 out of: 128
sorted: 60 out of: 128
sorted: 61 out of: 128
sorted: 62 out of: 128
sorted: 63 out of: 128
sorted: 64 out of: 128
sorted: 65 out of: 128
sorted: 66 out of: 128
sorted: 67 out of: 128
sorted: 68 out of: 128
sorted: 69 out of: 128
sorted: 70 out of: 128
sorted: 71 out of: 128
sorted: 72 out of: 128
sorted: 73 out of: 128
sorted: 74 out of: 128
sorted: 75 out of: 128
sorted: 76 out of: 128
sorted: 77 out of: 128
sorted: 78 out of: 128
sorted: 79 out of: 128
sorted: 80 out of: 128
sorted: 81 out of: 128
sorted: 82 out of: 128
sorted: 83 out of: 128
sorted: 84 out of: 128
sorted: 85 out of: 128
sorted: 86 out of: 128
sorted: 87 out of: 128
sorted: 88 out of: 128
sorted: 89 out of: 128
sorted: 90 out of: 128
sorted: 91 out of: 128
sorted: 92 out of: 128
sorted: 93 out of: 128
sorted: 94 out of: 128
sorted: 95 out of: 128
sorted: 96 out of: 128
sorted: 97 out of: 128
sorted: 98 out of: 128
sorted: 99 out of: 128
sorted: 100 out of: 128
sorted: 101 out of: 128
sorted: 102 out of: 128
sorted: 103 out of: 128
sorted: 104 out of: 128
sorted: 105 out of: 128
sorted: 106 out of: 128
sorted: 107 out of: 128
sorted: 108 out of: 128
sorted: 109 out of: 128
sorted: 110 out of: 128
sorted: 111 out of: 128
sorted: 112 out of: 128
sorted: 113 out of: 128
sorted: 114 out of: 128
sorted: 115 out of: 128
sorted: 116 out of: 128
sorted: 117 out of: 128
sorted: 118 out of: 128
sorted: 119 out of: 128
sorted: 120 out of: 128
sorted: 121 out of: 128
sorted: 122 out of: 128
sorted: 123 out of: 128
sorted: 124 out of: 128
sorted: 125 out of: 128
sorted: 126 out of: 128
sorted: 127 out of: 128
sorted: 128 out of: 128
Cluster size: 128
there were : 101 values
sorted: 1 out of: 101
sorted: 2 out of: 101
sorted: 3 out of: 101
sorted: 4 out of: 101
sorted: 5 out of: 101
sorted: 6 out of: 101
sorted: 7 out of: 101
sorted: 8 out of: 101
sorted: 9 out of: 101
sorted: 10 out of: 101
sorted: 11 out of: 101
sorted: 12 out of: 101
sorted: 13 out of: 101
sorted: 14 out of: 101
sorted: 15 out of: 101
sorted: 16 out of: 101
sorted: 17 out of: 101
sorted: 18 out of: 101
sorted: 19 out of: 101
sorted: 20 out of: 101
sorted: 21 out of: 101
sorted: 22 out of: 101
sorted: 23 out of: 101
sorted: 24 out of: 101
sorted: 25 out of: 101
sorted: 26 out of: 101
sorted: 27 out of: 101
sorted: 28 out of: 101
sorted: 29 out of: 101
sorted: 30 out of: 101
sorted: 31 out of: 101
sorted: 32 out of: 101
sorted: 33 out of: 101
sorted: 34 out of: 101
sorted: 35 out of: 101
sorted: 36 out of: 101
sorted: 37 out of: 101
sorted: 38 out of: 101
sorted: 39 out of: 101
sorted: 40 out of: 101
sorted: 41 out of: 101
sorted: 42 out of: 101
sorted: 43 out of: 101
sorted: 44 out of: 101
sorted: 45 out of: 101
sorted: 46 out of: 101
sorted: 47 out of: 101
sorted: 48 out of: 101
sorted: 49 out of: 101
sorted: 50 out of: 101
sorted: 51 out of: 101
sorted: 52 out of: 101
sorted: 53 out of: 101
sorted: 54 out of: 101
sorted: 55 out of: 101
sorted: 56 out of: 101
sorted: 57 out of: 101
sorted: 58 out of: 101
sorted: 59 out of: 101
sorted: 60 out of: 101
sorted: 61 out of: 101
sorted: 62 out of: 101
sorted: 63 out of: 101
sorted: 64 out of: 101
sorted: 65 out of: 101
sorted: 66 out of: 101
sorted: 67 out of: 101
sorted: 68 out of: 101
sorted: 69 out of: 101
sorted: 70 out of: 101
sorted: 71 out of: 101
sorted: 72 out of: 101
sorted: 73 out of: 101
sorted: 74 out of: 101
sorted: 75 out of: 101
sorted: 76 out of: 101
sorted: 77 out of: 101
sorted: 78 out of: 101
sorted: 79 out of: 101
sorted: 80 out of: 101
sorted: 81 out of: 101
sorted: 82 out of: 101
sorted: 83 out of: 101
sorted: 84 out of: 101
sorted: 85 out of: 101
sorted: 86 out of: 101
sorted: 87 out of: 101
sorted: 88 out of: 101
sorted: 89 out of: 101
sorted: 90 out of: 101
sorted: 91 out of: 101
sorted: 92 out of: 101
sorted: 93 out of: 101
sorted: 94 out of: 101
sorted: 95 out of: 101
sorted: 96 out of: 101
sorted: 97 out of: 101
sorted: 98 out of: 101
sorted: 99 out of: 101
sorted: 100 out of: 101
sorted: 101 out of: 101
Cluster size: 101
there were : 93 values
sorted: 1 out of: 93
sorted: 2 out of: 93
sorted: 3 out of: 93
sorted: 4 out of: 93
sorted: 5 out of: 93
sorted: 6 out of: 93
sorted: 7 out of: 93
sorted: 8 out of: 93
sorted: 9 out of: 93
sorted: 10 out of: 93
sorted: 11 out of: 93
sorted: 12 out of: 93
sorted: 13 out of: 93
sorted: 14 out of: 93
sorted: 15 out of: 93
sorted: 16 out of: 93
sorted: 17 out of: 93
sorted: 18 out of: 93
sorted: 19 out of: 93
sorted: 20 out of: 93
sorted: 21 out of: 93
sorted: 22 out of: 93
sorted: 23 out of: 93
sorted: 24 out of: 93
sorted: 25 out of: 93
sorted: 26 out of: 93
sorted: 27 out of: 93
sorted: 28 out of: 93
sorted: 29 out of: 93
sorted: 30 out of: 93
sorted: 31 out of: 93
sorted: 32 out of: 93
sorted: 33 out of: 93
sorted: 34 out of: 93
sorted: 35 out of: 93
sorted: 36 out of: 93
sorted: 37 out of: 93
sorted: 38 out of: 93
sorted: 39 out of: 93
sorted: 40 out of: 93
sorted: 41 out of: 93
sorted: 42 out of: 93
sorted: 43 out of: 93
sorted: 44 out of: 93
sorted: 45 out of: 93
sorted: 46 out of: 93
sorted: 47 out of: 93
sorted: 48 out of: 93
sorted: 49 out of: 93
sorted: 50 out of: 93
sorted: 51 out of: 93
sorted: 52 out of: 93
sorted: 53 out of: 93
sorted: 54 out of: 93
sorted: 55 out of: 93
sorted: 56 out of: 93
sorted: 57 out of: 93
sorted: 58 out of: 93
sorted: 59 out of: 93
sorted: 60 out of: 93
sorted: 61 out of: 93
sorted: 62 out of: 93
sorted: 63 out of: 93
sorted: 64 out of: 93
sorted: 65 out of: 93
sorted: 66 out of: 93
sorted: 67 out of: 93
sorted: 68 out of: 93
sorted: 69 out of: 93
sorted: 70 out of: 93
sorted: 71 out of: 93
sorted: 72 out of: 93
sorted: 73 out of: 93
sorted: 74 out of: 93
sorted: 75 out of: 93
sorted: 76 out of: 93
sorted: 77 out of: 93
sorted: 78 out of: 93
sorted: 79 out of: 93
sorted: 80 out of: 93
sorted: 81 out of: 93
sorted: 82 out of: 93
sorted: 83 out of: 93
sorted: 84 out of: 93
sorted: 85 out of: 93
sorted: 86 out of: 93
sorted: 87 out of: 93
sorted: 88 out of: 93
sorted: 89 out of: 93
sorted: 90 out of: 93
sorted: 91 out of: 93
sorted: 92 out of: 93
sorted: 93 out of: 93
Cluster size: 93
there were : 84 values
sorted: 1 out of: 84
sorted: 2 out of: 84
sorted: 3 out of: 84
sorted: 4 out of: 84
sorted: 5 out of: 84
sorted: 6 out of: 84
sorted: 7 out of: 84
sorted: 8 out of: 84
sorted: 9 out of: 84
sorted: 10 out of: 84
sorted: 11 out of: 84
sorted: 12 out of: 84
sorted: 13 out of: 84
sorted: 14 out of: 84
sorted: 15 out of: 84
sorted: 16 out of: 84
sorted: 17 out of: 84
sorted: 18 out of: 84
sorted: 19 out of: 84
sorted: 20 out of: 84
sorted: 21 out of: 84
sorted: 22 out of: 84
sorted: 23 out of: 84
sorted: 24 out of: 84
sorted: 25 out of: 84
sorted: 26 out of: 84
sorted: 27 out of: 84
sorted: 28 out of: 84
sorted: 29 out of: 84
sorted: 30 out of: 84
sorted: 31 out of: 84
sorted: 32 out of: 84
sorted: 33 out of: 84
sorted: 34 out of: 84
sorted: 35 out of: 84
sorted: 36 out of: 84
sorted: 37 out of: 84
sorted: 38 out of: 84
sorted: 39 out of: 84
sorted: 40 out of: 84
sorted: 41 out of: 84
sorted: 42 out of: 84
sorted: 43 out of: 84
sorted: 44 out of: 84
sorted: 45 out of: 84
sorted: 46 out of: 84
sorted: 47 out of: 84
sorted: 48 out of: 84
sorted: 49 out of: 84
sorted: 50 out of: 84
sorted: 51 out of: 84
sorted: 52 out of: 84
sorted: 53 out of: 84
sorted: 54 out of: 84
sorted: 55 out of: 84
sorted: 56 out of: 84
sorted: 57 out of: 84
sorted: 58 out of: 84
sorted: 59 out of: 84
sorted: 60 out of: 84
sorted: 61 out of: 84
sorted: 62 out of: 84
sorted: 63 out of: 84
sorted: 64 out of: 84
sorted: 65 out of: 84
sorted: 66 out of: 84
sorted: 67 out of: 84
sorted: 68 out of: 84
sorted: 69 out of: 84
sorted: 70 out of: 84
sorted: 71 out of: 84
sorted: 72 out of: 84
sorted: 73 out of: 84
sorted: 74 out of: 84
sorted: 75 out of: 84
sorted: 76 out of: 84
sorted: 77 out of: 84
sorted: 78 out of: 84
sorted: 79 out of: 84
sorted: 80 out of: 84
sorted: 81 out of: 84
sorted: 82 out of: 84
sorted: 83 out of: 84
sorted: 84 out of: 84
Cluster size: 84
there were : 83 values
sorted: 1 out of: 83
sorted: 2 out of: 83
sorted: 3 out of: 83
sorted: 4 out of: 83
sorted: 5 out of: 83
sorted: 6 out of: 83
sorted: 7 out of: 83
sorted: 8 out of: 83
sorted: 9 out of: 83
sorted: 10 out of: 83
sorted: 11 out of: 83
sorted: 12 out of: 83
sorted: 13 out of: 83
sorted: 14 out of: 83
sorted: 15 out of: 83
sorted: 16 out of: 83
sorted: 17 out of: 83
sorted: 18 out of: 83
sorted: 19 out of: 83
sorted: 20 out of: 83
sorted: 21 out of: 83
sorted: 22 out of: 83
sorted: 23 out of: 83
sorted: 24 out of: 83
sorted: 25 out of: 83
sorted: 26 out of: 83
sorted: 27 out of: 83
sorted: 28 out of: 83
sorted: 29 out of: 83
sorted: 30 out of: 83
sorted: 31 out of: 83
sorted: 32 out of: 83
sorted: 33 out of: 83
sorted: 34 out of: 83
sorted: 35 out of: 83
sorted: 36 out of: 83
sorted: 37 out of: 83
sorted: 38 out of: 83
sorted: 39 out of: 83
sorted: 40 out of: 83
sorted: 41 out of: 83
sorted: 42 out of: 83
sorted: 43 out of: 83
sorted: 44 out of: 83
sorted: 45 out of: 83
sorted: 46 out of: 83
sorted: 47 out of: 83
sorted: 48 out of: 83
sorted: 49 out of: 83
sorted: 50 out of: 83
sorted: 51 out of: 83
sorted: 52 out of: 83
sorted: 53 out of: 83
sorted: 54 out of: 83
sorted: 55 out of: 83
sorted: 56 out of: 83
sorted: 57 out of: 83
sorted: 58 out of: 83
sorted: 59 out of: 83
sorted: 60 out of: 83
sorted: 61 out of: 83
sorted: 62 out of: 83
sorted: 63 out of: 83
sorted: 64 out of: 83
sorted: 65 out of: 83
sorted: 66 out of: 83
sorted: 67 out of: 83
sorted: 68 out of: 83
sorted: 69 out of: 83
sorted: 70 out of: 83
sorted: 71 out of: 83
sorted: 72 out of: 83
sorted: 73 out of: 83
sorted: 74 out of: 83
sorted: 75 out of: 83
sorted: 76 out of: 83
sorted: 77 out of: 83
sorted: 78 out of: 83
sorted: 79 out of: 83
sorted: 80 out of: 83
sorted: 81 out of: 83
sorted: 82 out of: 83
sorted: 83 out of: 83
Cluster size: 83
there were : 81 values
sorted: 1 out of: 81
sorted: 2 out of: 81
sorted: 3 out of: 81
sorted: 4 out of: 81
sorted: 5 out of: 81
sorted: 6 out of: 81
sorted: 7 out of: 81
sorted: 8 out of: 81
sorted: 9 out of: 81
sorted: 10 out of: 81
sorted: 11 out of: 81
sorted: 12 out of: 81
sorted: 13 out of: 81
sorted: 14 out of: 81
sorted: 15 out of: 81
sorted: 16 out of: 81
sorted: 17 out of: 81
sorted: 18 out of: 81
sorted: 19 out of: 81
sorted: 20 out of: 81
sorted: 21 out of: 81
sorted: 22 out of: 81
sorted: 23 out of: 81
sorted: 24 out of: 81
sorted: 25 out of: 81
sorted: 26 out of: 81
sorted: 27 out of: 81
sorted: 28 out of: 81
sorted: 29 out of: 81
sorted: 30 out of: 81
sorted: 31 out of: 81
sorted: 32 out of: 81
sorted: 33 out of: 81
sorted: 34 out of: 81
sorted: 35 out of: 81
sorted: 36 out of: 81
sorted: 37 out of: 81
sorted: 38 out of: 81
sorted: 39 out of: 81
sorted: 40 out of: 81
sorted: 41 out of: 81
sorted: 42 out of: 81
sorted: 43 out of: 81
sorted: 44 out of: 81
sorted: 45 out of: 81
sorted: 46 out of: 81
sorted: 47 out of: 81
sorted: 48 out of: 81
sorted: 49 out of: 81
sorted: 50 out of: 81
sorted: 51 out of: 81
sorted: 52 out of: 81
sorted: 53 out of: 81
sorted: 54 out of: 81
sorted: 55 out of: 81
sorted: 56 out of: 81
sorted: 57 out of: 81
sorted: 58 out of: 81
sorted: 59 out of: 81
sorted: 60 out of: 81
sorted: 61 out of: 81
sorted: 62 out of: 81
sorted: 63 out of: 81
sorted: 64 out of: 81
sorted: 65 out of: 81
sorted: 66 out of: 81
sorted: 67 out of: 81
sorted: 68 out of: 81
sorted: 69 out of: 81
sorted: 70 out of: 81
sorted: 71 out of: 81
sorted: 72 out of: 81
sorted: 73 out of: 81
sorted: 74 out of: 81
sorted: 75 out of: 81
sorted: 76 out of: 81
sorted: 77 out of: 81
sorted: 78 out of: 81
sorted: 79 out of: 81
sorted: 80 out of: 81
sorted: 81 out of: 81
Cluster size: 81
there were : 80 values
sorted: 1 out of: 80
sorted: 2 out of: 80
sorted: 3 out of: 80
sorted: 4 out of: 80
sorted: 5 out of: 80
sorted: 6 out of: 80
sorted: 7 out of: 80
sorted: 8 out of: 80
sorted: 9 out of: 80
sorted: 10 out of: 80
sorted: 11 out of: 80
sorted: 12 out of: 80
sorted: 13 out of: 80
sorted: 14 out of: 80
sorted: 15 out of: 80
sorted: 16 out of: 80
sorted: 17 out of: 80
sorted: 18 out of: 80
sorted: 19 out of: 80
sorted: 20 out of: 80
sorted: 21 out of: 80
sorted: 22 out of: 80
sorted: 23 out of: 80
sorted: 24 out of: 80
sorted: 25 out of: 80
sorted: 26 out of: 80
sorted: 27 out of: 80
sorted: 28 out of: 80
sorted: 29 out of: 80
sorted: 30 out of: 80
sorted: 31 out of: 80
sorted: 32 out of: 80
sorted: 33 out of: 80
sorted: 34 out of: 80
sorted: 35 out of: 80
sorted: 36 out of: 80
sorted: 37 out of: 80
sorted: 38 out of: 80
sorted: 39 out of: 80
sorted: 40 out of: 80
sorted: 41 out of: 80
sorted: 42 out of: 80
sorted: 43 out of: 80
sorted: 44 out of: 80
sorted: 45 out of: 80
sorted: 46 out of: 80
sorted: 47 out of: 80
sorted: 48 out of: 80
sorted: 49 out of: 80
sorted: 50 out of: 80
sorted: 51 out of: 80
sorted: 52 out of: 80
sorted: 53 out of: 80
sorted: 54 out of: 80
sorted: 55 out of: 80
sorted: 56 out of: 80
sorted: 57 out of: 80
sorted: 58 out of: 80
sorted: 59 out of: 80
sorted: 60 out of: 80
sorted: 61 out of: 80
sorted: 62 out of: 80
sorted: 63 out of: 80
sorted: 64 out of: 80
sorted: 65 out of: 80
sorted: 66 out of: 80
sorted: 67 out of: 80
sorted: 68 out of: 80
sorted: 69 out of: 80
sorted: 70 out of: 80
sorted: 71 out of: 80
sorted: 72 out of: 80
sorted: 73 out of: 80
sorted: 74 out of: 80
sorted: 75 out of: 80
sorted: 76 out of: 80
sorted: 77 out of: 80
sorted: 78 out of: 80
sorted: 79 out of: 80
sorted: 80 out of: 80
Cluster size: 80
there were : 75 values
sorted: 1 out of: 75
sorted: 2 out of: 75
sorted: 3 out of: 75
sorted: 4 out of: 75
sorted: 5 out of: 75
sorted: 6 out of: 75
sorted: 7 out of: 75
sorted: 8 out of: 75
sorted: 9 out of: 75
sorted: 10 out of: 75
sorted: 11 out of: 75
sorted: 12 out of: 75
sorted: 13 out of: 75
sorted: 14 out of: 75
sorted: 15 out of: 75
sorted: 16 out of: 75
sorted: 17 out of: 75
sorted: 18 out of: 75
sorted: 19 out of: 75
sorted: 20 out of: 75
sorted: 21 out of: 75
sorted: 22 out of: 75
sorted: 23 out of: 75
sorted: 24 out of: 75
sorted: 25 out of: 75
sorted: 26 out of: 75
sorted: 27 out of: 75
sorted: 28 out of: 75
sorted: 29 out of: 75
sorted: 30 out of: 75
sorted: 31 out of: 75
sorted: 32 out of: 75
sorted: 33 out of: 75
sorted: 34 out of: 75
sorted: 35 out of: 75
sorted: 36 out of: 75
sorted: 37 out of: 75
sorted: 38 out of: 75
sorted: 39 out of: 75
sorted: 40 out of: 75
sorted: 41 out of: 75
sorted: 42 out of: 75
sorted: 43 out of: 75
sorted: 44 out of: 75
sorted: 45 out of: 75
sorted: 46 out of: 75
sorted: 47 out of: 75
sorted: 48 out of: 75
sorted: 49 out of: 75
sorted: 50 out of: 75
sorted: 51 out of: 75
sorted: 52 out of: 75
sorted: 53 out of: 75
sorted: 54 out of: 75
sorted: 55 out of: 75
sorted: 56 out of: 75
sorted: 57 out of: 75
sorted: 58 out of: 75
sorted: 59 out of: 75
sorted: 60 out of: 75
sorted: 61 out of: 75
sorted: 62 out of: 75
sorted: 63 out of: 75
sorted: 64 out of: 75
sorted: 65 out of: 75
sorted: 66 out of: 75
sorted: 67 out of: 75
sorted: 68 out of: 75
sorted: 69 out of: 75
sorted: 70 out of: 75
sorted: 71 out of: 75
sorted: 72 out of: 75
sorted: 73 out of: 75
sorted: 74 out of: 75
sorted: 75 out of: 75
Cluster size: 75
there were : 75 values
sorted: 1 out of: 75
sorted: 2 out of: 75
sorted: 3 out of: 75
sorted: 4 out of: 75
sorted: 5 out of: 75
sorted: 6 out of: 75
sorted: 7 out of: 75
sorted: 8 out of: 75
sorted: 9 out of: 75
sorted: 10 out of: 75
sorted: 11 out of: 75
sorted: 12 out of: 75
sorted: 13 out of: 75
sorted: 14 out of: 75
sorted: 15 out of: 75
sorted: 16 out of: 75
sorted: 17 out of: 75
sorted: 18 out of: 75
sorted: 19 out of: 75
sorted: 20 out of: 75
sorted: 21 out of: 75
sorted: 22 out of: 75
sorted: 23 out of: 75
sorted: 24 out of: 75
sorted: 25 out of: 75
sorted: 26 out of: 75
sorted: 27 out of: 75
sorted: 28 out of: 75
INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';243;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';243;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\0LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Cancel application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan  application canceled)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Loan application rejected)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Loan application rejected)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Reject application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Reject application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Send home insurance quote)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Appraise property)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check  application  form completeness)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application received)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotSuccession(Assess eligibility,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Loan application rejected)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Loan application rejected)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Reject application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Reject application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Cancel application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan  application canceled)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Loan application rejected)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Loan application rejected)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Reject application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Reject application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Send home insurance quote)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotCoExistence(Cancel application,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateResponse(Check  application  form completeness,  Approve application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Cancel application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application approved)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan  application canceled)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Send home insurance quote)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotCoExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotCoExistence(Loan  application canceled,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotCoExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check  application  form completeness)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Approve application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check  application  form completeness)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application approved)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotCoExistence(Send acceptance pack,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess eligibility)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Assess loan risk)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check  application  form completeness)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application received)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotCoExistence(Send home insurance quote,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Receive updated application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Return application back to applicant)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotCoExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';203;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';203;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\1LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Check if home insurance quote is requested,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Verify repayment agreement,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Check if home insurance quote is requested,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Verify repayment agreement,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Check if home insurance quote is requested,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check if home insurance quote is requested,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check if home insurance quote is requested)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Prepare acceptance pack)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Verify repayment agreement)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Check if home insurance quote is requested)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Prepare acceptance pack)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Prepare acceptance pack)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Verify repayment agreement)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Check if home insurance quote is requested)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Prepare acceptance pack)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Verify repayment agreement)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Check if home insurance quote is requested)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Prepare acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Verify repayment agreement)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% AtMostOne(Check if home insurance quote is requested)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Verify repayment agreement)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Verify repayment agreement)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Verify repayment agreement)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% AtMostOne(Prepare acceptance pack)                                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Prepare acceptance pack,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Check if home insurance quote is requested)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Check if home insurance quote is requested)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Prepare acceptance pack,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Verify repayment agreement)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Verify repayment agreement)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% AtMostOne(Verify repayment agreement)                                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess eligibility)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';184;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';184;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\2LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Send home insurance quote,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send home insurance quote,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send home insurance quote,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send home insurance quote,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send home insurance quote,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send home insurance quote,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send home insurance quote,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotCoExistence(Appraise property,  Receive updated application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Return application back to applicant)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Send home insurance quote)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send home insurance quote)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotCoExistence(Approve application,  Send acceptance pack)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotCoExistence(Assess eligibility,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Send home insurance quote)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send home insurance quote)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotCoExistence(Assess loan risk,  Receive updated application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Return application back to applicant)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Send home insurance quote)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send home insurance quote)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% RespondedExistence(Cancel application,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Send acceptance pack)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Send home insurance quote)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotCoExistence(Check credit history,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send home insurance quote)                                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send home insurance quote)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotCoExistence(Loan  application approved,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% RespondedExistence(Loan  application canceled,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application received,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Send home insurance quote)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send home insurance quote)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess eligibility)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess eligibility)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Assess loan risk)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Check credit history)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Send home insurance quote)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotSuccession(Send acceptance pack,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Approve application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Cancel application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application approved)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan  application canceled)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Receive updated application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Return application back to applicant)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% CoExistence(Send home insurance quote,  Appraise property)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Approve application)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess eligibility)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Assess loan risk)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Cancel application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check  application  form completeness)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application approved)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Loan  application canceled)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Loan  application received)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Receive updated application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Return application back to applicant)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send home insurance quote,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send home insurance quote,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send home insurance quote,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send home insurance quote,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';177;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';177;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\3LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Approve application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Approve application,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Approve application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% AtMostOne(Approve application)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Appraise property)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess eligibility)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Assess loan risk)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check  application  form completeness)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check credit history)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Approve application,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Approve application,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Approve application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Approve application,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Approve application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Approve application,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application received)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Receive updated application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Receive updated application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Reject application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Return application back to applicant)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Return application back to applicant)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Approve application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Approve application)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application approved)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application approved)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% AtMostOne(Loan  application approved)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application approved)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';165;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';165;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\4LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% AtMostOne(Cancel application)                                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Cancel application,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Cancel application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Cancel application,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Cancel application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Cancel application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Cancel application,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application received)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Cancel application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Cancel application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Loan  application canceled)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Loan  application canceled)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% AtMostOne(Loan  application canceled)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Loan  application canceled)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Verify repayment agreement,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Verify repayment agreement,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';153;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';153;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\5LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Assess loan risk,  Appraise property)                                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Appraise property)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess loan risk,  Appraise property)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check credit history,  Appraise property)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Appraise property,  Assess eligibility)                                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% ChainPrecedence(Appraise property,  Assess loan risk)                                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% ChainSuccession(Appraise property,  Assess eligibility)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess eligibility)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Assess loan risk)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Assess loan risk)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Assess loan risk)                                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Cancel application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Cancel application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Loan  application canceled)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Loan  application canceled)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Approve application,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% Succession(Assess loan risk,  Appraise property)                                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Appraise property)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Appraise property)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Appraise property)                                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Appraise property)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Appraise property)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Assess eligibility)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Approve application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Approve application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Approve application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Loan  application approved)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Loan  application approved)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Loan  application approved)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Reject application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Reject application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Reject application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Cancel application,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainResponse(Check  application  form completeness,  Appraise property)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check  application  form completeness,  Check credit history)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check if home insurance quote is requested)      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check  application  form completeness,  Loan application rejected)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Prepare acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% ChainSuccession(Check credit history,  Appraise property)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Appraise property)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% Participation(Check if home insurance quote is requested)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application approved,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Reject application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application canceled,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% End(Loan application rejected)                                                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan application rejected)                                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check  application  form completeness)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% Participation(Prepare acceptance pack)                                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotSuccession(Receive updated application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan application rejected)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan application rejected)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan application rejected)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Reject application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Reject application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotChainSuccession(Reject application,  Cancel application)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Cancel application)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Cancel application)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application canceled)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application canceled)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan  application canceled)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Receive updated application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Return application back to applicant)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Send acceptance pack)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send acceptance pack)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send acceptance pack)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Send home insurance quote)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Send home insurance quote)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Send home insurance quote)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotSuccession(Return application back to applicant,  Check if home insurance quote is requested)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check if home insurance quote is requested)          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Prepare acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Prepare acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Reject application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Verify repayment agreement)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Reject application)                                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Reject application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Send home insurance quote)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Send home insurance quote)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Approve application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Cancel application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application approved)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application canceled)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Send acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% Participation(Verify repayment agreement)                                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';134;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';134;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\6LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Receive updated application,  Appraise property)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Approve application] => {
		100.000% Precedence(Receive updated application,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		100.000% Precedence(Receive updated application,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Receive updated application,  Assess loan risk)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Cancel application] => {
		100.000% Precedence(Receive updated application,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		100.000% Precedence(Receive updated application,  Check  application  form completeness)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% Precedence(Receive updated application,  Check credit history)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		100.000% Precedence(Receive updated application,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Receive updated application,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Receive updated application,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Receive updated application,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		100.000% Precedence(Receive updated application,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		100.000% Precedence(Receive updated application,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Reject application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% Precedence(Receive updated application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send acceptance pack] => {
		100.000% Precedence(Receive updated application,  Send acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Send home insurance quote] => {
		100.000% Precedence(Receive updated application,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Receive updated application,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check if home insurance quote is requested,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Prepare acceptance pack,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% Participation(Receive updated application)                                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Appraise property)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess eligibility)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Assess loan risk)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check credit history)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check if home insurance quote is requested)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Prepare acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% Participation(Return application back to applicant)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Appraise property)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess eligibility)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Assess loan risk)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan application rejected)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Verify repayment agreement,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';128;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';128;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\7LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Approve application] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Added Activity] => {
		100.000% NotChainSuccession(Added Activity,  Reject application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Reject application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Reject application)                                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% Participation(Approve application)                                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check  application  form completeness)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% Participation(Cancel application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Approve application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application approved)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotSuccession(Check if home insurance quote is requested,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Approve application)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Cancel application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application approved)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan  application canceled)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send acceptance pack)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Send home insurance quote)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% End(Loan  application approved)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application approved)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% End(Loan  application canceled)                                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Participation(Loan  application canceled)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotCoExistence(Loan application rejected,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotSuccession(Prepare acceptance pack,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Send home insurance quote)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% NotCoExistence(Reject application,  Added Activity)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan application rejected)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Approve application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Approve application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Cancel application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application approved)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application approved)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Loan  application canceled)          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send acceptance pack)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Send home insurance quote)           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Send home insurance quote)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% Participation(Send acceptance pack)                                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% Participation(Send home insurance quote)                                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Check if home insurance quote is requested)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Prepare acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Verify repayment agreement)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Verify repayment agreement)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Verify repayment agreement)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Approve application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Cancel application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application approved)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan  application canceled)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';101;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';101;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\8LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Appraise property)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		100.000% Precedence(Appraise property,  Check credit history)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Appraise property,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		100.000% Precedence(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% Succession(Appraise property,  Check credit history)                                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Appraise property,  Check credit history)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Check credit history)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Appraise property,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Receive updated application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Return application back to applicant)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% Response(Check  application  form completeness,  Receive updated application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check  application  form completeness,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Receive updated application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check credit history,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Receive updated application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Return application back to applicant)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Receive updated application,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Loan  application received)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Loan  application received)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Return application back to applicant)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Return application back to applicant)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Check  application  form completeness)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Return application back to applicant,  Receive updated application)                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Return application back to applicant,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';93;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';93;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\9LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% CoExistence(Approve application,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess eligibility)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check credit history)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Loan  application received)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Send acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Approve application,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Approve application,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Approve application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application approved)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Approve application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Approve application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application approved)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application approved)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Approve application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Approve application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Approve application)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application approved)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application approved)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application approved)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% CoExistence(Loan  application approved,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Receive updated application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Return application back to applicant)           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application approved,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application approved,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Approve application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Approve application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Approve application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application approved)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application approved)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application approved)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% RespondedExistence(Receive updated application,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Approve application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Loan  application approved)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% RespondedExistence(Return application back to applicant,  Approve application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Approve application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Loan  application approved)           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Loan  application approved)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Approve application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Approve application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Approve application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Approve application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Approve application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application approved)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application approved)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application approved)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application approved)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application approved)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Approve application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Approve application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application approved)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';84;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';84;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\10LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Receive updated application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Receive updated application,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Return application back to applicant,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Return application back to applicant,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application approved] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% ChainPrecedence(Added Activity,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[Added Activity] => {
		100.000% NotCoExistence(Added Activity,  Appraise property)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Approve application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Approve application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Assess eligibility)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Assess loan risk)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Cancel application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check  application  form completeness)        conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check credit history)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application approved)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application approved)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application canceled)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Loan  application received)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Added Activity,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Receive updated application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Send home insurance quote)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% NotSuccession(Appraise property,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Appraise property,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Approve application] => {
		100.000% NotChainSuccession(Approve application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Approve application,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Approve application,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% NotChainSuccession(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess eligibility,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess eligibility,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotSuccession(Assess loan risk,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Assess loan risk,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% NotChainSuccession(Cancel application,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Cancel application,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Cancel application,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% NotSuccession(Check  application  form completeness,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check  application  form completeness,  Added Activity)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotSuccession(Check credit history,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check credit history,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application approved] => {
		100.000% NotChainSuccession(Loan  application approved,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application approved,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application approved,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% NotChainSuccession(Loan  application canceled,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan  application canceled,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application canceled,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotSuccession(Loan  application received,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan  application received,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Added Activity)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Added Activity)              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Receive updated application,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Receive updated application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Receive updated application,  Added Activity)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Added Activity)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Added Activity)     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Return application back to applicant,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Return application back to applicant,  Added Activity)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Return application back to applicant,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% NotChainSuccession(Send acceptance pack,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% NotChainSuccession(Send home insurance quote,  Added Activity)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';83;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';83;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\11LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application canceled] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Cancel application)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Cancel application)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Loan  application canceled)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan  application canceled)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Cancel application)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Cancel application)                                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Cancel application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Loan  application canceled)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan  application canceled)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan  application canceled)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Appraise property)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess eligibility)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check  application  form completeness)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check credit history)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Loan  application received)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Receive updated application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Return application back to applicant)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Cancel application,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Cancel application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Loan  application canceled)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Cancel application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Cancel application)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Cancel application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Loan  application canceled)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan  application canceled)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan  application canceled)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Cancel application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Cancel application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Cancel application)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application canceled)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Loan  application canceled)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Loan  application canceled)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application canceled,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Cancel application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Cancel application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Loan  application canceled)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Loan  application canceled)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Cancel application)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application canceled)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Cancel application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Cancel application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application canceled)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Loan  application canceled)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Verify repayment agreement,  Cancel application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Verify repayment agreement,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Verify repayment agreement,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';81;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';81;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\12LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Added Activity,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		100.000% Precedence(Added Activity,  Reject application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Added Activity,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Added Activity,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Added Activity] => {
		100.000% AtMostOne(Added Activity)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Added Activity,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Added Activity,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Added Activity)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Added Activity)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Added Activity)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Added Activity)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Added Activity)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Added Activity)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Added Activity)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Added Activity)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Added Activity)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Added Activity)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Added Activity)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Added Activity)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';80;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';80;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\13LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		100.000% Precedence(Reject application,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Reject application,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Reject application,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Reject application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Reject application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Reject application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Reject application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Reject application)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Reject application)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Reject application)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Reject application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Reject application)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% AtMostOne(Reject application)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Check if home insurance quote is requested)        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Loan application rejected)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Reject application,  Loan application rejected)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Reject application,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Reject application,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Reject application,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Reject application,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Reject application,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Prepare acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Reject application,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Reject application)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';75;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';75;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\14LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send acceptance pack)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send acceptance pack)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send acceptance pack)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send acceptance pack)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send acceptance pack)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% AtMostOne(Send acceptance pack)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send acceptance pack,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send acceptance pack,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send acceptance pack,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send acceptance pack,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send acceptance pack)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';75;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';75;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\15LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send home insurance quote] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Send home insurance quote)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Send home insurance quote)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Send home insurance quote)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Send home insurance quote)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Send home insurance quote)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Send home insurance quote)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Send home insurance quote)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Send home insurance quote)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% RespondedExistence(Check if home insurance quote is requested,  Send home insurance quote)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check if home insurance quote is requested,  Send home insurance quote)              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check if home insurance quote is requested,  Send home insurance quote)     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check if home insurance quote is requested,  Send home insurance quote)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Send home insurance quote)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Send home insurance quote)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Send home insurance quote)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% RespondedExistence(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Prepare acceptance pack,  Send home insurance quote)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Prepare acceptance pack,  Send home insurance quote)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Send home insurance quote)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Send home insurance quote)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Send home insurance quote)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send home insurance quote] => {
		100.000% AtMostOne(Send home insurance quote)                                                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Appraise property)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess eligibility)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Assess loan risk)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check  application  form completeness)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check credit history)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Check if home insurance quote is requested)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan  application received)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Send home insurance quote,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Prepare acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Receive updated application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Send home insurance quote,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Send home insurance quote,  Return application back to applicant)               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send home insurance quote,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send home insurance quote,  Verify repayment agreement)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send home insurance quote,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Send home insurance quote,  Verify repayment agreement)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% RespondedExistence(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Send home insurance quote)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Send home insurance quote)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';71;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';71;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\16LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Approve application] => {
		100.000% Precedence(Send acceptance pack,  Approve application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Approve application)                           conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Cancel application] => {
		100.000% Precedence(Send acceptance pack,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application approved] => {
		100.000% Precedence(Send acceptance pack,  Loan  application approved)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application approved)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application canceled] => {
		100.000% Precedence(Send acceptance pack,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[ Send acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		100.000% Precedence(Send acceptance pack,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Send acceptance pack,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Send acceptance pack)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Send acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Send acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Send acceptance pack)                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Cancel application] => {
		100.000% CoExistence(Cancel application,  Send acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Cancel application,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Send acceptance pack)                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Send acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Send acceptance pack)           conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Send acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Send acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Send acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Send acceptance pack)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check if home insurance quote is requested,  Send acceptance pack)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check if home insurance quote is requested,  Send acceptance pack)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check if home insurance quote is requested,  Send acceptance pack)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application canceled] => {
		100.000% CoExistence(Loan  application canceled,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan  application canceled,  Send acceptance pack)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Send acceptance pack)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Send acceptance pack)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Send acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Prepare acceptance pack,  Send acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Prepare acceptance pack,  Send acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Send acceptance pack)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Send acceptance pack)                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Send acceptance pack)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Send acceptance pack] => {
		100.000% CoExistence(Send acceptance pack,  Appraise property)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess eligibility)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Assess loan risk)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Cancel application)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Cancel application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Cancel application)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Cancel application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Cancel application)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Cancel application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check credit history)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Check if home insurance quote is requested)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application canceled)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Loan  application canceled)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Loan  application canceled)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Send acceptance pack,  Loan  application canceled)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Send acceptance pack,  Loan  application canceled)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Send acceptance pack,  Loan  application canceled)                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Loan  application received)                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Prepare acceptance pack)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Receive updated application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Return application back to applicant)                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Send acceptance pack,  Verify repayment agreement)                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Send acceptance pack,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Send acceptance pack,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Send acceptance pack,  Verify repayment agreement)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Send acceptance pack)                            conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';70;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';70;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\17LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Check if home insurance quote is requested)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Check if home insurance quote is requested)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Prepare acceptance pack)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Prepare acceptance pack)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Verify repayment agreement)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Verify repayment agreement)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Check if home insurance quote is requested)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Check if home insurance quote is requested)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Check if home insurance quote is requested)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Prepare acceptance pack)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Prepare acceptance pack)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Prepare acceptance pack)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Verify repayment agreement)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Verify repayment agreement)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Verify repayment agreement)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Check if home insurance quote is requested)     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Prepare acceptance pack)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Verify repayment agreement)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Check if home insurance quote is requested)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Check if home insurance quote is requested)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Prepare acceptance pack)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Prepare acceptance pack)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Verify repayment agreement)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Verify repayment agreement)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% CoExistence(Check if home insurance quote is requested,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check if home insurance quote is requested,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Check if home insurance quote is requested)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Check if home insurance quote is requested)       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Prepare acceptance pack)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Prepare acceptance pack)                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Verify repayment agreement)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Verify repayment agreement)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% CoExistence(Prepare acceptance pack,  Appraise property)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check  application  form completeness)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Check credit history)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Prepare acceptance pack,  Loan  application received)                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% CoExistence(Verify repayment agreement,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess eligibility)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Assess loan risk)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check  application  form completeness)                    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Check credit history)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Verify repayment agreement,  Loan  application received)                               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';54;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';54;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\18LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		100.000% Precedence(Check credit history,  Appraise property)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		100.000% AlternatePrecedence(Loan  application received,  Check  application  form completeness)                  conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Loan  application received,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check credit history] => {
		100.000% ChainPrecedence(Check  application  form completeness,  Check credit history)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check if home insurance quote is requested] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Prepare acceptance pack] => {
		
	}

	[ Receive updated application] => {
		100.000% AlternatePrecedence(Loan  application received,  Receive updated application)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Return application back to applicant] => {
		100.000% AlternatePrecedence(Loan  application received,  Return application back to applicant)                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Verify repayment agreement] => {
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Check credit history)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Appraise property,  Check credit history)                                                  conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AtMostOne(Check  application  form completeness)                                                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% Succession(Check credit history,  Appraise property)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Appraise property)                                                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Appraise property)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check if home insurance quote is requested] => {
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Loan application rejected)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Check if home insurance quote is requested,  Loan application rejected)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Receive updated application)                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check if home insurance quote is requested,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Check if home insurance quote is requested,  Return application back to applicant)         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		
	}

	[Loan application rejected] => {
		100.000% NotChainSuccession(Loan application rejected,  Check if home insurance quote is requested)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check if home insurance quote is requested)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Check if home insurance quote is requested)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Prepare acceptance pack)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Prepare acceptance pack)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Prepare acceptance pack)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Verify repayment agreement)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Verify repayment agreement)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Loan application rejected,  Verify repayment agreement)                                   conf.:   1.000;  int'f:   1.000; 
		
	}

	[Prepare acceptance pack] => {
		100.000% NotChainSuccession(Prepare acceptance pack,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Loan application rejected)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Prepare acceptance pack,  Loan application rejected)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Receive updated application)                                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Prepare acceptance pack,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Prepare acceptance pack,  Return application back to applicant)                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Check if home insurance quote is requested)             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Prepare acceptance pack)                                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Receive updated application,  Verify repayment agreement)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Check if home insurance quote is requested)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Prepare acceptance pack)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Return application back to applicant,  Verify repayment agreement)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Verify repayment agreement] => {
		100.000% NotChainSuccession(Verify repayment agreement,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Loan application rejected)                                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotCoExistence(Verify repayment agreement,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Receive updated application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Receive updated application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Verify repayment agreement,  Return application back to applicant)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Verify repayment agreement,  Return application back to applicant)                         conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';49;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';49;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\19LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Receive updated application)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Appraise property,  Return application back to applicant)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Receive updated application)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess eligibility,  Return application back to applicant)                               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Receive updated application)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Assess loan risk,  Return application back to applicant)                                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% ChainSuccession(Check  application  form completeness,  Appraise property)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Check credit history)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Receive updated application)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check  application  form completeness,  Return application back to applicant)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check  application  form completeness,  Return application back to applicant)        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Receive updated application)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Check credit history,  Return application back to applicant)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% NotChainSuccession(Loan  application received,  Check  application  form completeness)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Receive updated application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Receive updated application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan  application received,  Return application back to applicant)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Return application back to applicant)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% AtMostOne(Receive updated application)                                                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Appraise property)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Appraise property)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess eligibility)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess eligibility)                                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Assess loan risk)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check  application  form completeness)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check  application  form completeness)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Receive updated application,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Receive updated application,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Check credit history)                                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Check credit history)                                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Receive updated application,  Loan  application received)                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% AtMostOne(Return application back to applicant)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Appraise property)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess eligibility)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess eligibility)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Assess loan risk)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Assess loan risk)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check  application  form completeness)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Return application back to applicant,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Check credit history)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Check credit history)                              conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Return application back to applicant,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';48;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';48;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\20LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% RespondedExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Loan application rejected)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% RespondedExistence(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess eligibility,  Loan application rejected)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess eligibility,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% RespondedExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Assess loan risk,  Loan application rejected)                                   conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% RespondedExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check  application  form completeness,  Loan application rejected)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% RespondedExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Check credit history,  Loan application rejected)                               conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% RespondedExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Loan  application received,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% AtMostOne(Loan application rejected)                                                     conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Appraise property)                             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess eligibility)                            conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Assess loan risk)                              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check  application  form completeness)         conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Check credit history)                          conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Loan  application received)                    conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Receive updated application)              conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Receive updated application)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Loan application rejected,  Return application back to applicant)     conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Loan application rejected,  Return application back to applicant)          conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% NotChainSuccession(Receive updated application,  Loan application rejected)              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% NotChainSuccession(Return application back to applicant,  Loan application rejected)     conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';41;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';41;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\21LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		
	}

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[ Reject application] => {
		
	}

	[Added Activity] => {
		100.000% Participation(Added Activity)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Assess eligibility)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Assess loan risk)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Check  application  form completeness)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Check credit history)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Added Activity,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Added Activity,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Added Activity,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Added Activity,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Added Activity,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Added Activity,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Added Activity,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Added Activity,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Added Activity,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Added Activity)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Added Activity)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Added Activity)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Assess eligibility,  Reject application)                    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Added Activity)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Added Activity)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% CoExistence(Reject application,  Added Activity)                               conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Reject application,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Reject application,  Added Activity)                             conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';40;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';40;0;1
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\22LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Reject application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Reject application)                               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Reject application)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess eligibility,  Reject application)                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess eligibility,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Reject application)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Reject application)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Reject application)            conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Check  application  form completeness,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Reject application)                             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Reject application)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Reject application)                     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Reject application)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Receive updated application] => {
		100.000% CoExistence(Receive updated application,  Reject application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Receive updated application,  Reject application)                       conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Receive updated application,  Reject application)               conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Receive updated application,  Reject application)                         conf.:   1.000;  int'f:   1.000; 
		
	}

	[Reject application] => {
		100.000% Participation(Reject application)                                                  conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Appraise property)                                conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess eligibility)                               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Assess loan risk)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check  application  form completeness)            conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Check credit history)                             conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Loan  application received)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Receive updated application)                      conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Receive updated application)               conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Reject application,  Return application back to applicant)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Reject application,  Return application back to applicant)      conf.:   1.000;  int'f:   1.000; 
		
	}

	[Return application back to applicant] => {
		100.000% CoExistence(Return application back to applicant,  Reject application)             conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Return application back to applicant,  Reject application)              conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Return application back to applicant,  Reject application)      conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Return application back to applicant,  Reject application)                conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';27;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';27;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\23LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		100.000% ChainPrecedence(Assess loan risk,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Assess loan risk] => {
		100.000% Precedence(Appraise property,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Receive updated application] => {
		
	}

	[ Return application back to applicant] => {
		
	}

	[Appraise property] => {
		100.000% NotChainSuccession(Appraise property,  Assess eligibility)                                          conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Assess loan risk)                                                    conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Assess loan risk)                                           conf.:   1.000;  int'f:   1.000; 
		100.000% Response(Appraise property,  Assess loan risk)                                                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateResponse(Appraise property,  Assess loan risk)                                             conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Appraise property,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% NotChainSuccession(Assess loan risk,  Appraise property)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% NotSuccession(Assess loan risk,  Appraise property)                                                 conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Assess loan risk,  Assess eligibility)                                              conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Assess loan risk,  Assess eligibility)                                                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% AlternateSuccession(Check  application  form completeness,  Appraise property)                      conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Appraise property)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess eligibility)                     conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Assess loan risk)                       conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check  application  form completeness,  Check credit history)                   conf.:   1.000;  int'f:   1.000; 
		100.000% NotChainSuccession(Check  application  form completeness,  Check credit history)                    conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Receive updated application)             conf.:   1.000;  int'f:   1.000; 
		100.000% RespondedExistence(Check  application  form completeness,  Return application back to applicant)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% NotChainSuccession(Check credit history,  Appraise property)                                        conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Check credit history,  Assess loan risk)                                            conf.:   1.000;  int'f:   1.000; 
		100.000% ChainResponse(Check credit history,  Assess loan risk)                                              conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% AlternateSuccession(Loan  application received,  Check  application  form completeness)             conf.:   1.000;  int'f:   1.000; 
		100.000% ChainSuccession(Loan  application received,  Check  application  form completeness)                 conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';23;0;1
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';23;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\24LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Appraise property] => {
		
	}

	[ Assess eligibility] => {
		
	}

	[ Assess loan risk] => {
		
	}

	[ Check  application  form completeness] => {
		
	}

	[ Check credit history] => {
		
	}

	[ Loan  application received] => {
		
	}

	[ Loan application rejected] => {
		
	}

	[Appraise property] => {
		100.000% CoExistence(Appraise property,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Appraise property,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Appraise property,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		100.000% CoExistence(Assess eligibility,  Loan application rejected)                       conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess eligibility,  Loan application rejected)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess eligibility,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess loan risk] => {
		100.000% CoExistence(Assess loan risk,  Loan application rejected)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Assess loan risk,  Loan application rejected)                          conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Assess loan risk,  Loan application rejected)                 conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check  application  form completeness] => {
		100.000% CoExistence(Check  application  form completeness,  Loan application rejected)    conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check  application  form completeness,  Loan application rejected)     conf.:   1.000;  int'f:   1.000; 
		
	}

	[Check credit history] => {
		100.000% CoExistence(Check credit history,  Loan application rejected)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Check credit history,  Loan application rejected)                      conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Check credit history,  Loan application rejected)             conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan  application received] => {
		100.000% CoExistence(Loan  application received,  Loan application rejected)               conf.:   1.000;  int'f:   1.000; 
		100.000% Succession(Loan  application received,  Loan application rejected)                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternateSuccession(Loan  application received,  Loan application rejected)       conf.:   1.000;  int'f:   1.000; 
		
	}

	[Loan application rejected] => {
		100.000% CoExistence(Loan application rejected,  Appraise property)                        conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess eligibility)                       conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Assess loan risk)                         conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check  application  form completeness)    conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Check credit history)                     conf.:   1.000;  int'f:   1.000; 
		100.000% CoExistence(Loan application rejected,  Loan  application received)               conf.:   1.000;  int'f:   1.000; 
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';13;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';13;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\25LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Added Activity] => {
		100.000% Precedence(Appraise property,  Added Activity)                                 conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Appraise property,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess eligibility,  Added Activity)                                conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess eligibility,  Added Activity)                       conf.:   1.000;  int'f:   1.000; 
		100.000% ChainPrecedence(Assess eligibility,  Added Activity)                           conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Assess loan risk,  Added Activity)                                  conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Assess loan risk,  Added Activity)                         conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check  application  form completeness,  Added Activity)             conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check  application  form completeness,  Added Activity)    conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Check credit history,  Added Activity)                              conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Check credit history,  Added Activity)                     conf.:   1.000;  int'f:   1.000; 
		100.000% Precedence(Loan  application received,  Added Activity)                        conf.:   1.000;  int'f:   1.000; 
		100.000% AlternatePrecedence(Loan  application received,  Added Activity)               conf.:   1.000;  int'f:   1.000; 
		
	}

	[Appraise property] => {
		
	}

	[Assess eligibility] => {
		
	}

	[Assess loan risk] => {
		
	}

	[Check  application  form completeness] => {
		
	}

	[Check credit history] => {
		
	}

	[Loan  application received] => {
		
	}

INFO [main] core.MinerFulQueryingCore (massageConstraints:50) - Post-processing the discovered model...
INFO [main] core.MinerFulQueryingCore (markConstraintsBelowThresholds:70) - Pruning constraints below thresholds...
INFO [main] pruning.ThresholdsMarker (printComputationStats:88) - 

Thresholds-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'Th-check';1;0;0
INFO [main] core.MinerFulQueryingCore (markRedundancyBySubsumptionHierarchy:124) - Pruning redundancy, on the basis of hierarchy subsumption...
INFO [main] lang.String (info:141) - 

Subsumption-hierarchy-based pruning: 
'Operation code';'Input constraints';'Marked constraints';'Time'
'SH-check';1;0;0
INFO [main] minerful.MinerFulOutputManagementLauncher (info:141) - Saving discovered constraints in CSV format as C:\Users\raduy\Process-Drift-Visualization-With-Declare\data\data_results_final\LS3_INCREMENTAL\graphs\drift_plots\constraints_in_clusters\constraints_pruned\26LS3_INCREMENTAL_50_25_ward_euclidean_300_distance.csv...

	[ Reject application] => {
		100.000% ChainPrecedence(Assess eligibility,  Reject application)    conf.:   1.000;  int'f:   1.000; 
		
	}

	[Assess eligibility] => {
		
	}

sorted: 29 out of: 75
sorted: 30 out of: 75
sorted: 31 out of: 75
sorted: 32 out of: 75
sorted: 33 out of: 75
sorted: 34 out of: 75
sorted: 35 out of: 75
sorted: 36 out of: 75
sorted: 37 out of: 75
sorted: 38 out of: 75
sorted: 39 out of: 75
sorted: 40 out of: 75
sorted: 41 out of: 75
sorted: 42 out of: 75
sorted: 43 out of: 75
sorted: 44 out of: 75
sorted: 45 out of: 75
sorted: 46 out of: 75
sorted: 47 out of: 75
sorted: 48 out of: 75
sorted: 49 out of: 75
sorted: 50 out of: 75
sorted: 51 out of: 75
sorted: 52 out of: 75
sorted: 53 out of: 75
sorted: 54 out of: 75
sorted: 55 out of: 75
sorted: 56 out of: 75
sorted: 57 out of: 75
sorted: 58 out of: 75
sorted: 59 out of: 75
sorted: 60 out of: 75
sorted: 61 out of: 75
sorted: 62 out of: 75
sorted: 63 out of: 75
sorted: 64 out of: 75
sorted: 65 out of: 75
sorted: 66 out of: 75
sorted: 67 out of: 75
sorted: 68 out of: 75
sorted: 69 out of: 75
sorted: 70 out of: 75
sorted: 71 out of: 75
sorted: 72 out of: 75
sorted: 73 out of: 75
sorted: 74 out of: 75
sorted: 75 out of: 75
Cluster size: 75
there were : 71 values
sorted: 1 out of: 71
sorted: 2 out of: 71
sorted: 3 out of: 71
sorted: 4 out of: 71
sorted: 5 out of: 71
sorted: 6 out of: 71
sorted: 7 out of: 71
sorted: 8 out of: 71
sorted: 9 out of: 71
sorted: 10 out of: 71
sorted: 11 out of: 71
sorted: 12 out of: 71
sorted: 13 out of: 71
sorted: 14 out of: 71
sorted: 15 out of: 71
sorted: 16 out of: 71
sorted: 17 out of: 71
sorted: 18 out of: 71
sorted: 19 out of: 71
sorted: 20 out of: 71
sorted: 21 out of: 71
sorted: 22 out of: 71
sorted: 23 out of: 71
sorted: 24 out of: 71
sorted: 25 out of: 71
sorted: 26 out of: 71
sorted: 27 out of: 71
sorted: 28 out of: 71
sorted: 29 out of: 71
sorted: 30 out of: 71
sorted: 31 out of: 71
sorted: 32 out of: 71
sorted: 33 out of: 71
sorted: 34 out of: 71
sorted: 35 out of: 71
sorted: 36 out of: 71
sorted: 37 out of: 71
sorted: 38 out of: 71
sorted: 39 out of: 71
sorted: 40 out of: 71
sorted: 41 out of: 71
sorted: 42 out of: 71
sorted: 43 out of: 71
sorted: 44 out of: 71
sorted: 45 out of: 71
sorted: 46 out of: 71
sorted: 47 out of: 71
sorted: 48 out of: 71
sorted: 49 out of: 71
sorted: 50 out of: 71
sorted: 51 out of: 71
sorted: 52 out of: 71
sorted: 53 out of: 71
sorted: 54 out of: 71
sorted: 55 out of: 71
sorted: 56 out of: 71
sorted: 57 out of: 71
sorted: 58 out of: 71
sorted: 59 out of: 71
sorted: 60 out of: 71
sorted: 61 out of: 71
sorted: 62 out of: 71
sorted: 63 out of: 71
sorted: 64 out of: 71
sorted: 65 out of: 71
sorted: 66 out of: 71
sorted: 67 out of: 71
sorted: 68 out of: 71
sorted: 69 out of: 71
sorted: 70 out of: 71
sorted: 71 out of: 71
Cluster size: 71
there were : 70 values
sorted: 1 out of: 70
sorted: 2 out of: 70
sorted: 3 out of: 70
sorted: 4 out of: 70
sorted: 5 out of: 70
sorted: 6 out of: 70
sorted: 7 out of: 70
sorted: 8 out of: 70
sorted: 9 out of: 70
sorted: 10 out of: 70
sorted: 11 out of: 70
sorted: 12 out of: 70
sorted: 13 out of: 70
sorted: 14 out of: 70
sorted: 15 out of: 70
sorted: 16 out of: 70
sorted: 17 out of: 70
sorted: 18 out of: 70
sorted: 19 out of: 70
sorted: 20 out of: 70
sorted: 21 out of: 70
sorted: 22 out of: 70
sorted: 23 out of: 70
sorted: 24 out of: 70
sorted: 25 out of: 70
sorted: 26 out of: 70
sorted: 27 out of: 70
sorted: 28 out of: 70
sorted: 29 out of: 70
sorted: 30 out of: 70
sorted: 31 out of: 70
sorted: 32 out of: 70
sorted: 33 out of: 70
sorted: 34 out of: 70
sorted: 35 out of: 70
sorted: 36 out of: 70
sorted: 37 out of: 70
sorted: 38 out of: 70
sorted: 39 out of: 70
sorted: 40 out of: 70
sorted: 41 out of: 70
sorted: 42 out of: 70
sorted: 43 out of: 70
sorted: 44 out of: 70
sorted: 45 out of: 70
sorted: 46 out of: 70
sorted: 47 out of: 70
sorted: 48 out of: 70
sorted: 49 out of: 70
sorted: 50 out of: 70
sorted: 51 out of: 70
sorted: 52 out of: 70
sorted: 53 out of: 70
sorted: 54 out of: 70
sorted: 55 out of: 70
sorted: 56 out of: 70
sorted: 57 out of: 70
sorted: 58 out of: 70
sorted: 59 out of: 70
sorted: 60 out of: 70
sorted: 61 out of: 70
sorted: 62 out of: 70
sorted: 63 out of: 70
sorted: 64 out of: 70
sorted: 65 out of: 70
sorted: 66 out of: 70
sorted: 67 out of: 70
sorted: 68 out of: 70
sorted: 69 out of: 70
sorted: 70 out of: 70
Cluster size: 70
there were : 54 values
sorted: 1 out of: 54
sorted: 2 out of: 54
sorted: 3 out of: 54
sorted: 4 out of: 54
sorted: 5 out of: 54
sorted: 6 out of: 54
sorted: 7 out of: 54
sorted: 8 out of: 54
sorted: 9 out of: 54
sorted: 10 out of: 54
sorted: 11 out of: 54
sorted: 12 out of: 54
sorted: 13 out of: 54
sorted: 14 out of: 54
sorted: 15 out of: 54
sorted: 16 out of: 54
sorted: 17 out of: 54
sorted: 18 out of: 54
sorted: 19 out of: 54
sorted: 20 out of: 54
sorted: 21 out of: 54
sorted: 22 out of: 54
sorted: 23 out of: 54
sorted: 24 out of: 54
sorted: 25 out of: 54
sorted: 26 out of: 54
sorted: 27 out of: 54
sorted: 28 out of: 54
sorted: 29 out of: 54
sorted: 30 out of: 54
sorted: 31 out of: 54
sorted: 32 out of: 54
sorted: 33 out of: 54
sorted: 34 out of: 54
sorted: 35 out of: 54
sorted: 36 out of: 54
sorted: 37 out of: 54
sorted: 38 out of: 54
sorted: 39 out of: 54
sorted: 40 out of: 54
sorted: 41 out of: 54
sorted: 42 out of: 54
sorted: 43 out of: 54
sorted: 44 out of: 54
sorted: 45 out of: 54
sorted: 46 out of: 54
sorted: 47 out of: 54
sorted: 48 out of: 54
sorted: 49 out of: 54
sorted: 50 out of: 54
sorted: 51 out of: 54
sorted: 52 out of: 54
sorted: 53 out of: 54
sorted: 54 out of: 54
Cluster size: 54
there were : 49 values
sorted: 1 out of: 49
sorted: 2 out of: 49
sorted: 3 out of: 49
sorted: 4 out of: 49
sorted: 5 out of: 49
sorted: 6 out of: 49
sorted: 7 out of: 49
sorted: 8 out of: 49
sorted: 9 out of: 49
sorted: 10 out of: 49
sorted: 11 out of: 49
sorted: 12 out of: 49
sorted: 13 out of: 49
sorted: 14 out of: 49
sorted: 15 out of: 49
sorted: 16 out of: 49
sorted: 17 out of: 49
sorted: 18 out of: 49
sorted: 19 out of: 49
sorted: 20 out of: 49
sorted: 21 out of: 49
sorted: 22 out of: 49
sorted: 23 out of: 49
sorted: 24 out of: 49
sorted: 25 out of: 49
sorted: 26 out of: 49
sorted: 27 out of: 49
sorted: 28 out of: 49
sorted: 29 out of: 49
sorted: 30 out of: 49
sorted: 31 out of: 49
sorted: 32 out of: 49
sorted: 33 out of: 49
sorted: 34 out of: 49
sorted: 35 out of: 49
sorted: 36 out of: 49
sorted: 37 out of: 49
sorted: 38 out of: 49
sorted: 39 out of: 49
sorted: 40 out of: 49
sorted: 41 out of: 49
sorted: 42 out of: 49
sorted: 43 out of: 49
sorted: 44 out of: 49
sorted: 45 out of: 49
sorted: 46 out of: 49
sorted: 47 out of: 49
sorted: 48 out of: 49
sorted: 49 out of: 49
Cluster size: 49
there were : 48 values
sorted: 1 out of: 48
sorted: 2 out of: 48
sorted: 3 out of: 48
sorted: 4 out of: 48
sorted: 5 out of: 48
sorted: 6 out of: 48
sorted: 7 out of: 48
sorted: 8 out of: 48
sorted: 9 out of: 48
sorted: 10 out of: 48
sorted: 11 out of: 48
sorted: 12 out of: 48
sorted: 13 out of: 48
sorted: 14 out of: 48
sorted: 15 out of: 48
sorted: 16 out of: 48
sorted: 17 out of: 48
sorted: 18 out of: 48
sorted: 19 out of: 48
sorted: 20 out of: 48
sorted: 21 out of: 48
sorted: 22 out of: 48
sorted: 23 out of: 48
sorted: 24 out of: 48
sorted: 25 out of: 48
sorted: 26 out of: 48
sorted: 27 out of: 48
sorted: 28 out of: 48
sorted: 29 out of: 48
sorted: 30 out of: 48
sorted: 31 out of: 48
sorted: 32 out of: 48
sorted: 33 out of: 48
sorted: 34 out of: 48
sorted: 35 out of: 48
sorted: 36 out of: 48
sorted: 37 out of: 48
sorted: 38 out of: 48
sorted: 39 out of: 48
sorted: 40 out of: 48
sorted: 41 out of: 48
sorted: 42 out of: 48
sorted: 43 out of: 48
sorted: 44 out of: 48
sorted: 45 out of: 48
sorted: 46 out of: 48
sorted: 47 out of: 48
sorted: 48 out of: 48
Cluster size: 48
there were : 41 values
sorted: 1 out of: 41
sorted: 2 out of: 41
sorted: 3 out of: 41
sorted: 4 out of: 41
sorted: 5 out of: 41
sorted: 6 out of: 41
sorted: 7 out of: 41
sorted: 8 out of: 41
sorted: 9 out of: 41
sorted: 10 out of: 41
sorted: 11 out of: 41
sorted: 12 out of: 41
sorted: 13 out of: 41
sorted: 14 out of: 41
sorted: 15 out of: 41
sorted: 16 out of: 41
sorted: 17 out of: 41
sorted: 18 out of: 41
sorted: 19 out of: 41
sorted: 20 out of: 41
sorted: 21 out of: 41
sorted: 22 out of: 41
sorted: 23 out of: 41
sorted: 24 out of: 41
sorted: 25 out of: 41
sorted: 26 out of: 41
sorted: 27 out of: 41
sorted: 28 out of: 41
sorted: 29 out of: 41
sorted: 30 out of: 41
sorted: 31 out of: 41
sorted: 32 out of: 41
sorted: 33 out of: 41
sorted: 34 out of: 41
sorted: 35 out of: 41
sorted: 36 out of: 41
sorted: 37 out of: 41
sorted: 38 out of: 41
sorted: 39 out of: 41
sorted: 40 out of: 41
sorted: 41 out of: 41
Cluster size: 41
there were : 40 values
sorted: 1 out of: 40
sorted: 2 out of: 40
sorted: 3 out of: 40
sorted: 4 out of: 40
sorted: 5 out of: 40
sorted: 6 out of: 40
sorted: 7 out of: 40
sorted: 8 out of: 40
sorted: 9 out of: 40
sorted: 10 out of: 40
sorted: 11 out of: 40
sorted: 12 out of: 40
sorted: 13 out of: 40
sorted: 14 out of: 40
sorted: 15 out of: 40
sorted: 16 out of: 40
sorted: 17 out of: 40
sorted: 18 out of: 40
sorted: 19 out of: 40
sorted: 20 out of: 40
sorted: 21 out of: 40
sorted: 22 out of: 40
sorted: 23 out of: 40
sorted: 24 out of: 40
sorted: 25 out of: 40
sorted: 26 out of: 40
sorted: 27 out of: 40
sorted: 28 out of: 40
sorted: 29 out of: 40
sorted: 30 out of: 40
sorted: 31 out of: 40
sorted: 32 out of: 40
sorted: 33 out of: 40
sorted: 34 out of: 40
sorted: 35 out of: 40
sorted: 36 out of: 40
sorted: 37 out of: 40
sorted: 38 out of: 40
sorted: 39 out of: 40
sorted: 40 out of: 40
Cluster size: 40
there were : 27 values
sorted: 1 out of: 27
sorted: 2 out of: 27
sorted: 3 out of: 27
sorted: 4 out of: 27
sorted: 5 out of: 27
sorted: 6 out of: 27
sorted: 7 out of: 27
sorted: 8 out of: 27
sorted: 9 out of: 27
sorted: 10 out of: 27
sorted: 11 out of: 27
sorted: 12 out of: 27
sorted: 13 out of: 27
sorted: 14 out of: 27
sorted: 15 out of: 27
sorted: 16 out of: 27
sorted: 17 out of: 27
sorted: 18 out of: 27
sorted: 19 out of: 27
sorted: 20 out of: 27
sorted: 21 out of: 27
sorted: 22 out of: 27
sorted: 23 out of: 27
sorted: 24 out of: 27
sorted: 25 out of: 27
sorted: 26 out of: 27
sorted: 27 out of: 27
Cluster size: 27
there were : 23 values
sorted: 1 out of: 23
sorted: 2 out of: 23
sorted: 3 out of: 23
sorted: 4 out of: 23
sorted: 5 out of: 23
sorted: 6 out of: 23
sorted: 7 out of: 23
sorted: 8 out of: 23
sorted: 9 out of: 23
sorted: 10 out of: 23
sorted: 11 out of: 23
sorted: 12 out of: 23
sorted: 13 out of: 23
sorted: 14 out of: 23
sorted: 15 out of: 23
sorted: 16 out of: 23
sorted: 17 out of: 23
sorted: 18 out of: 23
sorted: 19 out of: 23
sorted: 20 out of: 23
sorted: 21 out of: 23
sorted: 22 out of: 23
sorted: 23 out of: 23
Cluster size: 23
there were : 13 values
sorted: 1 out of: 13
sorted: 2 out of: 13
sorted: 3 out of: 13
sorted: 4 out of: 13
sorted: 5 out of: 13
sorted: 6 out of: 13
sorted: 7 out of: 13
sorted: 8 out of: 13
sorted: 9 out of: 13
sorted: 10 out of: 13
sorted: 11 out of: 13
sorted: 12 out of: 13
sorted: 13 out of: 13
Cluster size: 13
there were : 1 values
sorted: 1 out of: 1
Cluster size: 1
number of clusters: 27
x lines: 
[10, 20, 35, 39]
clusters were ordered in the : 
[10, 2, 12, 22, 16, 20, 19, 13, 4, 15, 9, 11, 7, 23, 21, 18, 14, 25, 5, 27, 3, 8, 17, 1, 26, 6, 24]
- - - start drawing drift map
- - - start processing the timeseries in clusters
without DRIFT: 38
current DRIFT (curve length): 38.057308766712374
current DRIFT (polyine length): 39.382844148110934
without DRIFT: 38
current DRIFT (curve length): 44.57011448681473
current DRIFT (polyine length): 86.29758564262727
without DRIFT: 38
current DRIFT (curve length): 38.77700002189985
current DRIFT (polyine length): 51.05594414560243
without DRIFT: 38
current DRIFT (curve length): 44.634724418121
current DRIFT (polyine length): 96.08544622663261
without DRIFT: 38
current DRIFT (curve length): 46.17418351019547
current DRIFT (polyine length): 96.36118949948202
without DRIFT: 38
current DRIFT (curve length): 38.48993805150113
current DRIFT (polyine length): 47.17773908245619
without DRIFT: 38
current DRIFT (curve length): 41.33101082300491
current DRIFT (polyine length): 71.05173375448184
without DRIFT: 38
current DRIFT (curve length): 38.286280670117755
current DRIFT (polyine length): 42.37941695070699
without DRIFT: 38
current DRIFT (curve length): 42.32623141441668
current DRIFT (polyine length): 73.57471676961757
without DRIFT: 38
current DRIFT (curve length): 42.654855687564655
current DRIFT (polyine length): 77.3039192667131
without DRIFT: 38
current DRIFT (curve length): 42.72650524585802
current DRIFT (polyine length): 48.19895882419862
without DRIFT: 38
current DRIFT (curve length): 43.8030400110047
current DRIFT (polyine length): 82.01036530734821
without DRIFT: 38
current DRIFT (curve length): 52.74112307160821
current DRIFT (polyine length): 80.60108161450276
without DRIFT: 38
current DRIFT (curve length): 47.99986504537985
current DRIFT (polyine length): 84.25940800241956
without DRIFT: 38
current DRIFT (curve length): 46.3493968775638
current DRIFT (polyine length): 91.47863423210855
without DRIFT: 38
current DRIFT (curve length): 43.50865020430438
current DRIFT (polyine length): 95.92633282009915
without DRIFT: 38
current DRIFT (curve length): 42.458727184082505
current DRIFT (polyine length): 74.14633942856044
without DRIFT: 38
current DRIFT (curve length): 45.91450090006848
current DRIFT (polyine length): 93.17266088346062
without DRIFT: 38
current DRIFT (curve length): 39.493728702733826
current DRIFT (polyine length): 55.92334596101829
without DRIFT: 38
current DRIFT (curve length): 43.09219647340484
current DRIFT (polyine length): 82.42070865382594
without DRIFT: 38
current DRIFT (curve length): 44.26840214674251
current DRIFT (polyine length): 83.7493907775516
without DRIFT: 38
current DRIFT (curve length): 50.71208359244535
current DRIFT (polyine length): 84.2087396310404
without DRIFT: 38
current DRIFT (curve length): 46.07561071775391
current DRIFT (polyine length): 78.8903355634686
without DRIFT: 38
current DRIFT (curve length): 39.8399481906447
current DRIFT (polyine length): 54.91643283969434
without DRIFT: 38
current DRIFT (curve length): 45.71836041538233
current DRIFT (polyine length): 92.23223277687543
without DRIFT: 38
current DRIFT (curve length): 72.319206502675
current DRIFT (polyine length): 76.01281840626231
without DRIFT: 38
current DRIFT (curve length): 71.5159303576198
current DRIFT (polyine length): 75.05306192936823
